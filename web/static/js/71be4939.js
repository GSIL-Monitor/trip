/**
 * Created by Administrator on 2018/2/9.
 */
//Timestamp 20170907V3 xfxiao xiaoywang wangry !function ($) { 'use strict'; var _$ = function (selector) { return $('div[styletag="car"]').find(selector); } var getEnvironment = function () { var currentHost = window.location.host; if (currentHost.indexOf(".dev.") > 0 || currentHost.indexOf("localhost") >= 0) return "dev"; else if (currentHost.indexOf(".fat") > 0) return "fat"; else if (currentHost.indexOf(".uat.qa.nt") > 0) return "uat_nt"; else if (currentHost.indexOf(".uat.") > 0) return "uat"; else if (currentHost.indexOf(".lpt") > 0) return "lpt"; else return "pro"; }; var environmentName = getEnvironment(), baseUrl = environmentName == "dev" ? 'car.fat484.qa.nt.ctripcorp.com' : ((environmentName == "fat" || environmentName == "lpt") ? 'car.fat75.qa.nt.ctripcorp.com' : (environmentName == "uat" ? 'car.ctrip.com' : (environmentName == "uat_nt" ? 'car.ctrip.com' : 'car.ctrip.com'))), cookieKey = 'CarHistoryCity', searchBox = [ { dom: $('#searchBox'), cHeight: 334, rHeight: 300 }, { dom: $('#searchBox #searchBoxUl'), cHeight: 334, rHeight: 300 }, { dom: $('#searchBox .s_content'), cHeight: 310, rHeight: 275 }];//searchbox_animate var datasUrl = '/carHome/CtripHome/CtripData'; var PluginsVersion = { "tab": "1.2", "address": "1.0", "calendar": "6.0", "notice": "1.0", "validate": "1.1", "jmp": "1.0" } var pageHtml = '{{if $data.page.max>1}}
{{if $data.page.current>0}}<-{{/if}}{{if $data.page.current<2}}{{loop(index) Math.min(5,$data.page.max+1)}}${index+1}{{/loop}}{{else $data.page.current>$data.page.max-2}}{{loop(index) Math.max(0,$data.page.max-4),$data.page.max+1}}${index+1}{{/loop}}{{else}}{{loop(index) Math.max(0,$data.page.current-2),Math.min($data.page.current+3,$data.page.max+1)}}${index+1}{{/loop}}{{/if}}{{if $data.page.current<$data.page.max}}->{{/if}}
{{/if}}'; String.prototype.CarFilterReplace = function (pageHtml) { return this.replace(/@Car_Page/g, pageHtml); } String.prototype.CarVerticalBarDeCode = function () { return this.replace(/&csg;/g, "|"); } String.prototype.Car_ParseDate = function () { var str = this.replace(/-/g, "/"); return new Date(str); } $.isArray = function (arr) { return arr instanceof Array; } Array.prototype.CarContains = function (p, k) { for (var i = 0; i < this.length; i++) { var th = this[i]; if ((k && th[k] == p[k]) || (!k && th == p)) return i; } return -1; } $.fn.carAny = function () { return this.length > 0; } //改变搜索框高度 f:指示是否是还原搜索框高度，im表示搜索框增高后的高度增量 var changeHeight = function (f, im) { im = im || 0; for (var i = 0; i < searchBox.length; i++) { var info = searchBox[i]; //animate(info.dom, (f ? info.rHeight : info.cHeight) + im); info.dom.removeClass('searchbox_animate').animate({ 'height': ((f ? info.rHeight : info.cHeight) + im) }, 0); } } //还原搜索框高度 var restoreHeight = function () { changeHeight(1); } var setHistory = function (type, obj) { if (!obj || !type) return; var expires = 30,//cookie保存天数 len = 5,//历史记录最大个数 cookie; try { cookie = $.parseJSON($.cookie.get(cookieKey, type)) } catch (e) { cookie = null; } cookie = cookie == null || !$.isArray(cookie) ? [] : cookie; var ck = typeof cookie[0] == 'object' ? 'key' : ''; var i = cookie.CarContains(obj, ck); if (i != -1) cookie.splice(i, 1); cookie.push(obj); if (cookie.length > len) cookie = cookie.slice(cookie.length - len); $.cookie.set(cookieKey, type, $.stringifyJSON(cookie), { path: '/', expires: expires }) } var getHistory = function (type) { try { return ($.parseJSON($.cookie.get(cookieKey, type)) || []).reverse(); } catch (e) { return null; } } $.mod.load('validate', PluginsVersion.validate); $.mod.load('address', PluginsVersion.address); $.mod.load('tab', PluginsVersion.tab, function () { var chfConfig = { listeners: { initEventCallback: function (a, b, c, d) { $('#chf_flightSubSwitch [name="flightway"]:checked')[0].click(); } }, options: { tab: "input", //切换的标签 panel: "#cs_chf>div", save: true }, style: { tab: ['_current', '_nocurrent'], panel: { display: ['block', 'none'] } } } var ochConfig = { listeners: { initEventCallback: function (a, b, c, d) { $('#och_flightSubSwitch [name="flightway"]:checked')[0].click(); } }, options: { tab: "input", //切换的标签 panel: "#cs_och>div", save: true }, style: { tab: ['_current', '_nocurrent'], panel: { display: ['block', 'none'] } } } var odayConfig = { listeners: { initEventCallback: function (a, b, c, d) { $('#day_SubSwitch [name="travelway"]:checked')[0].click(); } }, options: { tab: "input", //切换的标签 panel: "#cs_day>div", save: true }, style: { tab: ['_current', '_nocurrent'], panel: { display: ['block', 'none'] } } } //国内接送机tab var ins = $('#chf_flightSubSwitch').regMod('tab', PluginsVersion.tab, chfConfig); //海外接送机tab var ons = $('#och_flightSubSwitch').regMod('tab', PluginsVersion.tab, ochConfig); //日租包车tab var ons = $('#day_SubSwitch').regMod('tab', PluginsVersion.tab, odayConfig); }); var tooltip = function (dom, txt) { var ins; $.mod.load('jmp', PluginsVersion.jmp, function () { ins = $(dom).regMod('jmp', PluginsVersion.jmp, { options: { save: true, showArrow: false, boundaryShow: false, css: { maxWidth: 180, minWidth: 100 }, position: 'bottomLeft-topLeft', classNames: { boxType: 'jmp_title usecar_margin' }, template: '#car_jmp_tooltip', content: { txt0: txt } } }); }); return ins; } var _v = $(document).regMod('validate', PluginsVersion.validate) var showErrorMsg = function (dom, msg) { _v.method("show", { $obj: dom, data: msg, removeErrorClass: true, isScroll: false }); } var ENCODE = location.hostname.indexOf(".big5.") === -1 ? "gb2312" : "big5"; var guid = 0; var createFrom = function (pParam, pAction, pMethod, isNew) { var _form = document.createElement("FORM"), _inner = [], _guid = guid++; isNew && (_form.target = "_blank"); _form.method = pMethod || "get"; for (var name in pParam) { _inner.push([''].join("")); } _inner.push([''].join("")); _form.action = pAction; _form.innerHTML = _inner.join(""); document.body.appendChild(_form); //console.log(_form); return _form; } var sumbitForm = function (pParam, pAction, pMethod, isNew) { var _form = createFrom(pParam, pAction, pMethod, isNew); _form.submit(); } var leftPad = function (string, size, character) { var result = String(string); character = character || " "; while (result.length < size) { result = character + result; } return result; }; var fillHour = function (el, value, start, end) { if (!el) { return; } start = start || 0; end = end || 24; el.options.length = 0; for (var i = start; i < end; i++) { el.options[i - start] = new Option(leftPad(i, 2, '0'), leftPad(i, 2, '0')); } el.value = value; }; var fillMinute = function (el, value) { if (!el) { return; } el.options.length = 0; for (var i = 0; i < 6; i++) { el.options[i] = new Option(leftPad(i * 10, 2, '0'), leftPad(i * 10, 2, '0')); } el.value = value; }; var fillDate = function (el, startDate, endDate) { el.regMod('calendar', PluginsVersion.calendar, { options: { minDate: startDate, maxDate: endDate, autoShow: true, showWeek: false } }); }; var bindSelect = function (dom, data, selectedIndex) { if (!dom) return; selectedIndex = selectedIndex || 0; dom.options.length = 0; for (var i = 0, l = data.length; i < l; i++) { dom.options[i] = new Option(data[i].Text, data[i].Value); } dom.value = data[selectedIndex].Value; } var fomatDate = function (date, hour, minute) { var date = date.split('-'); date.push(hour); date.push(minute); return date.join(""); } var fromDate = function (date, h, min) { try { date = date.split('-'); var y = date[0] - 0, m = date[1] - 0, d = date[2] - 0, h = h - 0, min = min - 0; return new Date(y, m - 1, d, h, min); } catch (e) { } return undefined; } var encodeURI = function (value) { var encoded = encodeURIComponent(value); if (encoded) { return encoded.split('%').join('_'); } return '0'; }; var UrlMana = function (urlInfo) { for (var k in urlInfo) { var url = urlInfo[k]; urlInfo[k] = '//' + baseUrl + url; } return urlInfo; } var jsonp = function (url, callback, error) { error = error || function () { } $.jsonp(url, { onload: callback, onerror: error }); } var now = new Date(), dtime = now.addMinutes(30), zstart = now.addDays(1).addHours(1), zend = zstart.addDays(2), zmend = now.addMonths(3); if (dtime.getMinutes() <= 30) { dtime = new Date(dtime.getFullYear(), dtime.getMonth(), dtime.getDate(), dtime.getHours(), 30, 0, 0); } else { dtime = new Date(dtime.getFullYear(), dtime.getMonth(), dtime.getDate(), dtime.getHours() + 1, 0, 0, 0); } var zsdate = zstart.toFormatString('yyyy-MM-dd'), zmstart = zstart.addDays(-1).toFormatString('yyyy-MM-dd'), zMaxEnd = zmend.toFormatString('yyyy-MM-dd'), zedate = zend.toFormatString('yyyy-MM-dd'), date = dtime.toFormatString('yyyy-MM-dd'), hour = dtime.toFormatString('hh'), minute = dtime.toFormatString('mm'); var CarAddressHelp = { format: function (e) { var t = {}; for (var i in e) { t[i] = {}; if (i.search(/[A-Z]/i) != -1) { for (var n = 0; n < e[i].length; n++) { if (t[i][e[i][n]["group"]]) { t[i][e[i][n]["group"]].push(e[i][n]) } else { t[i][e[i][n]["group"]] = []; t[i][e[i][n]["group"]].push(e[i][n]) } } } else { for (var n = 0; n < e[i].length; n++) { if (t[i][""]) { t[i][""].push(e[i][n]) } else { t[i][""] = []; t[i][""].push(e[i][n]) } } } } return t }, highlight: function (e, t) { var i = ["\\", "^", "$", ".", "*", "+", "=", ":", "|", "/", "(", ")", "[", "]", "{", "}"]; for (var n = 0; n < i.length; n++) { t = t.replace(i[n], "\\" + i[n]) } var a = new RegExp(t, "i"); return e.replace(a, "$&") } }; var getHistoryHtml = function (type) { var html = ''; //type = enumCookieType[enumCityType[type]]; var history = getHistory(type); if (history && $.isArray(history) && history.length > 0) { html = '
搜索历史

'; history.each(function (info) { if (info.key && info.name) html += '" + info.name + ''; }); html += '
'; } return html; } var initChfCity = function (dom, type, data, chang_fn) { var suggestionStyle = '.city_select_lhsl{width:408px;padding:10px;border:1px solid #999;background-color:#fff}.city_select_lhsl .close{float:right;width:20px;height:20px;color:#666;text-align:center;font:bold 16px/20px Simsun}.city_select_lhsl .close:hover{text-decoration:none;color:#ffa800}.city_select_lhsl .title{margin-bottom:10px;color:#999}.city_select_lhsl .tab_box{width:100%;height:22px;margin-bottom:6px;margin-top:0;border-bottom:2px solid #ccc}.city_select_lhsl .tab_box li{position:relative;float:left;display:inline;margin-right:2px;line-height:22px;cursor:pointer}.city_select_lhsl .tab_box li b{display:none}.city_select_lhsl .tab_box li span{padding:0 8px}.city_select_lhsl .tab_box .hot_selected{border-bottom:2px solid #06c;margin-bottom:-2px;font-weight:bold;color:#06c}.city_select_lhsl .tab_box .hot_selected b{position:absolute;top:23px;left:50%;display:block;width:0;height:0;margin-left:-5px;overflow:hidden;font-size:0;line-height:0;border-color:#06c transparent transparent transparent;border-style:solid dashed dashed dashed;border-width:5px}.city_select_lhsl .city_item,.city_select_lhsl .search_history_box{display:inline-block;*zoom:1;overflow:hidden}.city_select_lhsl .city_item{width:408px}.city_select_lhsl .city_item a,.city_select_lhsl .search_history_box a{float:left;display:inline;width:52px;height:22px;margin:0 2px 2px 0;padding-left:8px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;line-height:22px;color:#333}.city_select_lhsl .city_item a:hover,.city_select_lhsl .search_history_box a:hover{background-color:#2577e3;text-decoration:none;color:#fff}.city_item .city_item_in{width:378px;padding-left:30px;*zoom:1}.city_item .city_item_in:after,.city_select_lhsl .search_history_box:after{display:block;height:0;visibility:hidden;overflow:hidden;content:".";clear:both}.city_item .city_item_letter{float:left;width:30px;height:22px;margin-left:-30px;line-height:22px;text-align:center;color:#e56700}.city_select_lhsl .sarch_history_title{margin-bottom:2px;font-weight:bold;color:#06c}.city_select_lhsl .search_history_box{margin-bottom:6px}'; var chfSuggestion = '{{if (data = message.Help.format(data))}}{{/if}}
×\ {{tmpl message.searchHistoryList }}
{{enum(key) data}}
${key}{{/enum}}
\ {{enum(key,objs) data}}
{{enum(k,arr) objs}}{{if (k)}}
${k}{{else}}
{{/if}}{{each(index, item) arr}}\ ${item.display}{{/each}}
{{/enum}}
{{/enum}}
'; chang_fn = chang_fn || function () { } var _ref, suggestionInit = function (e) { var t = e.find(".tab_box li"); var i = e.find("div.city_item"); if (!t.length) { return } function n() { var e = this; t.each(function (t, n) { if (t[0] == e) { t.addClass("hot_selected"); i[n].style.display = "" } else { t.removeClass("hot_selected"); i[n].style.display = "none" } }) } t.bind("mousedown", n); n.apply(t[0]); var $box = e.find(".search_history_box"); $box.bind($.browser.isIPad ? "touchend" : "mousedown", function (s) { var l = s.target || s.srcElement || s.host; if (l.tagName === "A") { var val = $(l).attr("data-val"); dom.removeClass("inputSel") dom.value($(l).text()); dom.attr("data-val", val); _ref.method('hidden'); $box.html($box.html()); chang_fn(val); } }); e.find(".close").bind("mousedown", function (e) { e.stop(); dom[0].blur(); }) }; _ref = $(dom).regMod('address', PluginsVersion.address, { name: 'city_' + type, source: { suggestion: data }, template: { padVersion: "2.0", suggestion: chfSuggestion, suggestionStyle: suggestionStyle, suggestionInit: suggestionInit, suggestionIpad: chfSuggestion, suggestionStyleIpad: suggestionStyle, suggestionInitIpad: suggestionInit }, isIframe: false, isFilterSelect: false, isFocusNext: false, isAutoCorrect: false, charset: ENCODE, message: { Help: CarAddressHelp, searchHistoryList: getHistoryHtml(type) } }); _ref.method('bind', 'change', function () { var val = arguments[1].data.split("|"); val = val.length == 3 ? val[2] : ""; dom.attr("data-val", val); chang_fn(val); }); return _ref; }; window.Car_GaoDeJsonpCallBack = function (data) { var key = $(document.activeElement).value() || ''; key = key.trim().replace(/[\|@\u2006]/g, '').replace(/[\|@]/g, ''); var result = { key: key, data: '' }; var pois = data.pois, i, l, poi; if (pois && pois.length > 0) { for (i = 0, l = pois.length; i < l; i++) { poi = pois[i]; poi.address = poi.pname + (poi.pname == poi.cityname ? '' : poi.cityname) + (poi.adname == poi.address ? '' : poi.adname) + poi.address; result.data += '@as|' + poi.name.replace(/\|/g, '&csg;') + '|' + poi.location + '|' + poi.cityname + '|' + poi.address; } } cQuery.jsonpResponse = result; } var iniGaodeAddress = function (dom, city, type) { if (!city) return null; var _ref, $dom = $(dom), firstEle = { text: '', value: '' }; var opt = { key: '0e9680eed7f5ffc60a7b02167d0182a3', pagesize: 49, page: 1, extensions: 'all' }, filterHtml = '
\
×\ {{if hasResult}}{{tmpl message.filterResult}}{{else}}{{tmpl message.noFilterResult}}{{/if}}

\
\ {{if ($data.list=$data.list||[])}}{{/if}}\ {{each (i,item) $data.list}}\ {{if (arr=item.data.split("|"))}}{{/if}}\ \
{{tmpl message.Help.highlight(arr[1].CarVerticalBarDeCode(), $data.val)}}

\
${arr[4]}

\ \ {{/each}}
@Car_Page
'; function getJsonpFilter(city) { return ['//restapi.amap.com/v3/place/text?keywords=${encodeURI(unescape(decodeURIComponent(key)))}', '&key=', opt.key, '&city=', window.encodeURI(city), '&types=', '&offset=', opt.pagesize, '&page=', opt.page, '&extensions=', opt.extensions, //'&s=rsv3', '&callback=Car_GaoDeJsonpCallBack' ].join(''); } var gaodeFiltersUrl = getJsonpFilter(city); _ref = $dom.regMod('address', PluginsVersion.address, { name: 'gaode_' + type, source: { suggestion: '' }, jsonpFilter: gaodeFiltersUrl, isAutoCorrect: false, delay: 200, template: { dom: dom, suggestion: '', suggestionStyle: '', filter: filterHtml.CarFilterReplace(pageHtml), filterStyle: '.keyword_prompting_lhsl .title{border:none;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}.item_list_areaaddress{color:#999;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}.hover .delivered_address{color:#fff;}.c_page_mini a.hover{background-color:#fff;color:#06c;text-decoration:underline;}.delivered_address{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}', filterPageSize: 7, filterInit: function (e) { var $title = e.find('p.title'), $box = e.find('div.item_list_city'); if (!$box || $box.find('*').length == 0) { $box.remove(); $title.css('border-bottom', 'none'); } firstEle = { text: $dom.value(), value: '' }; $dom.attr('data-val', ''); var $first = e.find('a[data]:eq(0)'); if ($first.length > 0) { firstEle.value = $first.attr('data'); firstEle.text = firstEle.value.split('|')[1].CarVerticalBarDeCode(); } e.find(".close").bind("mousedown", function (e) { e.stop(); dom[0].blur() }); } }, message: { filterResult: '${$data.val}，若需缩小范围，请输入更多条件。', noFilterResult: '对不起，找不到地址：${val}', Help: CarAddressHelp } }); _ref.method('bind', 'userinput', function (a, b, c, d) { var $th = $(this); if (b.eventType && !$th.attr('data-val') && firstEle.value) { $th.value(firstEle.text); $th.attr('data-val', firstEle.value); } }); _ref.method('bind', 'change', function (a, b) { var val = b.data.split('|'), $th = $(this); $th.value(val[1].CarVerticalBarDeCode()); $th.attr('data-val', b.data); this.blur(); //this.focus(); }); return { clearAutoCache: function () { firstEle = { text: '', value: '' } }, setCity: function (city) { _ref.set('jsonpFilter', getJsonpFilter(city)); } }; } var iniHotelAddress = function (dom, cityID, type) { if (!cityID || dom.length == 0) return null; var _ref, $dom = $(dom), firstEle = { text: '', value: '' }; var opt = { key: '0e9680eed7f5ffc60a7b02167d0182a3', pagesize: 49, page: 1, extensions: 'all' }, filterHtml = '
\
×\ {{if hasResult}}{{tmpl message.filterResult}}{{else}}{{tmpl message.noFilterResult}}{{/if}}

\
\ {{if ($data.list=$data.list||[])}}{{/if}}\ {{each (i,item) $data.list}}\ {{if (arr=item.data.split("|"))}}{{/if}}\ \ ${arr[8]}，${arr[4]}\
{{tmpl message.Help.highlight(arr[1].CarVerticalBarDeCode(), $data.val)}}

\
${arr[9]}

\ \ {{/each}}
@Car_Page
'; //{{if hasResult;debugger;}}{{/if}}\ function getJsonpFilter(cityID) { return [UrlMana({ url: '/carHome/ctriphome/ochaddr' }).url, '?keyword=${encodeURI(unescape(decodeURIComponent(key)))}', '&CityID=', cityID, '&count=', 7 ].join(''); } var hotelFiltersUrl = getJsonpFilter(cityID); _ref = $dom.regMod('address', PluginsVersion.address, { name: 'gaode_' + type, source: { suggestion: '' }, jsonpFilter: hotelFiltersUrl, isAutoCorrect: false, delay: 200, template: { dom: dom, suggestion: '', suggestionStyle: '', filter: filterHtml.CarFilterReplace(pageHtml), filterStyle: '.keyword_prompting_lhsl .title{border:none;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}.item_list_areaaddress{color:#999;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}.hover .delivered_address{color:#fff;}.c_page_mini a.hover{background-color:#fff;color:#06c;text-decoration:underline;}.delivered_address{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}', filterPageSize: 7, filterInit: function (e) { var $title = e.find('p.title'), $box = e.find('div.item_list_city'); if (!$box || $box.find('*').length == 0) { $box.remove(); $title.css('border-bottom', 'none'); } firstEle = { text: $dom.value(), value: '' }; $dom.attr('data-val', ''); var $first = e.find('a[data]:eq(0)'); if ($first.length > 0) { firstEle.value = $first.attr('data'); firstEle.text = firstEle.value.split('|')[1].CarVerticalBarDeCode(); } e.find(".close").bind("mousedown", function (e) { e.stop(); dom[0].blur() }); } }, message: { filterResult: '${$data.val}，若需缩小范围，请输入更多条件。', noFilterResult: '对不起，找不到地点/酒店：${val}', Help: CarAddressHelp } }); _ref.method('bind', 'userinput', function (a, b, c, d) { var $th = $(this); if (b.eventType && !$th.attr('data-val') && firstEle.value) { $th.value(firstEle.text); $th.attr('data-val', firstEle.value); } }); _ref.method('bind', 'change', function (a, b) { var val = b.data.split('|'), $th = $(this); $th.value(val[1].CarVerticalBarDeCode()); $th.attr('data-val', b.data); this.blur(); //this.focus(); }); return { clearAutoCache: function () { firstEle = { text: '', value: '' } }, setCity: function (cityID) { _ref.set('jsonpFilter', getJsonpFilter(cityID)); } }; } //国内自驾 function isd() { var isdRegion, $isd = _$('#cs_isd'), type = 'isd'; var url = UrlMana({ isdRegionUrl: '/carHome/ctriphome/getzonelist' }); var $$ = function (selector) { return $isd.find(selector); } var elements = { from: $$('#cs_isd_from'), circle: $$('#cs_isd_circle'), startDate: $$('#cs_isd_start_date'), startHour: $$('#cs_isd_start_hour'), startMinute: $$('#cs_isd_start_minute'), endDate: $$('#cs_isd_end_date'), endHour: $$('#cs_isd_end_hour'), endMinute: $$('#cs_isd_end_minute'), button: $$('#cs_isd_button') }; var initIsdRegion = function (cityid) { var suggestion = '
\ ×\ {{enum(key,arr) data}}\
${key}

\
\ {{each arr}}${display}{{/each}}\
\ {{/enum}}\
'; var suggestionStyle = '.car_return_area{width:403px;border:1px solid #959595;background:#fff;position:absolute;z-index:99;}' + '.car_return_title{color:#999999;padding:10px 10px 0;}' + '.car_return_title .close{background:none;float: right;width: 20px;height: 20px;color: #666;text-align: center;font: bold 16px/20px Simsun;}' + '.car_return_title .close:hover{text-decoration:none;color: #FFA800;}' + '.car_return_area h3{padding:10px 10px 0;font-size:12px;color:#5a5a5a;clear:both;}' + '.car_return_address{padding:5px;clear:both;}' + '.car_return_address a{float:left; height:22px; padding:0 15px 0 5px; border:1px solid #fff; line-height:22px; white-space:nowrap;color:#333}' + '.car_return_address a:hover{border:1px solid #ACCCEF; background-color:#E8F4FF; text-decoration:none;}'; var suggestionInit = function (e) { e.find(".close").bind("mousedown", function (e) { e.stop(); elements.circle[0].blur(); }) } jsonp(url.isdRegionUrl + '?cityID=' + cityid + '&v=' + new Date().valueOf(), function (result) { isdRegion = elements.circle.regMod('address', PluginsVersion.address, { name: "CarBookingarea", source: { suggestion: result, filter: {} }, template: { padVersion: "2.0", suggestion: suggestion, suggestionStyle: suggestionStyle, suggestionInit: suggestionInit, suggestionIpad: suggestion, suggestionStyleIpad: suggestionStyle, suggestionInitIpad: suggestionInit, filter: '
' }, isFilterSelect: false, isFocusNext: false, isAutoCorrect: false, charset: ENCODE, message: { suggestion: "" } }); isdRegion.method('bind', 'change', function () { var circle = elements.circle; circle.attr("data-val", arguments[1].items[2]); circle.attr("data-latitude", arguments[1].items[3]); circle.attr("data-longitude", arguments[1].items[4]); }); }); } var submitIsd = function (from, circle, sdate, shour, sminute, edate, ehour, eminute) { var dataCity = from.attr("data-val"); if (!dataCity) { _v.method("show", { $obj: $(from), data: "请选择用车城市", removeErrorClass: true, isScroll: false }); return; } shour = shour ? shour.value : "00"; sminute = sminute ? sminute.value : "00"; ehour = ehour ? ehour.value : "00"; eminute = eminute ? eminute.value : "00"; var sDate = fromDate(sdate.value, shour, sminute), eDate = fromDate(edate.value, ehour, sminute); if (sdate.value == '' || !sDate) { _v.method("show", { $obj: $(sdate), data: "请选择取车时间", removeErrorClass: true, isScroll: false }); return; } if (sDate < new Date()) { _v.method("show", { $obj: $(sdate), data: "取车时间必须大于当前时间", removeErrorClass: true, isScroll: false }); return; } if (edate.value == '' || !eDate) { _v.method("show", { $obj: $(edate), data: "请选择还车时间", removeErrorClass: true, isScroll: false }); return; } if (sDate >= eDate) { _v.method("show", { $obj: $(edate), data: "还车时间必须大于取车时间", removeErrorClass: true, isScroll: false }); return; } var param = []; param.push('pcity=' + from.attr('data-val')); param.push('plng=' + circle.attr('data-longitude') || 0); param.push('plat=' + circle.attr('data-latitude') || 0); param.push('ptime=' + fomatDate(sdate.value, shour, sminute)) param.push('rtime=' + fomatDate(edate.value, ehour, eminute)) param.push('address=' + encodeURIComponent(circle.value())); param.push('src=', 'complex'); setHistory(type, { key: from.attr('data-val'), name: from.value() }); window.open('http://' + baseUrl + '/zijia/search?' + param.join('&')); } var addressNotice; //公开成员 $.extend(this, { url: url, type: type, elements: elements, submitIsd: submitIsd, init: function () { this.initNotice(); $.mod.load('calendar', PluginsVersion.calendar, function () { fillDate(elements.startDate, zmstart, zMaxEnd); fillDate(elements.endDate, zmstart, zMaxEnd); }); $(elements.button).bind('click', function () { submitIsd(elements.from, elements.circle, elements.startDate[0], elements.startHour[0], elements.startMinute[0], elements.endDate[0], elements.endHour[0], elements.endMinute[0]); }); fillHour(elements.startHour[0], '10', 8, 21); fillMinute(elements.startMinute[0], '00'); fillHour(elements.endHour[0], '10', 8, 21); fillMinute(elements.endMinute[0], '00'); elements.startDate.value(zsdate); elements.endDate.value(zedate); }, setData: function (data) { initIsdRegion(data.defaultcity.CityID); initChfCity(elements.from, type, data.Isd, function (CityID) { var circle = elements.circle; circle.value(''); circle.attr("data-val", ''); circle.attr("data-latitude", ''); circle.attr("data-longitude", ''); addressNotice && addressNotice.method('checkValue'); if (isdRegion) { jsonp(url.isdRegionUrl + '?cityID=' + CityID + '&v=' + new Date().valueOf(), function (result) { isdRegion.set('source', { suggestion: result }); }); } }); elements.from.value(data.defaultcity.CityName); elements.from.attr("data-val", data.defaultcity.CityID); elements.from.removeClass("inputSel"); }, //初始化占位符 initNotice: function () { var version = PluginsVersion.notice; $.mod.load('notice', version, function () { elements.from.regMod('notice', version, { name: 'IsdFrom', tips: "请选择城市", selClass: "inputSel" }); addressNotice = elements.circle.regMod('notice', version, { name: 'IsdCircle', tips: "商圈/地标", selClass: "inputSel" }); }); } }); this.init(); } //海外接送机 function och(type) { type = type || 'jie'; var $och = _$('#cs_och_' + type), isjie = type == 'jie', strType = type == 'jie' ? '送达' : '出发', aType = type == 'jie' ? '接' : '送', intType = type == 'jie' ? 17 : 18, parameters = { p: 17, //17:接机 18:送机 f: "", //航班号 t: "" //用车时间 }, th = this, combox, airportNotice, floAddress, airAddress; var url = UrlMana({ flightNoSearchUrl: '/carHome/CtripHome/FlightNoSearch?keyword=${encodeURI(unescape(decodeURIComponent(key)))}', ochSearchUrl: '/chpub/carrier', chfSearchUrl: '/chpub/carrier', flightInfoUrl: '/carhome/ctriphome/getchflight', ochSearchAddresses: '/carhome/ctriphome/GetOchDistrict', airportUrl: '/carHome/ctriphome/GetOchLocationList?keyword=${encodeURI(unescape(decodeURIComponent(key)))}' }); url.ochSearchUrl = 'http://' + baseUrl + '/chpub/carrier'; url.chfSearchUrl = 'http://' + baseUrl + '/chpub/carrier'; var flightNoData = { bizType: 33, ptType: intType, useDt: '', poiNm: '', poiAddr: '', poiLng: '', poiLat: '', locSubCd: '', locCd: '', flNo: '', qryDptDt: '', type: '', cityId: 0 }; var $$ = function (selector) { if (type) { var reg = new RegExp("@@", "g"); selector = selector.replace(reg, type); } return $och.find(selector); } var elements = { from: $$('#och_@@_fno'), date: $$('#och_@@_date'), address: $$('#och_@@_address'), adult: $$('#och_@@_adult'), children: $$('#och_@@_children'), baby: $$('#och_@@_baby'), loading: $och.find('.s_item_loading'), none: $$('#och_@@_none'), airport: $$('#och_@@_airport'), airportParent: $$('#och_@@_airport').parentNode().parentNode(), note1: $$('#och_@@_note1'), note: $$('#och_@@_note2'), warn: $$('#och_@@_warn'), button: $$('#och_@@_button'), personer: $$('#och_@@_personer'), //以下是【机场预定】元素 air_Name: $$('#och_@@_air_name'), air_Date: $$('#och_@@_air_date'), air_Hour: $$('#och_@@_air_hour'), air_Minute: $$('#och_@@_air_minute'), air_Address: $$('#och_@@_air_address'), air_Adult: $$('#och_@@_air_adult'), air_Children: $$('#och_@@_air_children'), air_Baby: $$('#och_@@_air_baby'), air_Button: $$('#och_@@_air_button') }; var selectRange = { '成人': [1, 10], '儿童': [0, 10], '婴儿': [0, 10], '时': { val: ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'] }, '分': { val: ['00', '10', '20', '30', '40', '50'] } }; var getFlightInfo = function () { var fno = elements.from.value(), date = elements.date.value(); var $airport = elements.airport; $airport.attr('data-val', ''); $airport.value(''); airportNotice && airportNotice.method('checkValue'); elements.airportParent.css('display', 'none'); th.hideNone(); th.hideNote1(); th.hideNote(); th.hideWarn(); restoreHeight(); elements.address.value(''); elements.address.attr('data-val', ''); floAddress && floAddress.method('checkValue'); if (!fno) return false; if (!th.validateFlightNo(fno)) { showErrorMsg(elements.from, "请输入正确的航班号"); return false; } th.showLoading('正在查询航班信息'); th.disabled(); jsonp(url.flightInfoUrl + '?FlightNo=' + fno + '&DepartureDate=' + date + '&Type=' + intType + '&v=' + new Date().valueOf(), function (data) { th.hideLoading(); th.enabled(); if (!data || !data.Airports || data.length < 2) { th.showNone(); return; } if (data.Airports.length == 2) { searchAddresses.apply(th, [data.Airports[isjie ? 1 : 0]]); } else { changeHeight(); th.showNote1(); th.bindAirport(data); } }, function () { th.hideLoading(); th.showNone(); th.enabled(); }); } //查询区域地址 @info:机场信息对象 var searchAddresses = function (info) { elements.airport.trigger('blur'); th.hideNote1(); th.hideWarn(); th.hideNote(); if (!info || !info.AirportCode) return; var stime = info.Date + ' ' + info.Time; flightNoData.useDt = stime; flightNoData.locCd = info.AirportCode; flightNoData.locSubCd = info.TerminalId; flightNoData.flNo = info.FlightNo; flightNoData.bizType = (info.CountryId && th.getBizType(info.CountryId, info.CityID) == 32) || (info.IsInService == true || info.CityID == 58 || info.CityID == 617) ? 32 : 33;//“我的航班”过来的数据没有CountryID flightNoData.cityId = info.CityID; elements.from.value(info.FlightNo); if (flightNoData.bizType == 32) { elements.personer.hide(); } else { elements.personer.show(); } elements.address.value(''); elements.address.attr('data-val', ''); floAddress && floAddress.method('checkValue'); if (th.floHotelAddrHandle) { th.floHotelAddrHandle.clearAutoCache(); th.floHotelAddrHandle.setCity(info.CityID); } type == 'jie' ? th.showNote('预计' + stime + '抵达' + info.CityName + info.Airport + ',晚点司机将免费等待') : th.showNote('预计' + stime + '起飞离开' + info.CityName + info.Airport); //th.showLoading('正在查询区域信息'); //th.disabled(); //jsonp(url.ochSearchAddresses + '?code=' + code + '&v=' + new Date().valueOf(), function (data) { // th.hideLoading(); // th.enabled(); // th.parameters.t = time.toFormatString("yyyyMMddhhmm"); // type == 'jie' ? // th.showNote('预计' + stime + '抵达' + info.CityName + info.Airport + ',晚点司机将免费等待') : // th.showNote('预计' + stime + '起飞离开' + info.CityName + info.Airport); // elements.address.removeClass('inputSel'); // bindSelect(elements.address[0], data); //}); } var flightNoAutoComplete = function (dom) { var filterView = '
    \
×\ {{if hasResult}}{{tmpl message.filterResult}}{{else}}{{tmpl message.noFilterResult}}{{/if}}

\
\ {{if ($data.list=$data.list||[])}}{{/if}}\ {{each (i,item) $data.list}}\ {{tmpl message.Help.highlight(item.data, $data.val)}}\ {{/each}}\
\ @Car_Page\
'.CarFilterReplace(pageHtml); var filterStyle = '.keyword_prompting_lhsl .title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}'; var _ref = $(dom).regMod('address', '1.0', { name: elements.from, source: { suggestion: '' }, jsonpFilter: url.flightNoSearchUrl, template: { suggestion: '', suggestionStyle: '', filter: filterView, filterStyle: filterStyle, filterInit: function (e) { var $title = e.find('p.title'), $box = e.find('div.item_list_city'); if (!$box || $box.find('*').length == 0) { $box.remove(); $title.css('border-bottom', 'none'); } e.find(".close").bind("mousedown", function (e) { e.stop(); dom[0].blur(); }); } }, message: { filterResult: '输入航班号，例如“MU547”', Help: CarAddressHelp, noFilterResult: '对不起，找不到航班号：${val}' } }); _ref.method('bind', 'change', function (a, b) { this.blur(); }); } var initCombox = function (dom) { var _ref; var suggestion = '\ {{each (i,item) data.Airports}}\ {{if (str = item.CityName+" "+item.Airport+"("+item.AirportCode+")")}}{{/if}}\ \
${str}

${item.Type+" "+item.Date+" "+item.Time}

\ {{/each}}\ '; var suggestionStyle = ''; var suggestionInit = function () { } _ref = $(dom).regMod('address', PluginsVersion.address, { name: 'och_area', source: { suggestion: '' }, template: { padVersion: "2.0", suggestion: suggestion, suggestionStyle: suggestionStyle, suggestionInit: suggestionInit, suggestionIpad: suggestion, suggestionStyleIpad: suggestionStyle, suggestionInitIpad: suggestionInit }, isIframe: false, isFilterSelect: false, isFocusNext: false, isAutoCorrect: false, charset: ENCODE }); return _ref; } var initOchAirport = function (dom, name, data) { if (dom.length == 0) { return; } var firstEle = { text: '', value: '' }, suggestionStyle = '.ico_key,.ico_unkey{width:92px;height:43px;padding-left:65px;background:url(//pic.c-ctrip.com/ctripOnPad/un_key20131012.png) 10px 11px no-repeat;cursor:pointer;line-height:40px;font-size:18px;border-width:1px;border-style:solid;border-radius:3px;}\ .ico_key{border-color:#f0f0f0 #cfcfcf #707070;box-shadow:0 1px 0 #cfcfcf,1px 0 0 0 #f0f0f0 inset,-1px 0 0 0 #f0f0f0 inset,0 -1px 0 0 #f0f0f0 inset;}\ .ico_unkey{border-color:#898989 #e2e2e2 #e2e2e2;background-color:#f5f5f5;box-shadow:0 -1px 0 #e2e2e2,0 1px 0 #d1d1d1 inset;}', //{{if cQuery.browser.isIPad}}{{else}}
支持中文/拼音/简拼输入

{{/if}} ochSuggestion = '{{if (data == message.Help.format(data));}}{{/if}}
\ {{if cQuery.browser.isIPad}}×
显示键盘
{{else}}\ ×
支持输入英文／中文／拼音／三字码

{{tmpl message.searchHistoryList }}{{/if}}\
{{enum(key) data}}
${key}{{/enum}}
\ {{enum(key,objs) data}}
{{var a = true;}}
{{enum(k,arr) objs}}{{if (k)}}\
${k}{{else}}
\ {{if $data.hasResult;}}{{/if}}\ {{/if}}{{each(index, item) arr}}${item[1]}\ {{/each}}{{if (a) == false}}
{{a == true}}\ {{else}}
{{a == false}}{{/if}}{{/enum}}
{{/enum}}
'; var ochFilter = '
\
\ ×\ {{if hasResult}}{{tmpl message.filterResult}}{{else}}{{tmpl message.noFilterResult}}{{/if}}\

\
\ {{each (i,item) list}}\ {{if (arr=message.getData(data))}}{{/if}}\ \ {{if (!ap)}}
机场
{{/if}}\ {{if (ap=1)}}{{/if}}\ {{tmpl message.format(arr[1],$data.val)}} - ${arr[6]+","+arr[4]}\ \ {{/each}}\
\ @Car_Page\
'.CarFilterReplace(pageHtml), ochFilterStyle = '.keyword_prompting_lhsl .item_list_airport a.hover .sug_category{background-position: right -67px;}.keyword_prompting_lhsl .item_list_areaadmin a.hover .sug_category{background-position: right -447px;}.keyword_prompting_lhsl .title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}'; var suggestionInit = function (e) { var t = e.find(".tab_box li"); var i = e.find("div.city_item"); if (!t.length) { return } function n() { var e = this; t.each(function (t, n) { if (t[0] == e) { t.addClass("hot_selected"); i[n].style.display = "" } else { t.removeClass("hot_selected"); i[n].style.display = "none" } }) } t.bind("mousedown", n); n.apply(t[0]); var $box = e.find(".search_history_box"); $box.bind($.browser.isIPad ? "touchend" : "mousedown", function (s) { var l = s.target || s.srcElement || s.host; if (l.tagName === "A") { var val = $(l).attr("data-val"); dom.removeClass("inputSel").value($(l).text()); dom.attr("data-val", val); _ref.method('hidden'); $box.html($box.html()); } }); e.find(".close").bind("mousedown", function (e) { e.stop(); dom[0].blur(); }); if (cQuery.browser.isIPad) { dom.attr("readonly", "readonly") e.find("#car_mini_keyboard").bind("click", function () { var e = dom[0], t = "readonly" != dom[0].getAttribute("readonly"); t ? (e.setAttribute("readonly", "readonly"), this.className = "ico_key") : (e.removeAttribute("readonly"), this.className = "ico_unkey"), e.blur(), e.select(), e.focus() }); } }; var $dom = $(dom); var _ref = $dom.regMod('address', '1.0', { name: name, source: { suggestion: data }, jsonpFilter: url.airportUrl, validate: function (isAccurate, fn, a) { this; }, template: { padVersion: "2.0", suggestion: ochSuggestion, suggestionStyle: suggestionStyle, suggestionInit: suggestionInit, suggestionIpad: ochSuggestion, suggestionStyleIpad: suggestionStyle, suggestionInitIpad: suggestionInit, filter: ochFilter, filterStyle: ochFilterStyle, filterIpad: ochFilter, filterStyleIpad: ochFilterStyle, filterInit: function (e) { var $title = e.find('p.title'), $box = e.find('div.item_list_city'); if (!$box || $box.find('*').length == 0) { $box.remove(); $title.css('border-bottom', 'none'); } firstEle = { text: $dom.value(), value: '' }; $dom.attr('data-val', ''); var $first = e.find('a[data]:eq(0)'); if ($first.length > 0) { firstEle.value = $first.attr('data'); firstEle.text = firstEle.value.split('|')[1]; } e.find(".close").bind("mousedown", function (e) { e.stop(); dom[0].blur() }); }, filterPageSize: 12 }, isIframe: false, isFocusNext: false, isAutoCorrect: false, charset: ENCODE, display: { left: 1, right: 2, value: 2 }, message: { Help: CarAddressHelp, suggestion: "请选择以下城市", searchHistoryList: getHistoryHtml(name), filterResult: '${$data.val}，若需缩小范围，请输入更多条件。', noFilterResult: '对不起，找不到地址：${val}', format: function (str, val) { var result = str.replace(/\(\w+\)$/i, '$&'); return CarAddressHelp.highlight(result, val); }, getData: function (data) { var arr = data.split('|'); var code = arr[2].split('_')[0]; arr[1] = arr[1] + (code ? "(" + code + ")" : ''); return arr; }, hasData: function (list) { var result = { hasAirport: false, hasZone: false }; if (!list || !$.isArray(list)) return result; var aArr = [], zArr = []; for (var i = 0; i < list.length; i++) { var type = list[i].data.split('|')[10]; if (type == 1) aArr.push(1); else if (type == 4) zArr.push(1); } result.hasAirport = aArr.length > 0; result.hasZone = zArr.length > 0; return result; } } }); _ref.method('bind', 'userinput', function (a, b, c, d) { var $th = $(this); if (b.eventType && !$th.attr('data-val') && firstEle.value) { $th.value(firstEle.text); $th.attr('data-val', firstEle.value); } }); _ref.method('bind', 'change', function (a, b) { var val = b.items, $th = $(this); if (val[0] == 'd') { $th.attr('data-val', b.data); $th.removeClass("inputSel"); this.blur(); } else { $th.attr('data-val', b.data); } }); return _ref; }; var submitOch = function () { var fno = elements.from.value(), d = elements.address.value(); if (!fno) { showErrorMsg(elements.from, '请输入您乘坐的航班号'); return false; } if (!th.validateFlightNo(fno)) { showErrorMsg(elements.from, "请输入正确的航班号"); return false; } if (elements.airportParent.css('display') != 'none' && !elements.airport.value()) { showErrorMsg(elements.airport, "请选择" + aType + "机机场"); return false; } //debugger; var addr = th.getAddress(1), ochUrl = url.ochSearchUrl, param = {}; if (flightNoData.bizType == 32) {//国内航班跳转 //ochUrl = url.ochUrl; /* param = { f: flightNoData.flNo, dt: elements.date.value().replace(/-/g, ''),//yyyyMMdd格式 p: flightNoData.ptType, t: flightNoData.useDt.Car_ParseDate().toFormatString("yyyyMMddhhmm"), a: escape(addr.nm), da: escape(addr.addr), location: th.lnglatEncrypt(addr.lng, addr.lat), c: flightNoData.locSubCd || flightNoData.locCd, ct: flightNoData.locSubCd ? 0 : isNaN(flightNoData.locCd) ? 3 : 2 };*/ param = { pttype: type == "jie" ? 17 : 18, udt: encodeURIComponent(flightNoData.useDt), stnddt: elements.date.value().replace(/-/g, ''), stnno: flightNoData.flNo, //stnnm: addr.locationName, stncd: flightNoData.locCd, stntype: "1", stnsubcd: flightNoData.locSubCd, poinm: encodeURIComponent(addr.nm), poiadr: encodeURIComponent(addr.addr || ''), poilng: addr.lng, poilat: addr.lat, cid: flightNoData.cityId, cnm: encodeURIComponent(addr.cNm), ctid: addr.ctId, ctnm: encodeURIComponent(addr.ctNm), s: "ctrip_home", } } else { /*按航班号预定 {host}/hwdaijia/{jie/song}-city{cityid}/airport{机场三字码}? flNo={航班号}&qryDptDt={起飞时间”yyyy-MM-dd”} &date={用车时间”yyyy-MM-dd HH-mm”} &persons={成人数},{儿童数},{婴儿数}& poiType=2&poiCd={地址ID}&poiLng={经度}&poiLat={维度}&poiNm={地址名称}&poiAddr={详细地址} ochUrl = ochUrl + type + '-city' + flightNoData.cityId + '/airport' + flightNoData.locCd; param = { flNo: flightNoData.flNo, qryDptDt: elements.date.value(), date: encodeURIComponent(flightNoData.qryDptDt), persons: [elements.adult.value(), elements.children.value(), elements.baby.value()].join(','), poiType: 2, poiCd: addr.cd, poiLng: addr.lng, poiLat: addr.lat, poiNm: encodeURIComponent(addr.nm), poiAddr: encodeURIComponent(addr.addr || '') }; */ //ochUrl = ochUrl; param = { pttype: type == "jie" ? 17 : 18, udt: encodeURIComponent(flightNoData.useDt), stnddt: elements.date.value().replace(/-/g, ''), stnno: flightNoData.flNo, //stnnm: addr.locationName, stncd: flightNoData.locCd, stntype: "1", stnsubcd: flightNoData.locSubCd, poinm: encodeURIComponent(addr.nm), poiadr: encodeURIComponent(addr.addr || ''), poilng: addr.lng, poilat: addr.lat, cid: flightNoData.cityId, cnm: encodeURIComponent(addr.cNm), ctid: addr.ctId, ctnm: encodeURIComponent(addr.ctNm), s: "ctrip_home" } } param.src = 'complex'; sumbitForm(param, ochUrl, "get", true); } var submitOchByAir = function () { var air = elements.air_Name.attr('data-val'), addr = elements.air_Address.attr('data-val'); if (!air) { showErrorMsg(elements.air_Name, '请选择机场'); return false; } if (!addr) { showErrorMsg(elements.air_Address, '请输入出发地点/酒店名称'); return false; } var addr = th.getAddress(), location = th.getLocation(), ochUrl = url.ochSearchUrl, param = {}; //debugger; var airsplit = air.split("|"); //ochUrl = url.chfSearchUrl; /* s=ctrip_home& //接/送机 pttype=17&18 //用车时间 udt=2016-06-03 12:00& //城市国家信息 cid=2&cnm=上海&ctid=1&ctnm=中国& //航班信息，航班出发，到达时间 stnno=mu2312&stnadt=2016-06-03 12:00&stnddt=2016-06-03 12:00& //机场信息 stntype=1&stncd=pvg&stnnm=浦东国际机场&stnsubcd=10001&stnsubnm=浦东国际机场T1& //火车站信息 stntype=2&stncd=152&stnnm=XX火车站 //送达地址信息 poinm=临空soho&poiadr=金钟路968号&poilat=0.0&poilng=0.0& */ param = { s: "ctrip_home", pttype: type == "jie" ? 17 : 18, udt: encodeURIComponent(elements.air_Date.value() + ' ' + elements.air_Hour.value() + ':' + elements.air_Minute.value()), cid: addr.cid, cnm: encodeURIComponent(addr.cNm), ctid: addr.ctId, ctnm: encodeURIComponent(addr.ctNm), stntype: "1", stncd: airsplit[1], stnnm: encodeURIComponent(airsplit[2]), stnsubcd: "", poinm: escape(addr.nm), poiadr: escape(addr.addr), poilat: addr.lat, poilng: addr.lng }; param.src = 'complex'; //console.log(param); sumbitForm(param, ochUrl, "get", true); } //公开成员 $.extend(this, { elements: elements, type: type, floHotelAddrHandle: null, airHotelAddrHandle: null, defData: { cityID: 725, cityName: '普吉国际机场', airData: 'd|HKT|普吉国际机场|725|1|普吉岛|4' }, airCity: 0,//承载机场搜索时的CityID encrypt: function (str) { var result = ""; str = str.replace(".", "$").split(''); for (var i = 0; i < str.length; i++) { result += " " + str[i]; } return result; }, lnglatEncrypt: function (lng, lat) { if (lng && lat) { var elng = this.encrypt(lng), elat = this.encrypt(lat); return escape(elng + "|" + elat); } }, url: url, flightNoData: flightNoData, submit: { flightNo: submitOch, airport: submitOchByAir }, ochSelectRange: selectRange, getBizType: function (countryID, cityID) { var bizType = countryID == 1 ? 32 : 33; if (cityID == 59) {//澳门 bizType = 33; } return bizType; }, getLocation: function () { var json = { bizType: 0, locationCode: "", locationName: "", terminal: "", terminalID: "", cityID: "", cityName: "", countryID: "", country: "" }, val = elements.air_Name.attr('data-val'); if (val) { val = val.split("|"); if (val[0] == "d") { json.locationCode = val[1]; json.locationName = val[2]; json.cityID = Number(val[3]); json.cityName = val[5]; json.country = val[6]; json.countryID = Number(val[7]); } else if (val[0] == "s") { var loc = val[3].split('_'); json.locationCode = loc[0]; json.locationName = val[2]; json.cityID = Number(val[1].split('_')[0]); json.cityName = val[7]; json.country = val[11]; json.countryID = Number(val[14]); json.terminal = loc[2] == 0 ? val[2] : ""; json.terminalID = loc[2] == 0 ? loc[1] : ""; } json.bizType = th.getBizType(json.countryID, json.cityID); } return json; }, getAddress: function (isFlNo) { var $el = isFlNo ? elements.address : elements.air_Address, json = { addr: "", cNm: "", cd: "", cid: "", ctId: "", ctNm: "", lat: 0, lng: 0, nm: $el.value(), type: "" }, val = $el.attr('data-val'); if (val && val.indexOf('|') != -1) { val = val.split('|'); json.type = val[2]; json.nm = val[1]; var loc = val[3]; if (loc.indexOf(',') != -1) { loc = loc.split(','); json.lat = loc[0]; json.lng = loc[1]; } json.ctNm = val[4]; json.ctId = val[5]; json.cid = val[6]; json.cd = val[7]; json.cNm = val[8]; json.addr = val.slice(9).join('|'); } return json; }, bindOchSelectData: function (dom, type, selectedIndex, extension) { type = type || '成人'; var range = selectRange[type]; if (!range) return; var data = []; if (range.val) { for (var i = 0; i < range.val.length; i++) { var val = range.val[i]; data.push({ Text: val + type, Value: val }); } } else { for (var i = range[0]; i <= range[1]; i++) { data.push({ Text: i + type, Value: i }); } } bindSelect(dom, data, selectedIndex); //扩展名不为空，则每次选中添加后缀 if (extension) { var $dom = $(dom), change = function () { var $sel = $dom.find('option:selected'); $dom.find('option').each(function (e) { var $th = $(e); $th.text($th.attr('old')); }) $sel.text(($sel.attr('old') || $sel.text()) + extension); } $dom.find('option').each(function (e) { var $th = $(e); $th.attr('old', $th.text()); }) change(); $dom.bind('change', change); } }, bindAirport: function (data) { if (!data.Airports && data.Airports.length < 3) return; var $airport = elements.airport; elements.airportParent.css('display', 'block'); data.Airports = type == 'jie' ? data.Airports.slice(1) : data.Airports.slice(0, data.Airports.length - 1); if (combox) { combox.set('source', { suggestion: data }); combox.method('hidden'); } //var airport = data.Airports[0]; //$airport.attr('data-value', airport.AirportCode); //$airport.value(airport.CityName + " " + airport.Airport + "(" + airport.AirportCode + ")"); //$airport.removeClass("inputSel"); }, //验证航班时间正确性返回[结果bool,最早可预订时间] checkFlightDate: function (fTime) { var d = fTime; var n = new Date(); n.setDate(new Date().getDate() + 3); n.setMinutes(new Date().getMinutes() + 10 - ~~(new Date().toFormatString("mm").substr(1, 1))); var result = d > n; return [result, n]; }, showNote1: function () { elements.note1.css('display', 'block'); }, hideNote1: function () { elements.note1.css('display', 'none'); }, showNote: function (msg) { elements.note.text(msg); elements.note.css('display', 'block'); }, hideNote: function () { elements.note.css('display', 'none'); }, showLoading: function (msg) { elements.loading.find('span').text(msg); elements.loading.css('display', 'block'); }, hideLoading: function () { elements.loading.css('display', 'none'); }, showNone: function () { elements.none.css('display', 'block'); }, hideNone: function () { elements.none.css('display', 'none'); }, showWarn: function (msg) { elements.warn.find('span').html(msg); elements.warn.css('display', 'block'); }, hideWarn: function () { elements.warn.css('display', 'none'); }, validateFlightNo: function (fno) { return (/^[A-Z\d]{2}\d{1,4}$/i).test(fno); }, disabled: function () { elements.from.attr('disabled', 'disabled'); elements.date.attr('disabled', 'disabled'); elements.airport.attr('disabled', 'disabled'); elements.address.attr('disabled', 'disabled'); }, enabled: function () { elements.from[0].removeAttribute("disabled"); elements.date[0].removeAttribute("disabled"); elements.airport[0].removeAttribute("disabled"); elements.address[0].removeAttribute("disabled"); }, defaultDate: function () { var n = new Date(); n.setDate(new Date().getDate() + 10); n.setMinutes(Math.ceil(n.getMinutes() / 10) * 10 + 10); n.setSeconds(0); return n; }, init: function () { var th = this, defdata = th.defData; th.airCity = defdata.cityID; elements.air_Name.value(defdata.cityName); elements.air_Name.attr('data-val', defdata.airData); //elements.air_Address.attr('cityid', defdata.cityID); //elements.address.attr('cityid', defdata.cityID); th.floHotelAddrHandle = iniHotelAddress(elements.address, defdata.cityID, 'och_' + type + '_flo'); th.airHotelAddrHandle = iniHotelAddress(elements.air_Address, defdata.cityID, 'och_' + type + '_air'); this.initNotice(); combox = initCombox(elements.airport); combox.method('bind', 'change', function (a, b) { var items = b.items; searchAddresses.apply(th, [$.parseJSON(items[2])]); }); elements.from.bind('focus', function () { elements.airport.attr('disabled', 'disabled'); }); var $tt = $och.find('.s_voyage_tip'), txt = '成人：>=12岁
儿童：2-12岁
婴儿：<2岁'; tooltip($tt[0], '请填写' + aType + '机航班的起飞日期，按起飞城市的当地时间填写'); tooltip($tt[1], txt); tooltip($tt[2], txt); var ochdate = now.addDays(3); $.mod.load('calendar', PluginsVersion.calendar, function () { elements.date.regMod('calendar', PluginsVersion.calendar, { options: { minDate: ochdate, maxDate: undefined, autoShow: true, showWeek: false }, listeners: { onChange: function (el, date) { getFlightInfo(); } } }); elements.air_Date.carAny() && elements.air_Date.regMod('calendar', PluginsVersion.calendar, { options: { minDate: now, maxDate: undefined, autoShow: true, showWeek: false } }); }); var defaultDate = th.defaultDate(), nDate = defaultDate.toFormatString('yyyy-MM-dd'); //ntime = defaultDate.toFormatString('hh:mm'); elements.date.value(nDate); elements.air_Date.value(nDate); this.bindOchSelectData(elements.adult[0], '成人', 1, '(≥12岁)'); this.bindOchSelectData(elements.children[0], '儿童', 0, '(2-12岁)'); this.bindOchSelectData(elements.baby[0], '婴儿', 0, '(＜2岁)'); this.bindOchSelectData(elements.air_Hour[0], '时', ~~defaultDate.toFormatString('hh')); this.bindOchSelectData(elements.air_Minute[0], '分', (~~defaultDate.toFormatString('mm') / 10).toFixed()); this.bindOchSelectData(elements.air_Adult[0], '成人', 1, '(≥12岁)'); this.bindOchSelectData(elements.air_Children[0], '儿童', 0, '(2-12岁)'); this.bindOchSelectData(elements.air_Baby[0], '婴儿', 0, '(＜2岁)'); flightNoAutoComplete(elements.from); elements.from.bind('blur', function () { getFlightInfo.apply(th); }); elements.button.bind('click', submitOch); elements.air_Button.bind('click', submitOchByAir); }, setData: function (data) { var _ref = initOchAirport(elements.air_Name, 'ochAirport', data.Och); _ref && _ref.method('bind', 'change', function (a, b) { var val = b.items, $th = $(this); var cityId = th.airCity = ~~(val[0] == 's' ? val[1].split('_')[0] : val[3]); elements.air_Address.value(''); elements.air_Address.attr('data-val', ''); airAddress && airAddress.method('checkValue'); if (th.airHotelAddrHandle) { th.airHotelAddrHandle.clearAutoCache(); th.airHotelAddrHandle.setCity(cityId); } }); }, //初始化占位符 initNotice: function () { var version = PluginsVersion.notice; $.mod.load('notice', version, function () { elements.from.regMod('notice', version, { name: 'OchFrom', tips: "如MU547", selClass: "inputSel" }); airportNotice = elements.airport.regMod('notice', version, { name: 'OchAirport', tips: "请选择" + aType + "机机场", selClass: "inputSel" }); floAddress = elements.address.regMod('notice', version, { name: 'OchFloAddress', tips: "送达地点/酒店名称", selClass: "inputSel" }); //根据机场预定 elements.air_Name.carAny() && elements.air_Name.regMod('notice', version, { name: 'OchAirportName', tips: "机场名称/城市", selClass: "inputSel" }); elements.air_Address.carAny() && (airAddress = elements.air_Address.regMod('notice', version, { name: 'OchAirportAddress', tips: "出发地地点/酒店名称", selClass: "inputSel" })); }); } }); this.init(); } //国内接送机/火车 function chf(type) { type = type || 'jj'; var itype = type == 'jj' || type == 'jhc' ? 17 : 18, ctype = type == 'jj' || type == 'sj' ? 1 : 2; var url = UrlMana({ chfTerminalUrl: '/carHome/ctriphome/getctripchfdata' }); var $chf = _$('#cs_chf_' + type), ENUMCHF = { jj: 'jntAC', sj: 'sndAC', jhc: 'jntSC', shc: 'sndSC' }, ENUMTIPS = { jj: '必填，可送达异地城市', sj: '必填，可从异地城市出发', jhc: '必填，可送达周边城市', shc: '必填，可从周边城市出发' }; var $$ = function (selector) { if (type) { var reg = new RegExp("@@", "g"); selector = selector.replace(reg, type); } return $chf.find(selector); } var elements = { city: $$('#chf_@@_city'), terminal: $$('#chf_@@_terminal'), address: $$('#chf_@@_address'), date: $$('#chf_@@_date'), hour: $$('#chf_@@_hour'), minute: $$('#chf_@@_minute'), button: $$('#chf_@@_button') }; var submitChf = function () { var city = elements.city, date = elements.date[0], hour = elements.hour[0], minute = elements.minute[0], address = elements.address, terminal = elements.terminal[0]; var ENUMCHF = { jj: 1, sj: 2, jhc: 1, shc: 2 }; hour = hour ? hour.value : "00"; minute = minute ? minute.value : "00"; var dataCity = city.attr("data-val"); if (!dataCity || dataCity == "-1") { _v.method("show", { $obj: $(city), data: "请选择用车城市", removeErrorClass: true, isScroll: false }); return; } var stype = type.split('')[0] == 'j' ? '送达' : '出发'; if (!address.value()) { _v.method("show", { $obj: $(address), data: "请填写" + stype + "地点", removeErrorClass: true, isScroll: false }); return; } var addressVal = address.attr('data-val'); if (!addressVal) { _v.method("show", { $obj: $(address), data: "请填写正确的" + stype + "地点", removeErrorClass: true, isScroll: false }); return; } var newDate = fromDate(date.value, hour, minute); if (date.value == '' || !newDate) { _v.method("show", { $obj: $(date), data: "请选择用车时间", removeErrorClass: true, isScroll: false }); return; } if (newDate < dtime) { _v.method("show", { $obj: $(date), data: "指定的时间不可预订。
最早预订时间为" + dtime.toFormatString('yyyy-MM-dd hh:mm'), removeErrorClass: true, isScroll: false }); return; } //http://car.ctrip.com/daijia/list?ptType=17&cid=2&useDt=2016-07-10 14:51&flNo=&locCd=SHA&locType=1&locSubCd=10002&locSubType=1 // &poiNm=永胜一路&poiAddr=上海市崇明县&poiLng=121.83930262&poiLat=31.37065211&type=t //参数解释： //ptType(17接机,18送机) //cid(用车城市ID) //useDt(用车时间) //flNo(航班号) //locType(1机场,2火车站) //locCd(机场三字码/火车站ID) //if(航站楼ID>0) //{ locSubType(1航站楼)目前只有航站楼一种情况 locSubCd(航站楼ID) } //poiNm(地址名称) //poiAddr(地址明细) //poiLng，poiLat(地址经纬度) //type(f-航班号预订，t-其他预订) //debugger; var terminal = terminal.value, ts = terminal.split('-'), t0 = ts[0] || '', t1 = ~~ts[1] || 0, addresses = addressVal.split('|'), locations = addresses[2].split(','); var url = UrlMana({ chfSearchUrl: '/chpub/carrier' }); url.chfSearchUrl = 'http://' + baseUrl + '/chpub/carrier'; var chfUrl = url.chfSearchUrl; var param = {}; //console.log(ts); //console.log(t1); param = { pttype: itype, udt: encodeURIComponent(date.value + ' ' + hour + ':' + minute), stnddt: elements.date.value().replace(/-/g, ''), //stnno: flightNoData.flNo, stncd: t1 == 0 ? "" : t0, //stnnm:"", stntype: ctype, stnsubcd: (t1 == 0) ? t0 : "", //0,t0 //stnsubnm:(t1==0)?terminal:"", poinm: window.encodeURI(addresses[1].CarVerticalBarDeCode()), poiadr: window.encodeURI(addresses[4]), poilng: locations[0], poilat: locations[1], cid: dataCity, cnm: addresses[3], ctid: 1, ctnm: window.encodeURI("中国"), s: "ctrip_home" } setHistory(type, { key: dataCity, name: city.value() }); sumbitForm(param, chfUrl, "get", true); /* var urls = ['http://', baseUrl, '/daijia/list?ptType=', itype]; urls.push('&cid=', dataCity); urls.push('&useDt=', date.value + ' ' + hour + ':' + minute); urls.push('&flNo=', ''); urls.push('&locType=', ctype); if (t1 == 1 || t1 == 2) { urls.push('&locCd=', t0); } else { urls.push('&locSubType=', 1); urls.push('&locSubCd=', t0); } urls.push('&poiNm=', window.encodeURI(addresses[1].CarVerticalBarDeCode())); urls.push('&poiAddr=', window.encodeURI(addresses[4])); urls.push('&poiLng=', locations[0]); urls.push('&poiLat=', locations[1]); urls.push('&type=', 't'); setHistory(type, { key: dataCity, name: city.value() }); window.open(urls.join(''));*/ } var addressNotice; //公开成员 $.extend(this, { url: url, elements: elements, submitChf: submitChf, init: function () { this.initNotice(); $.mod.load('calendar', PluginsVersion.calendar, function () { fillDate(elements.date, date, undefined); }); $(elements.button).bind('click', function () { //_v.method("show", { $obj: $(sdate), data: "请选择取车时间", removeErrorClass: true, isScroll: false }); submitChf(); }); fillHour(elements.hour[0], hour); fillMinute(elements.minute[0], minute); elements.date.value(date); }, setData: function (data) { if (!data) return; var defaultcity = data.defaultcity; var gaode = iniGaodeAddress(elements.address, defaultcity.CityName, type); elements.city.attr('data-val', defaultcity.CityID); elements.city.value(defaultcity.CityName); elements.city.removeClass("inputSel"); initChfCity(elements.city, type, data[ENUMCHF[type]], function (val) { elements.address.value(''); elements.address.attr('data-val', ''); gaode.clearAutoCache(); gaode.setCity(elements.city.value()); addressNotice && addressNotice.method('checkValue'); jsonp(url.chfTerminalUrl + '?type=' + type + '&cityid=' + val + '&v=' + new Date().valueOf(), function (data) { bindSelect(elements.terminal[0], data); }); }); bindSelect(elements.terminal[0], defaultcity[type]); }, //初始化占位符 initNotice: function () { var version = PluginsVersion.notice; $.mod.load('notice', version, function () { elements.city.regMod('notice', version, { name: 'JieCity', tips: '请选择城市', selClass: 'inputSel' }); addressNotice = elements.address.regMod('notice', version, { name: 'JieCity', tips: ENUMTIPS[type], selClass: 'inputSel' }); }); } }); this.init(); } //海外自驾 function osd() { var $osd = _$('#cs_osd'), type = 'osd', url = UrlMana({ osdFiltersUrl: '/carHome/ctriphome/getosdlocationlist?keyword=${encodeURI(unescape(decodeURIComponent(key)))}', //submitUrl: '/hwzijia/ctrip' submitUrl: '/hwzijia/osdsearch/index' }), th = this; var $$ = function (selector) { return $osd.find(selector); } var elements = { from: $$('#cs_osd_from'), remote: $$('#cs_osd_remote'), to: $$('#cs_osd_to'), startDate: $$('#cs_osd_start_date'), startHour: $$('#cs_osd_start_hour'), startMinute: $$('#cs_osd_start_minute'), endDate: $$('#cs_osd_end_date'), endHour: $$('#cs_osd_end_hour'), endMinute: $$('#cs_osd_end_minute'), button: $$('#cs_osd_button'), rentalDays: $$('#cs_osd_days') }; var submitOsd = function (from, to, sdate, shour, sminute, edate, ehour, eminute) { var dataCity = from.attr("data-val"), toDataCity = to.attr('data-val'); if (!from.value()) { _v.method("show", { $obj: $(from), data: "请选择用车地点", removeErrorClass: true, isScroll: false }); return; } if (to.css('visibility') == 'visible' && !to.value()) { _v.method("show", { $obj: $(to), data: "请选择还车地点", removeErrorClass: true, isScroll: false }); return; } shour = shour ? shour.value : "00"; sminute = sminute ? sminute.value : "00"; ehour = ehour ? ehour.value : "00"; eminute = eminute ? eminute.value : "00"; var sDate = fromDate(sdate.value, shour, sminute), eDate = fromDate(edate.value, ehour, sminute); if (sdate.value == '' || !sDate) { _v.method("show", { $obj: $(sdate), data: "请选择取车时间", removeErrorClass: true, isScroll: false }); return; } if (edate.value == '' || !eDate) { _v.method("show", { $obj: $(edate), data: "请选择还车时间", removeErrorClass: true, isScroll: false }); return; } if (sDate >= eDate) { _v.method("show", { $obj: $(edate), data: "还车时间必须大于取车时间", removeErrorClass: true, isScroll: false }); return; } var pickUpObj = th.analytical(dataCity), returnObj = th.analytical(toDataCity); ///hwzijia/ctrip?pcity=1187&ptime=201608061500&rtime=201608081500&rcity=&src=complex var pcode = "", rcode = ""; //pcode if (pickUpObj && pickUpObj.code) { pcode = pickUpObj.code; } //rcode if (returnObj && returnObj.code) { rcode = returnObj.code; } var param = { pcity: pickUpObj.cityid, rcity: returnObj.cityid || pickUpObj.cityid, ptime: fomatDate(sdate.value, shour, sminute), rtime: fomatDate(edate.value, ehour, eminute), pcode: pcode, rcode: rcode }; if (to.css('visibility') == 'visible') { $.extend(param, { rcity: returnObj.cityid }); } else { $.extend(param, { rcity: pickUpObj.cityid, rcode: pcode }); } param.src = 'complex'; //设置历史记录 if (dataCity && dataCity.indexOf('|') == -1) setHistory(type + 'From', { key: dataCity, name: from.value() }); if (to.css('visibility') == 'visible' && toDataCity && toDataCity.indexOf('|') == -1) setHistory(type + 'To', { key: toDataCity, name: to.value() }); var p = []; for (var k in param) { p.push(k + '=' + param[k]); } p = p.join('&'); window.open(url.submitUrl + '?' + p); //sumbitForm(param, url.submitUrl, 'get', true); } var initOsdCity = function (dom, name, data) { var firstEle = { text: '', value: '' }, suggestionStyle = '.ico_key,.ico_unkey{width:92px;height:43px;padding-left:65px;background:url(//pic.c-ctrip.com/ctripOnPad/un_key20131012.png) 10px 11px no-repeat;cursor:pointer;line-height:40px;font-size:18px;border-width:1px;border-style:solid;border-radius:3px;}\ .ico_key{border-color:#f0f0f0 #cfcfcf #707070;box-shadow:0 1px 0 #cfcfcf,1px 0 0 0 #f0f0f0 inset,-1px 0 0 0 #f0f0f0 inset,0 -1px 0 0 #f0f0f0 inset;}\ .ico_unkey{border-color:#898989 #e2e2e2 #e2e2e2;background-color:#f5f5f5;box-shadow:0 -1px 0 #e2e2e2,0 1px 0 #d1d1d1 inset;}', //{{if cQuery.browser.isIPad}}{{else}}
支持中文/拼音/简拼输入

{{/if}} osdSuggestion = '{{if (data == message.Help.format(data));}}{{/if}}
\ {{if cQuery.browser.isIPad}}×
显示键盘
{{else}}\ ×
支持输入英文／中文／拼音／三字码

{{tmpl message.searchHistoryList }}{{/if}}\
{{enum(key) data}}
${key}{{/enum}}
\ {{enum(key,objs) data}}
{{var a = true;}}
{{enum(k,arr) objs}}{{if (k)}}\
${k}{{else}}
\ {{/if}}{{each(index, item) arr}}${item.CityName}\ {{/each}}{{if (a) == false}}
{{a == true}}\ {{else}}
{{a == false}}{{/if}}{{/enum}}
{{/enum}}
'; var osdFilter = '
\
\ ×\ {{if hasResult}}{{tmpl message.filterResult}}{{else}}{{tmpl message.noFilterResult}}{{/if}}\

\ {{if (flag=message.hasData(list))}}{{/if}}\ {{if (flag.hasAirport)}}\
\ {{each (i,item) list}}\ {{if (arr=message.getData(data))}}{{/if}}\ {{if (arr[10]==1)}}\ \ {{if (!ap)}}
机场
{{/if}}\ {{if (ap=1)}}{{/if}}\ {{tmpl message.format(arr[1],$data.val)}} - ${arr[6]+","+arr[4]}\ \ {{/if}}\ {{/each}}\
\ {{/if}}\ {{if (flag.hasZone)}}\
\ {{each (i,item) list}}\ {{if (arr=data.split("|"))}}{{/if}}\ {{if (arr[10]==4)}}\ \ {{if (!ar)}}
商圈
{{/if}}\ {{if (ar=1)}}{{/if}}\ {{tmpl message.format(arr[1],$data.val)}} - ${arr[6]+","+arr[4]}\ \ {{/if}}\ {{/each}}\
\ {{/if}}\ @Car_Page\
'.CarFilterReplace(pageHtml), osdFilterStyle = '.keyword_prompting_lhsl .item_list_airport a.hover .sug_category{background-position: right -67px;}.keyword_prompting_lhsl .item_list_areaadmin a.hover .sug_category{background-position: right -447px;}.keyword_prompting_lhsl .title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}'; var suggestionInit = function (e) { var t = e.find(".tab_box li"); var i = e.find("div.city_item"); if (!t.length) { return } function n() { var e = this; t.each(function (t, n) { if (t[0] == e) { t.addClass("hot_selected"); i[n].style.display = "" } else { t.removeClass("hot_selected"); i[n].style.display = "none" } }) } t.bind("mousedown", n); n.apply(t[0]); var $box = e.find(".search_history_box"); $box.bind($.browser.isIPad ? "touchend" : "mousedown", function (s) { var l = s.target || s.srcElement || s.host; if (l.tagName === "A") { var val = $(l).attr("data-val"); dom.removeClass("inputSel").value($(l).text()); dom.attr("data-val", val); _ref.method('hidden'); $box.html($box.html()); } }); e.find(".close").bind("mousedown", function (e) { e.stop(); dom[0].blur(); }); if (cQuery.browser.isIPad) { dom.attr("readonly", "readonly") e.find("#car_mini_keyboard").bind("click", function () { var e = dom[0], t = "readonly" != dom[0].getAttribute("readonly"); t ? (e.setAttribute("readonly", "readonly"), this.className = "ico_key") : (e.removeAttribute("readonly"), this.className = "ico_unkey"), e.blur(), e.select(), e.focus() }); } }; var $dom = $(dom); var _ref = $dom.regMod('address', '1.0', { name: name, source: { suggestion: data }, //jsonpFilter: url.osdFiltersUrl, //fat环境下无法自动补全 jsonpFilter: 'http://car.ctrip.com/carHome/ctriphome/getosdlocationlist?keyword=${encodeURI(unescape(decodeURIComponent(key)))}', validate: function (isAccurate, fn, a) { this; }, template: { padVersion: "2.0", suggestion: osdSuggestion, suggestionStyle: suggestionStyle, suggestionInit: suggestionInit, suggestionIpad: osdSuggestion, suggestionStyleIpad: suggestionStyle, suggestionInitIpad: suggestionInit, filter: osdFilter, filterStyle: osdFilterStyle, filterIpad: osdFilter, filterStyleIpad: osdFilterStyle, filterInit: function (e) { var $title = e.find('p.title'), $box = e.find('div.item_list_city'); if (!$box || $box.find('*').length == 0) { $box.remove(); $title.css('border-bottom', 'none'); } firstEle = { text: $dom.value(), value: '' }; $dom.attr('data-val', ''); var $first = e.find('a[data]:eq(0)'); if ($first.length > 0) { firstEle.value = $first.attr('data'); firstEle.text = firstEle.value.split('|')[1]; } e.find(".close").bind("mousedown", function (e) { e.stop(); dom[0].blur() }); }, filterPageSize: 12 }, isIframe: false, isFocusNext: false, isAutoCorrect: false, charset: ENCODE, display: { left: 1, right: 2 }, sort: function (data, val, isAccurate, isReturnBest) { var sort = ['^0$', '^1$', '^3+$', '^0', '^1', '^3+', '0', '1', '3+']; var _sortReString = { accurate: [], vague: [] }; var k1 = 0, k2 = 0; for (var i = 0, n = sort.length; i < n; i++) { var arr = sort[i].match(/^(\^?)([^\^\$\|@\r\n\+]+)(\+?)(\$?)$/); if (arr) { if (/^\d$/.test(arr[2])) { arr[2] = parseInt(arr[2], 10); } else if (arr[2] in this._colsHash) { arr[2] = this._colsHash[arr[2]]; } else { $.error('address._initSort', 'invalid sort column ' + arr[2]); continue; } var s = (+arr[2] || arr[3]) ? '([^\\|@]*\\|){' + arr[2] + (arr[3] ? ',' : '') + '}' : ''; _sortReString.accurate[k1++] = ['@(' + s, '', '(\\|[^@]*)?)(?=@)']; _sortReString.vague[k2++] = ['@(' + s + (arr[1] ? '' : '[^\\|@]*'), '', (arr[4] ? '(\\|[^@]*)?' : '[^@]*') + ')(?=@)']; } else { $.error('address._initSort', 'invalid sort rule ' + this.sort[i]); } } var dataString = data; var itemArr = [], l = 0; var reString = _sortReString[isAccurate ? 'accurate' : 'vague']; var reVal = val.toReString(); for (var i = 0, n = reString.length; i < n; i++) { reString[i][1] = reVal; var re = new RegExp(reString[i].join(''), 'gi'); dataString = dataString.replace(re, function (a, b) { var c = b.split('|'); var isairport = false; if (isNaN(c[4])) isairport = true; var item = { left: c[1] || '', right: c[2] || '', isairport: isairport, data: b }; itemArr[l++] = item; return ''; }); } return itemArr; }, message: { Help: CarAddressHelp, suggestion: "请选择以下城市", searchHistoryList: getHistoryHtml(name), filterResult: '${$data.val}，若需缩小范围，请输入更多条件。', noFilterResult: '对不起，找不到地址：${val}', format: function (str, val) { var result = str.replace(/\(\w+\)$/i, '$&'); return CarAddressHelp.highlight(result, val); }, getData: function (data) { var arr = data.split('|'); arr[1] = arr[1] + "(" + arr[0] + ")"; return arr; }, hasData: function (list) { var result = { hasAirport: false, hasZone: false }; if (!list || !$.isArray(list)) return result; var aArr = [], zArr = []; for (var i = 0; i < list.length; i++) { var type = list[i].data.split('|')[10]; if (type == 1) aArr.push(1); else if (type == 4) zArr.push(1); } result.hasAirport = aArr.length > 0; result.hasZone = zArr.length > 0; return result; } } }); _ref.method('bind', 'userinput', function (a, b, c, d) { var $th = $(this); if (b.eventType && !$th.attr('data-val') && firstEle.value) { $th.value(firstEle.text); $th.attr('data-val', firstEle.value); } }); _ref.method('bind', 'change', function (a, b) { var val = b.items, $th = $(this); if (val[0] == 'd') { $th.attr('data-val', val[2]); $th.removeClass("inputSel"); this.blur(); } else { $th.attr('data-val', b.data); } }); return _ref; }; //公开成员 $.extend(this, { type: type, submitOsd: submitOsd, elements: elements, init: function() { this.initNotice(); //初始化异地还车checkbox this.initRemote(); $.mod.load('calendar', PluginsVersion.calendar, function() { fillDate(elements.startDate, zsdate, undefined); fillDate(elements.endDate, zsdate, undefined); }); $(elements.button).bind('click', function() { submitOsd(elements.from, elements.to, elements.startDate[0], elements.startHour[0], elements.startMinute[0], elements.endDate[0], elements.endHour[0], elements.endMinute[0]); }); fillHour(elements.startHour[0], zstart.toFormatString('hh')); fillMinute(elements.startMinute[0], '00'); fillHour(elements.endHour[0], zend.toFormatString('hh')); fillMinute(elements.endMinute[0], '00'); elements.startDate.value(zsdate); elements.endDate.value(zedate); this.initDateChange(); }, initRemote: function() { var fn = function() { var el = elements.to; if (elements.remote[0].checked) { el.css('visibility', 'visible'); } else { el.css('visibility', 'hidden'); } } fn(); $(elements.remote).bind("click", fn); }, initDateChange: function() { var dateChangeFunc = function(element) { $(element).bind('change', function() { var startDate = Date.parse($(elements.startDate[0]).value()); var startHour = parseInt($(elements.startHour[0]).value()); var startMinte = parseInt($(elements.startMinute[0]).value()); var endDate = Date.parse($(elements.endDate[0]).value()); var endHour = parseInt($(elements.endHour[0]).value()); var endMinute = parseInt($(elements.endMinute[0]).value()); var days = Math.floor((endDate - startDate)/(24*3600*1000)); var addDay = 0; if ((endHour - startHour) > 0) { addDay = 1; } else if (endHour === startHour) { if (endMinute > startMinte) { addDay = 1; } } days += addDay; $(elements.rentalDays).html(days); }); } dateChangeFunc(elements.startDate[0]); dateChangeFunc(elements.startHour[0]); dateChangeFunc(elements.startMinute[0]); dateChangeFunc(elements.endDate[0]); dateChangeFunc(elements.endHour[0]); dateChangeFunc(elements.endMinute[0]); }, osdtype: { '1': 'airport', '2': 'train', '4': 'zone' }, analytical: function (address) { var def = { cities: [], cityid: '', code: '', address: '', type: '' }; if (address) { if (address.indexOf('|') == -1) { $.extend(def, { cityid: address }); } else { var cities = address.split('|') || []; $.extend(def, { cityid: cities[3], code: cities[0], address: cities[1].replace(/\(\w+\)$/i, '') || '', type: th.osdtype[cities[10]] || '' }); } } return def; }, setData: function (data) { initOsdCity(elements.from, 'osdFrom', data.Osd); initOsdCity(elements.to, 'osdTo', data.Osd); }, //初始化占位符 initNotice: function () { var version = PluginsVersion.notice; $.mod.load('notice', version, function () { elements.from.regMod('notice', version, { name: 'OsdFrom', tips: "请输入取车地点", selClass: "inputSel" }); elements.to.regMod('notice', version, { name: 'OsdAirport', tips: "请输入还车地点", selClass: "inputSel" }); }); } }); this.init(); } //日租包车 function day(type) { var $day = _$('#cs_day'), url = UrlMana({ submitUrl: '/idayweb/city' }), th = this; url.submitUrl = "http://" + baseUrl + '/idayweb/city'; var $$ = function (selector) { if (type) { var reg = new RegExp("@@", "g"); selector = selector.replace(reg, type); } return $day.find(selector); } var elements = { from: $$('#cs_@@_from'), startDate: $$('#cs_@@_start_date'), startHour: $$('#cs_@@_start_hour'), startMinute: $$('#cs_@@_start_minute'), useDuration: $$('#cs_@@_duration'), button: $$('#cs_@@_button'), inland: { bizType: '32', cid: '2', ctId: '1', cNm: '上海', useDuration: '1', useDurationDesc: '一天' } }; var submitDay = function (city, sdate, shour, sminute, duration) { var dataCity = city.attr("data-val"); if (!city.value()) { _v.method("show", { $obj: $(city), data: "请选择需要用车的城市", removeErrorClass: true, isScroll: false }); return; } shour = shour ? shour.value : "00"; sminute = sminute ? sminute.value : "00"; var sDate = fromDate(sdate.value, shour, sminute); if (sdate.value == '' || !sDate) { _v.method("show", { $obj: $(elements.startDate), data: "请选择用车时间", removeErrorClass: true, isScroll: false }); return; } var sDateNewDate = new Date(); if (sDate <= sDateNewDate) { if (sDate.getHours() >= sDateNewDate.getHours()) { _v.method("show", { $obj: $(elements.startMinute), data: "用车时间请大于当前时间", removeErrorClass: true, isScroll: false }); } else { _v.method("show", { $obj: $(elements.startHour), data: "用车时间请大于当前时间", removeErrorClass: true, isScroll: false }); } return; } if (!duration.value()) { _v.method("show", { $obj: $(duration), data: "请选择用车时长", removeErrorClass: true, isScroll: false }); return; } var param = { date: sdate.value + " " + shour + ":" + sminute, duration: duration.value(), src: 'complex' }; //设置历史记录 if (dataCity && dataCity.indexOf('|') == -1) setHistory(type, { key: dataCity, name: city.value() }); var p = []; for (var k in param) { p.push(k + '=' + param[k]); } p = p.join('&'); window.open(url.submitUrl + dataCity + '?' + p); }; var initDayCity = function (odom, otype, odata) { var suggestionStyle = '.city_select_lhsl{width:408px;padding:10px;border:1px solid #999;background-color:#fff}.city_select_lhsl .close{float:right;width:20px;height:20px;color:#666;text-align:center;font:bold 16px/20px Simsun}.city_select_lhsl .close:hover{text-decoration:none;color:#ffa800}.city_select_lhsl .title{margin-bottom:10px;color:#999}.city_select_lhsl .tab_box{width:100%;height:22px;margin-bottom:6px;margin-top:0;border-bottom:2px solid #ccc}.city_select_lhsl .tab_box li{position:relative;float:left;display:inline;margin-right:2px;line-height:22px;cursor:pointer}.city_select_lhsl .tab_box li b{display:none}.city_select_lhsl .tab_box li span{padding:0 8px}.city_select_lhsl .tab_box .hot_selected{border-bottom:2px solid #06c;margin-bottom:-2px;font-weight:bold;color:#06c}.city_select_lhsl .tab_box .hot_selected b{position:absolute;top:23px;left:50%;display:block;width:0;height:0;margin-left:-5px;overflow:hidden;font-size:0;line-height:0;border-color:#06c transparent transparent transparent;border-style:solid dashed dashed dashed;border-width:5px}.city_select_lhsl .city_item,.city_select_lhsl .search_history_box{display:inline-block;*zoom:1;overflow:hidden}.city_select_lhsl .city_item{width:408px}.city_select_lhsl .city_item a,.city_select_lhsl .search_history_box a{float:left;display:inline;width:52px;height:22px;margin:0 2px 2px 0;padding-left:8px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;line-height:22px;color:#333}.city_select_lhsl .city_item a:hover,.city_select_lhsl .search_history_box a:hover{background-color:#2577e3;text-decoration:none;color:#fff}.city_item .city_item_in{width:378px;padding-left:30px;*zoom:1}.city_item .city_item_in:after,.city_select_lhsl .search_history_box:after{display:block;height:0;visibility:hidden;overflow:hidden;content:".";clear:both}.city_item .city_item_letter{float:left;width:30px;height:22px;margin-left:-30px;line-height:22px;text-align:center;color:#e56700}.city_select_lhsl .sarch_history_title{margin-bottom:2px;font-weight:bold;color:#06c}.city_select_lhsl .search_history_box{margin-bottom:6px}'; var chfSuggestion = '{{if (data = message.Help.format(data))}}{{/if}}
    ×\ {{tmpl message.searchHistoryList }}
{{enum(key) data}}
${key}{{/enum}}
\ {{enum(key,objs) data}}
{{enum(k,arr) objs}}{{if (k)}}
${k}{{else}}
{{/if}}{{each(index, item) arr}}\ ${item.display}{{/each}}
{{/enum}}
{{/enum}}
'; var _ref, suggestionInit = function (e) { var t = e.find(".tab_box li"); var i = e.find("div.city_item"); if (!t.length) { return; } function n() { var e = this; t.each(function (t, n) { if (t[0] == e) { t.addClass("hot_selected"); i[n].style.display = ""; } else { t.removeClass("hot_selected"); i[n].style.display = "none"; } }); } t.bind("mousedown", n); n.apply(t[0]); var $box = e.find(".search_history_box"); $box.bind($.browser.isIPad ? "touchend" : "mousedown", function (s) { var l = s.target || s.srcElement || s.host; if (l.tagName === "A") { var val = $(l).attr("data-val"); odom.removeClass("inputSel"); odom.value($(l).text()); odom.attr("data-val", val); _ref.method('hidden'); $box.html($box.html()); } }); e.find(".close").bind("mousedown", function (e) { e.stop(); odom[0].blur(); }); }; _ref = $(odom).regMod('address', PluginsVersion.address, { name: 'city_' + otype, source: { suggestion: odata }, template: { padVersion: "2.0", suggestion: chfSuggestion, suggestionStyle: suggestionStyle, suggestionInit: suggestionInit, suggestionIpad: chfSuggestion, suggestionStyleIpad: suggestionStyle, suggestionInitIpad: suggestionInit }, isIframe: false, isFilterSelect: false, isFocusNext: false, isAutoCorrect: false, charset: ENCODE, message: { Help: CarAddressHelp, searchHistoryList: getHistoryHtml(otype) } }); _ref.method('bind', 'change', function () { var val = arguments[1].data.split("|"); val = val.length == 3 ? val[2] : ""; odom.attr("data-val", val); }); return _ref; }; var currentDate = (type == 'iday' ? now : now.addDays(-1)).toFormatString("yyyy-MM-dd"); //公开成员 $.extend(this, { type: type, submitOsd: submitDay, elements: elements, init: function () { $.mod.load('notice', PluginsVersion.notice, function () { elements.from.regMod('notice', PluginsVersion.notice, { name: 'OsdFrom', tips: "请选择需要用车的城市", selClass: "inputSel" }); }); var insx = tooltip($day.find('.s_voyage_tip')[0], '出发时间为当地时间'); $.mod.load('calendar', PluginsVersion.calendar, function () { fillDate(elements.startDate, currentDate, undefined); }); $(elements.button).bind('click', function () { submitDay(elements.from, elements.startDate[0], elements.startHour[0], elements.startMinute[0], elements.useDuration); }); fillHour(elements.startHour[0], zstart.toFormatString('hh')); fillMinute(elements.startMinute[0], '00'); elements.startDate.value(zsdate); }, setData: function (data) { if (!data) return; if (type == 'iday') { var defaultcity = data.defaultcity; elements.from.attr('data-val', defaultcity.CityID); elements.from.value(defaultcity.CityName); elements.from.removeClass("inputSel"); initDayCity(elements.from, type, data["Day"], function (val) { // elements.address.value(''); // elements.address.attr('data-val', ''); }); } else { initDayCity(elements.from, type, data["ODay"], function (val) { }); } } }); this.init(); }; var jj_info = new chf('jj'); var sj_info = new chf('sj'); var jhc_info = new chf('jhc'); var shc_info = new chf('shc'); var och_jie_info = new och('jie'); var och_song_info = new och('song'); var isd_info = new isd(); var osd_info = new osd(); var iday_info = new day('iday'); var oday_info = new day('oday'); $.ready(function () { var height = 180; //tab切换时，搜索框高度控制 $('#carSwitch>a').bind('click', function (a, b, c, d) { _v.method("hide"); restoreHeight(); if ($(this).attr('i') == 1 && $('#cs_och').offset().height > height) changeHeight(); }); $('#och_flightSubSwitch input').bind('click', function () { _v.method("hide"); restoreHeight(); if ($('#cs_och').offset().height > height) changeHeight(); }); jsonp('//' + baseUrl + datasUrl + '?v=' + new Date().valueOf(), function (result) { jj_info.setData(result); sj_info.setData(result); jhc_info.setData(result); shc_info.setData(result); och_song_info.setData(result); isd_info.setData(result); //osd_info.setData(result); oday_info.setData(result); }); //海外自驾请求生产的地址数据（原因：fat无地址数据） jsonp('//' + "car.ctrip.com" + datasUrl + '?v=' + new Date().valueOf(), function (result) { osd_info.setData(result); }); //日租 jsonp('//' + baseUrl + '/json/ctriphome/daycity?v=' + new Date().valueOf(), function (result) { // jsonp('http://10.32.118.19/json/ctriphome/daycity?v=' + new Date().valueOf(), function (result) { iday_info.setData(result); }); }); }(window.$);/*****$endoflist$*****//*****$endoflist$*****/