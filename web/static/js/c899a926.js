/**
 * Created by Administrator on 2018/2/9.
 */
/* eslint-disable */ ; (function (win, $) { win.MeetingMod = {}; MeetingMod.langConf = { city_placeholder: '', keyword_placeholder: '（选填）场地名/地标/商圈', notice: { city: '请选择会场所在城市' } }; // PRO: 生产, UAT: UAT, fat: 测试 var envObj = { 'PRO': { 'GB': '//meeting.ctrip.com' }, 'UAT_NT': { 'GB': '//meeting.ctrip.uat.qa.nt.ctripcorp.com' }, 'FAT': { 'GB': '//meeting.ctrip.fat291.qa.nt.ctripcorp.com' } }; var ENV = '//meeting.ctrip.com'; var solution = document.getElementById('solution'); var arrEnv = solution && solution.value && solution.value.toUpperCase().split('|'); if (arrEnv && arrEnv.length) { ENV = envObj[arrEnv[0]][arrEnv[1]]; window.meetingEvnObj = ENV; } var citySource = ENV + '/online/Ajax/AjaxHotCityData.aspx'; var keywordSource = ENV + '/online/Ajax/AjaxGetHotKeyword.aspx?cityid=${cityId}'; var keywordFilter = ENV + '/online/Ajax/AjaxSearchKeyword.aspx?cityId=${cityId}&overcity=1&keyword=${key}&callback=cQuery.jsonpPosCallback'; var fm = document.getElementById('meeting_entry_form'); MeetingMod.jsonpPosCallback = function noop() {} // 用于模版的函数 MeetingMod.tmpl = { // 给filter的数据分组 groupList: function (list) { var group = {}; var yIndex = 1; var i = 0; list.each(function (item) { var arr = item.data.split('|'); var type = arr[2]; (group[type] || (group[type] = [])).push(item); }); //city if (group['city']) { for (var i = 0; i < group['city'].length; i++) { group['city'][i]["yindex"] = yIndex++; } } //intlDistrict if (group['intlDistrict']) { for (var i = 0; i < group['intlDistrict'].length; i++) { group['intlDistrict'][i]['yindex'] = yIndex++; } } //landmark if (group['landmark']) { for (var i = 0; i < group['landmark'].length; i++) { group['landmark'][i]['yindex'] = yIndex++; } } //zone if (group['zone']) { for (var i = 0; i < group['zone'].length; i++) { group['zone'][i]['yindex'] = yIndex++; } } //airport if (group['airport']) { for (var i = 0; i < group['airport'].length; i++) { group['airport'][i]["yindex"] = yIndex++; } } //location if (group['location']) { for (var i = 0; i < group['location'].length; i++) { group['location'][i]["yindex"] = yIndex++; } } //district if (group['district']) { for (var i = 0; i < group['district'].length; i++) { group['district'][i]["yindex"] = yIndex++; } } //hotel if (group['hotel']) { for (var i = 0; i < group['hotel'].length; i++) { group['hotel'][i]["yindex"] = yIndex++; } } //business area if (group["busArea"]) { for (i = 0; i < group['busArea'].length; i++) { group['busArea'][i]["yindex"] = yIndex++; } } return group; }, groupKeywordList: function (list) { var group = {}; var yIndex = 1; var i = 0; list.each(function (item) { // 有些酒店名称里有@符，和address冲突，故后端吐数据时替换成了全角的＠符，这里重新替换为半角的@符 item.data = item.data.replace(/＠/g, '@'); item.left = item.left.replace(/＠/g, '@'); item.right = item.right.replace(/＠/g, '@'); var arr = item.data.split('|'); var type = arr.length > 8 ? arr[6] : arr[5]; (group[type] || (group[type] = [])).push(item); }); //name if (group["hotel"]) { for (i = 0; i < group['hotel'].length; i++) { group['hotel'][i]["yindex"] = yIndex++; } } //station if (group["station"]) { for (i = 0; i < group['station'].length; i++) { group['station'][i]["yindex"] = yIndex++; } } //landmark if (group["landmark"]) { for (i = 0; i < group['landmark'].length; i++) { group['landmark'][i]["yindex"] = yIndex++; } } //airport if (group["airport"]) { for (i = 0; i < group['airport'].length; i++) { group['airport'][i]['yindex'] = yIndex++; } } return group; }, isRecomResultShow: function(hotel){ var countOrgObjNum = 0, countRecomObjNum = 0; for(var i in hotel){ if(i.indexOf('_recom') == -1){ countOrgObjNum += hotel[i].length; //原始数据 } else{ countRecomObjNum += hotel[i].length; //推荐数据 }; }; if(countRecomObjNum && countOrgObjNum < 5){ return ''; } else{ return 'hidden'; }; }, getKeywordsVal: function(){ return $('#inteHotelName').value(); }, reFormat: function (data) { var arr = data.split('|'); arr[1] = arr[0] + '(' + arr[1] + ')'; return arr.join('|'); }, // 输入内容高亮 HighLightAddressResult: function (result, value) { var reg = new RegExp(filterSpicalCharForRegx(value), 'i'); return result.replace(reg, '$&'); }, byteLength: function (str) { var len = str.length; var n = len; for (var i = 0; i < len; i++) { if (str.charCodeAt(i) > 255) n++; } return n; }, addressFilterChange: function (mod, evt, that) { var items = evt.items || []; //if (MeetingMod.n_keyword) MeetingMod.n_keyword.method('resetValue'); //var cityId = $('#meeting_city'); var cityID = items[2] // 判断城市是否为港澳台 _funFilterCity(cityID) if (items && cityID) { that.value = items[1]; var enameTemp = "city"+cityID; that.setAttribute('data-ename', enameTemp); MeetingMod.selectedByDropdown = true; var keywordArg = { itemId: cityID, cityDisplay: '', keywordDisplay: '' }; setKeywordData(keywordArg); } }, keywordFilterChange: function (data, keyword) { }, format: function (data) { var obj = {}; for (var key in data) { obj[key] = {}; if (key.search(/[A-Z]/i) != -1) { for (var i = 0; i < data[key].length; i++) { if (obj[key][data[key][i]['group']]) { obj[key][data[key][i]['group']].push(data[key][i]); } else { obj[key][data[key][i]['group']] = []; obj[key][data[key][i]['group']].push(data[key][i]); } } } else { for (var i = 0; i < data[key].length; i++) { if (obj[key]['']) { obj[key][''].push(data[key][i]); } else { obj[key][''] = []; obj[key][''].push(data[key][i]); } } } } return obj; } }; function setKeywordData(opt) { if (!MeetingMod.a_keyword) return; var rCityId = /\$\{cityId\}/g; setTimeout(function () { var keywordJsonpFilterTpl = keywordFilter; var keywordJsonpSourceTpl = keywordSource; MeetingMod.a_keyword.set('jsonpFilter', opt.itemId ? keywordJsonpFilterTpl.replace(rCityId, opt.itemId || '') : undefined); MeetingMod.a_keyword.set('jsonpSource', opt.itemId ? keywordJsonpSourceTpl.replace(rCityId, opt.itemId || '') : undefined); }, 0); } // 判断城市是否为港澳台 window._funFilterCity = function filterCity( cityID ){ var $hint = $('.mt-city-not-found-hint.filter'), arrCity = ['720','58','59','314','617','3844','3845','3846', '3847','3848','3849','5152','5589','6954','7203','7523', '7524','7570','7614','7805','7808','7809','7810','7811']; // 先判断类型为会议场地/长住房 再判断目的地是否为港澳台 if(_searchType != 'search_tab=0&room_option=1') { for(var i in arrCity ){ if(cityID == arrCity[i]){ $('#meeting_searchBtn').attr('type','hidden') $hint.addClass('open') _searchType == 'search_tab=1' ? $hint.css('left','211px') : $hint.css('left','451px') $hint.css({ 'zIndex' : '11' }).find('.tmp-d').css('width',"115px") window._filterCity = true; break }else{ $hint.removeClass('open') $('#meeting_searchBtn').attr('type','submit') window._filterCity = false; } } } else{ $hint.removeClass('open') $('#meeting_searchBtn').attr('type','submit') window._filterCity = false; } } // 正则表达式的特殊字符处理 function filterSpicalCharForRegx(value) { var spicalChar = ['\\', '^', '$', '.', '*', '+', '=', ':', '|', '/', '(', ')', '[', ']', '{', '}']; for (var i = 0; i < spicalChar.length; i++) { value = value.replace(spicalChar[i], '\\' + spicalChar[i]); } return value; } var Help = { format: function (data) { var obj = {}; for (var key in data) { obj[key] = {}; if (key.search(/[A-Z]/i) != -1) { for (var i = 0; i < data[key].length; i++) { if (obj[key][data[key][i]['group']]) { obj[key][data[key][i]['group']].push(data[key][i]); } else { obj[key][data[key][i]['group']] = []; obj[key][data[key][i]['group']].push(data[key][i]); } } } else { for (var i = 0; i < data[key].length; i++) { if (obj[key]['']) { obj[key][''].push(data[key][i]); } else { obj[key][''] = []; obj[key][''].push(data[key][i]); } } } } return obj; }, highlight: function (str, val) { var spical = ['\\', '^', '$', '.', '*', '+', '=', ':', '|', '/', '(', ')', '[', ']', '{', '}']; for (var i = 0; i < spical.length; i++) { val = val.replace(spical[i], '\\' + spical[i]); } var re = new RegExp(val, 'i'); return str.replace(re, '$&'); }, getScenic: function (list) { var ret = []; list.each(function (item) { var arr = item.data.split('|'); var obj = ScenicData[arr[2]]; if (obj && arr[6] === 'District') { obj.data = item.data; ret.push(obj); } }); return ret; }, groupCityFilterData: function (list) { // window.associationMatchMaiDian.ismatch_dstn = "T"; //进入说明目的地有联想匹配 //用户行为 var group = {}, yIndex = 1, i = 0; list.each(function (item) { var arr = item.data.split('|'), type = arr[6]; (group[type] || (group[type] = [])).push(item); }); ['City', 'District', 'Sight', 'Location', 'DomesticZone', 'Airport', 'RailwayStation', 'Hotel'].each(function (key) { if (group[key]) { for (i = 0; i < group[key].length; i++) { group[key][i]["yindex"] = yIndex++; group[key][i]["isInn"] = false; } } }); return group; } } function fitMarkerDataToDisplay(data) { return filterData(data, 16, 4); } function filterData(data, total, standard) { var i, a, offset = 0, item, filtered = {}; for (i in data) { item = data[i]; offset += Math.max(standard - item.length, 0); } for (i in data) { item = data[i]; a = item.length; item = filtered[i] = item.slice(0, offset ? Math.max(standard + offset, standard) : standard); offset && (offset = Math.max(offset - (Math.max(item.length - standard, 0)), 0)); } return filtered; } window.markerMTTypeMap = { //名称 //酒店， hotel: { search: '', view: 'name' }, //景区 district: { search: 'district', view: 'district' }, //酒店集团 cityhotelgroup: { search: 'g', view: 'name' }, districthotelgroup: { search: 'g', view: 'name' }, citydistricthotelgroup: { search: 'g', view: 'name' }, //酒店品牌 cityhotelbrand: { search: 'h', view: 'name' }, districthotelbrand: { search: 'h', view: 'name' }, citydistricthotelbrand: { search: 'h', view: 'name' }, //位置： // 地标 landmardId markland: { search: 'sl', view: 'position' }, // 地铁站 metrostation: { search: 's', view: 'position' }, // 商业区 zone: { search: 'zone', view: 'position' }, // 国内商业区 domesticzone: { search: 'zone', view: 'position' }, // 景点 sight: { search: 'sl', view: 'position' }, //行政区 location: { search: 'location', view: 'position' }, //地铁线 metro: { search: 'l', view: 'position' }, // 机场火车站： airport: { search: 'sl', view: 'station' }, // 机场 railwaystation: { search: 'sl', view: 'station' } }; function groupMTMarkerData(data) { /*window.associationMatchMaiDian.ismatch_kyw = "T"; //进入说明关键字有联想匹配*/ var filterResult = [], rs = { name: [], district: [], station: [], position: [] }, map = markerMTTypeMap, SPLIT_STR = '|', yIndex = 1, rankIndex = 1, i = 0, len = 0, total = 16, hasCityChange = false, curCity; if (!data) { return null; } // 反序列化筛选返回数据, 并按city分组 for (i = 0, len = data.length; i < len; i++) { var item = data[i], arrItem = item.data.split(SPLIT_STR), type = arrItem[3].toLowerCase(), types = map[type], city = false ? '0' : (arrItem[7] || '0'); // 初始赋值curCity $.type(curCity) === 'undefined' && (curCity = city); // 无本城市联系数据 if (i === 0 && city !== '0') { filterResult.push({ name: [], district: [], station: [], position: [] }); } // city变更时保存上一个城市的数据 // 如果第一个city 数量>10 则不在筛选后面的城市数据, 否则填满total if (curCity !== city && !hasCityChange && (rs.name.length || rs.station.length || rs.position.length)) { filterResult.push(rs); curCity = city; rs = { name: [], district: [], station: [], position: [] }; // 如果第一个城市的匹配项>10， 或者 匹配总数>16 退出 if ((total < 6 && filterResult.length === 1) || total === 0) { rs = null; break; } hasCityChange = true; } rs[types.view].push(item); total--; if (total === 0 || i === len - 1) { if (rs.name.length || rs.station.length || rs.position.length) { filterResult.push(rs); } break; } } //拿取一定数量的数据（此处默认15条） filterResult.map(function (item) { return fitMarkerDataToDisplay(item); }); /** * 添加埋点的Yindex数据 * 注意这里["name", "district", "station", "position"]是有序的， * 渲染浮层模版时和模版中的名字、机场火车站和位置一一对应 */ ["name", "district", "station", "position"].each(function (item) { filterResult.each(function (filterData) { var curData = filterData[item] || null; if (curData) { for (i = 0, len = curData.length; i < len; i++) { curData[i]["yindex"] = yIndex++; } } }); }); /** * 添加埋点的RankIndex数据 * 注意这里["name", "district", "station", "position"]是有序的， * 渲染浮层模版时和模版中的名字、机场火车站和位置一一对应 * rankIndex 组内自增，换组归1重新计算 */ filterResult.each(function (filterData) { /* debugger*/ //var curData = filterData[item] || null; rankIndex = 1; ["name", "district", "station", "position"].each(function (item) { var curData = filterData[item] || null; if (curData) { for (i = 0, len = curData.length; i < len; i++) { curData[i]["rankindex"] = rankIndex++; } } }); }); return filterResult; } function defaultKeyWordSuggestionInit(obj) { var spans = obj.find('.tab_box li'); var uls = obj.find('div.city_item'); if (!spans.length) { return; } function switchTab() { var _this = this; spans.each(function (span, i) { if (span[0] == _this) { span.addClass('hot_selected'); uls[i].style.display = ''; } else { span.removeClass('hot_selected'); uls[i].style.display = 'none'; } }); } spans.bind('mousedown', switchTab); switchTab.apply(spans[0]); } function addIframeStyle(a) { var doc = a[0].ownerDocument, stylesheet = doc.createElement('link'); stylesheet.type = "text/css"; stylesheet.rel = 'stylesheet'; stylesheet.href = '//webresource.c-ctrip.com/styles/common/c_address.css'; doc.getElementsByTagName('head')[0].appendChild(stylesheet); } var RegMod = function (options) { this.init(options); this.initNotice(); this.initAddress(); this.initKeyword(); this.initValidate(); //首次加载以后如果cookie里有城市，则需要初始化关键词的suggestion this.initFirstKeywordContent(); }; $.extend(RegMod.prototype, { init: function (options) { this.ops = { city: [], keyword: [] }; this.ops = $.extend(this.ops, options); }, initValidate: function () { MeetingMod.formValidator = $(fm).regMod("validate", "1.1"); }, initAddress: function () { var txtCity = this.ops.city; if (txtCity.length) { var suggestionStyle = ' .city_select_lhsl{width:408px;padding:10px;border:1px solid #999;background-color:#fff;} .city_select_lhsl .close{float:right;width:20px;height:20px;color:#666;text-align:center;font:bold 16px/20px Simsun;} .city_select_lhsl .close:hover{text-decoration:none;color:#FFA800;} .city_select_lhsl .title{margin-bottom:10px;color:#999;} .city_select_lhsl .tab_box{width:100%;height:22px;margin-bottom:6px;margin-top:0;border-bottom:2px solid #ccc;} .city_select_lhsl .tab_box li{position:relative;float:left;display:inline;margin-right:2px;line-height:22px;cursor:pointer;} .city_select_lhsl .tab_box li b{display:none;} .city_select_lhsl .tab_box li span{padding:0 8px;} .city_select_lhsl .tab_box .hot_selected{border-bottom:2px solid #06c;margin-bottom:-2px;font-weight:bold;color:#06c;} .city_select_lhsl .tab_box .hot_selected b{position:absolute;top:23px;left:50%;display:block;width:0;height:0;margin-left:-5px;overflow:hidden;font-size:0;line-height:0;border-color:#06c transparent transparent transparent;border-style:solid dashed dashed dashed;border-width:5px;} .city_select_lhsl .city_item, .city_select_lhsl .search_history_box {display:inline-block;*zoom:1;overflow:hidden;} .city_select_lhsl .city_item{width:408px;} .city_select_lhsl .city_item a, .city_select_lhsl .search_history_box a {float:left;display:inline;width:52px;height:22px;margin:0 2px 2px 0;padding-left:8px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;line-height:22px;color:#333;} .city_select_lhsl .city_item a:hover,.city_select_lhsl .search_history_box a:hover{background-color:#2577E3;text-decoration:none;color:#fff;} .city_item .city_item_in{width:378px;padding-left:30px;*zoom:1;} .city_item .city_item_in:after,.city_select_lhsl .search_history_box:after{display:block;height:0;visibility:hidden;overflow:hidden;content:".";clear:both;} .city_item .city_item_letter{float:left;width:30px;height:22px;margin-left:-30px;line-height:22px;text-align:center;color:#E56700;} .city_select_lhsl .sarch_history_title{margin-bottom:2px;font-weight:bold;color:#06c;} .city_select_lhsl .search_history_box{margin-bottom:6px;} '; MeetingMod.a_city = txtCity.regMod("address", "1.0", { name: "#meeting_city", jsonpSource: citySource, jsonpFilter: '//meeting.ctrip.com/online/Ajax/AjaxSearchKeyword.aspx?cityid=2&keyword=&callback=MeetingMod.jsonpPosCallback', keyboard: { left: false, right: false }, template: { suggestion: ' {{if (data = MeetingMod.tmpl.format(data))}}{{/if}}
    ×
支持中文/拼音/简拼输入

    {{enum(key) data}}
    ${key}{{/enum}}
    {{enum(key,objs) data}}
    {{enum(k,arr) objs}} {{if (k)}}
    ${k} {{else}}
    {{/if}} {{each(index, item) arr}}${item.display}{{/each}}
    {{/enum}}
    {{/enum}}
    ', suggestionStyle: suggestionStyle, suggestionInit: function (obj, test) { var spans = obj.find('.tab_box li'); var uls = obj.find('div.city_item'); if (!spans.length) { return; } function switchTab() { var _this = this; spans.each(function (span, i) { if (span[0] == _this) { span.addClass('hot_selected'); uls[i].style.display = ''; } else { span.removeClass('hot_selected'); uls[i].style.display = 'none'; } }); } spans.bind('mousedown', switchTab); switchTab.apply(spans[0]); //点 叉 之后，隐藏浮层 obj.find('.close').bind('mousedown', function (e) { e.stop(); $('#meeting_city')[0].blur(); }); } } }); MeetingMod.a_city.method('bind', 'change', function (mod, evt) { MeetingMod.tmpl.addressFilterChange(mod, evt, document.getElementById('meeting_city')); }); MeetingMod.a_city.method('bind', 'userinput', function (mod, evt) { }); // 读取保存的城市名及 id if ( $.cookie.get('mtcity', 'name')) { $('#meeting_city').value($.cookie.get('mtcity','name')) } if ( $.cookie.get('mtcity', 'id')) { $('#meeting_city').attr( 'data-ename' , 'city' + $.cookie.get('mtcity','id') ) } txtCity.bind('focus', function () { }).bind('keydown', function (e) { }); } }, initKeyword: function () { var keyword = this.ops.keyword; //var tempCityID = $("#meeting_city").attr("data-ename").replace("city", ""); cQuery.groupMTMarkerData = groupMTMarkerData; cQuery.highlightMtKeyword = function (str, words) { if (!words) return str; words = words.split(/\s+/); words.each(function (word) { //highlight only chinese /[a-zA-Z]/.test(word) || (str = str.replace(new RegExp('(' + word + ')', 'gi'), "$1")) }); return str; } cQuery.keywordFilterMTHighlights = {}; cQuery.jsonpPosCallback = function (ret) { if (!ret) { ret = { tokens: '', result: '' }; } var result = ret.result, keywordVal = $('#meeting_keyword').value(); cQuery.keywordFilterMTHighlights[keywordVal] = ret.tokens; cQuery.jsonpResponse = { key: keywordVal, data: '@' + ret.result + '@' }; }; var suggestionStyle = '\ .key_word_lhsl { width:498px; padding:8px 10px; border:1px solid #999; background-color:#fff; }\ .key_word_key{display:none;height:30px;}\ .ico_key,.ico_unkey{ width:39px; height:25px; background:url(http://pic.c-ctrip.com/ctripOnPad/un_key.png) no-repeat; -webkit-transform:scale(.7);margin-left:-5px;cursor:pointer;}\ .key_word_lhsl .close { float:right; width:20px; height:20px; color:#666; text-align:center; font:bold 16px/20px Simsun; }\ .key_word_lhsl .close:hover { text-decoration:none; color:#FFA800; }\ .key_word_lhsl .key_word_list { margin-bottom:6px; }\ .key_word_lhsl .key_word_list dt { font-weight:bold; }\ .key_word_lhsl .key_word_list dd { display:inline-block; }\ .key_word_lhsl .key_word_list dd {display:block;overflow:hidden;}\ .key_word_lhsl .key_word_list a { float:left; height:22px; padding:0 15px 0 5px; border:1px solid #fff; line-height:22px; white-space:nowrap; color:#333;}\ .key_word_lhsl .key_word_list a:hover { border:1px solid #2577e3; background-color:#2577e3; text-decoration:none; color:#fff;}\ .key_word_lhsl .keyword_sub_city { margin:0 -10px -8px; padding:5px 10px; border-top:1px solid #CCC; background-color:#F3F3F3; color:#333; }\ .key_word_lhsl .keyword_sub_city a { margin-right:10px; color:#4D4D4D; }\ .key_word_lhsl_pad .key_word_key { display:block; }\ '; if (keyword.length) { MeetingMod.a_keyword = keyword.regMod("address", "1.0", { name: "#meeting_keyword", isFocusNext: false, isAutoCorrect: false, delay: 200, template: { // ##hack## 修复左右键无法使用的问题 // 此处可参阅 cQuery 相关代码，当 keyCode = 37/39，即左右键时 // 如果有 filterPageSize < 0 则会强行放行左右键，否则会 // 将执行移至最底部，cancel 掉默认事件 filterPageSize: -1, suggestion: '\ {{if (data)}}\
    \ ×\ {{enum(key, item) data}}\ {{if key==="subCity"}}\
    \ ${item.cnname}：{{if (item.data)}}{{each item.data}}${name}{{/each}}{{/if}}\
    \ {{else}}\
    \
        ${item.cnname}\
{{if (item.data)}}{{each item.data}}${name}{{/each}}{{/if}}\
    \ {{/if}}\ {{/enum}}\
    \ {{/if}}\ ', suggestionStyle: suggestionStyle, filter: '\ {{if ($data.hasResult && (filterlist = cQuery.groupMTMarkerData($data.list)))}}\ {{if (filterlist.length)}}\
    \
    ×${$data.val}，若需缩小范围，请输入更多条件。

    \ {{each (i, newlist) filterlist}}\ {{if (i === 1)}}
        以下为您展示其他城市的查询结果
        {{/if}}\ {{if ((names = newlist.name).length)}}\
    \ {{each (i,item) names}}\ \ {{if (i==0)}}
        名称
        {{/if}}\ {{if (txt=cQuery.highlightMtKeyword(item.right, cQuery.keywordFilterMTHighlights[$data.val])) }}${txt}{{/if}}\ \ {{/each}}\
    \ {{/if}}\ {{if ((districts = newlist.district).length)}}\
    \ {{each (i,item) districts}}\ \ {{if (i==0)}}
        景区
        {{/if}}\ {{if (txt=cQuery.highlightMtKeyword(item.right, cQuery.keywordFilterMTHighlights[$data.val])) }}${txt}{{/if}}\ ${item.data.split("|")[5] || 0}家酒店\ \ {{/each}}\
    \ {{/if}}\ {{if ((stations = newlist.station).length)}}\
    \ {{each (i,item) stations}}\ \ {{if (i==0)}}
        机场火车站
        {{/if}}\ {{if (txt=cQuery.highlightMtKeyword(item.right, cQuery.keywordFilterMTHighlights[$data.val])) }}${txt}{{/if}}\ \ {{/each}}\
    \ {{/if}}\ {{if ((positions = newlist.position).length)}}\
    \ {{each (i,item) positions}}\ \ {{if (i==0)}}
        位置
        {{/if}}\ {{if (txt=cQuery.highlightMtKeyword(item.right, cQuery.keywordFilterMTHighlights[$data.val])) }}${txt}{{/if}}\ \ {{/each}}\
    \ {{/if}}\ {{/each}}\
    \ {{/if}}\ {{else}}\
    \
    ×对不起，找不到：${$data.val}

    \
    \ {{/if}}\ ', filterStyle: '\ .keyword_prompting_lhsl{width:398px; border:1px solid #999; background-color:#fff;}\ .keyword_prompting_lhsl .title{height:26px; margin:0 10px 4px; padding:0 2px; border-bottom:1px dotted #ccc; line-height:26px; color:#999;}\ .keyword_prompting_lhsl .close{float:right; width:26px; height:26px; font:bold 14px/26px Simsun; color:#666; text-align:center;}\ .keyword_prompting_lhsl .close:hover { text-decoration:none; color:#FFA800; }\ .keyword_prompting_lhsl .sug_item{overflow:hidden;padding-bottom: 5px; padding-top:5px; border-bottom: 1px solid #ccc;*zoom:1;}\ .keyword_prompting_lhsl .sug_item a{display:block; overflow:hidden; padding:5px 7px 5px 10px; color:#333; line-height:18px; cursor:pointer;*zoom:1;}\ .keyword_prompting_lhsl .sug_item .hover { background-color:#2577e3; color:#fff; text-decoration:none;}\ .keyword_prompting_lhsl .sug_item .hover span, .keyword_prompting_lhsl .sug_item .hover b{color:#fff;}\ .notfound_pop{ padding-bottom: 4px;}\ .keyword_prompting_lhsl .sug_item .b{font-weight:bold; color:#06c; }\ .notfound_pop .title{ line-height:26px; overflow: hidden; margin:0 10px 4px; padding:0 2px; color: #c01111; border-bottom: 0 none;}\ .notfound_pop .close{ margin-top: 2px;}\ .keyword_prompting_lhsl .text_input { float:left; max-width:160px; _width:160px; overflow:hidden; white-space:nowrap; text-overflow:ellipsis; }\ .keyword_prompting_lhsl .sug_item a:after{ clear:both; content:"."; display:block; height:0; overflow:hidden; }\ .keyword_prompting_lhsl .sug_item .num { float:left; width: 80px; overflow: hidden; color:#999; text-align: right;}\ .keyword_prompting_lhsl .sug_item .city { display:block; float: left; width:260px; padding-right:4px; overflow:hidden; }\ .keyword_prompting_lhsl .item_list_scenic .city {width:195px;}\ .keyword_prompting_lhsl .sug_item b{font-weight:bold; color:#06c; }\ .keyword_prompting_lhsl .sug_category{ float:right; height:18px; line-height:18px; background-image:url(http://pic.c-ctrip.com/hotels121118/ico_search_box_1.png); background-repeat: no-repeat;width:62px; padding-right:20px; padding-left:0; text-align:right;}\ .keyword_prompting_lhsl .sug_category_hover{ color: #fff; background-color: #2577e3; background-position: right 6px; background-color:#2577e3; }\ .keyword_prompting_lhsl .item_list_city .sug_category{background-position: right -33px;}\ .keyword_prompting_lhsl .item_list_city .hover .sug_category{background-position: right 2px;}\ .keyword_prompting_lhsl .item_list_hotel .sug_category{background-position: right -170px;}\ .keyword_prompting_lhsl .item_list_hotel .hover .sug_category{background-position: right -137px;}\ .keyword_prompting_lhsl .item_list_landmarks .sug_category{background-position: right -204px;}\ .keyword_prompting_lhsl .item_list_landmarks .hover .sug_category{background-position: right -238px;}\ .keyword_prompting_lhsl .item_list_scenic .sug_category{background-position: right -271px;}\ .keyword_prompting_lhsl .item_list_scenic .hover .sug_category{background-position: right -303px;}\ .keyword_prompting_lhsl .item_list_traffic .sug_category{background-position: right -336px; padding-right:40px;}\ .keyword_prompting_lhsl .item_list_traffic .hover .sug_category{background-position: right -372px;}\ ', suggestionInit: function (el) { defaultKeyWordSuggestionInit(el); $.browser.isIE && addIframeStyle(el); el.find('.close').bind('mousedown', function () { $('#meeting_keyword')[0].blur(); }); }.bind(this), filterInit: function (el) { el.find('.close').bind('mousedown', function (e) { e.stop(); $('#meeting_keyword')[0].blur(); }); } } }); MeetingMod.a_keyword.method('bind', 'change', function (mod, data) { // 标记位：用于标识关键词是否是从下拉菜单中直接点选的 // 如果是直接点选的，点击搜索构建 url 时，方式会与直接输入有所不同 MeetingMod.keywordsSelectedByDropdown = true MeetingMod.keywordsSelectedByDropdownData = data var dataArr = data.data.split('|'), cityId = $("#mtcity").attr("data-ename"); /* if (cityId.substr(0, 1).toUpperCase() !== "D") { if (dataArr[3] === "District") { cityIdElem.value("D" + dataArr[2] + "_" + dataArr[4]); } else { !!dataArr[4] && cityIdElem.value(dataArr[4]); } } else if (curCityId !== dataArr[4]) { !!dataArr[4] && cityIdElem.value(dataArr[4]); } */ // 跨城市搜索 if ( dataArr[4] ) { $('#meeting_city').attr('data-ename','city'+dataArr[4]) } if ($('#meeting_searchBtn')[0]) { setTimeout(function () { $('#meeting_searchBtn')[0].click(); }, 0); } }); MeetingMod.a_keyword.method('bind', 'userinput', function (mod, data) { }); MeetingMod.a_keyword.method('bind', 'enter', function (e) { setTimeout(function () { if ($('#meeting_searchBtn')[0]) { $('#meeting_keyword').trigger("blur"); $('#meeting_searchBtn').trigger("click"); } }, 0); }); keyword.bind('blur', function (e) { }); } }, initNotice: function () { /* this.ops.city.length && (MeetingMod.n_city = this.ops.city.regMod("notice", "1.0", { name: "city", tips: MeetingMod.langConf.city_placeholder, selClass: "inputSel" })); */ this.ops.keyword.length && (MeetingMod.n_keyword = this.ops.keyword.regMod("notice", "1.0", { name: "keyword", tips: MeetingMod.langConf.keyword_placeholder, selClass: "inputSel" })); }, initFirstKeywordContent: function () { } }); function getCookie(mainKey, keyMap) { var m = cQuery.cookie.get(mainKey); m = (m ? m : "").split("split"); for (var i = 0, l = m.length; i < l; i++) { if (i == 0 && "cityId" in keyMap) keyMap["cityId"] = unescape(m[i]); else if (i == 1 && "cityName" in keyMap) keyMap["cityName"] = unescape(m[i]); else if (i == 2 && "cityPY" in keyMap) keyMap["cityPY"] = unescape(m[i]); else if (i == 3 && "checkIn" in keyMap) keyMap["checkIn"] = unescape(m[i]); else if (i == 4 && "checkOut" in keyMap) keyMap["checkOut"] = unescape(m[i]); else if (i == 5 && "isDomestic" in keyMap) keyMap["isDomestic"] = unescape(m[i]); } } function setCookie(keyMap) { var host = window.location.host; var cookiedomain = host.replace('www.', ''); var big5 = host.match(/big5\./); big5 && (cookiedomain = cookiedomain.replace('big5.', '')); } function clearCookie() { var host = window.location.host; var cookiedomain = host.replace('www.', ''); var big5 = host.match(/big5\./); big5 && (cookiedomain = cookiedomain.replace('big5.', '')); cQuery.cookie.del(big5 ? 'BIntHotelCityID' : 'IntHotelCityID'); } /** * 类型切换 * onOff = true 为 团房、长住房 * onOff = false 为 会议室 * @param {[type]} onOff [description] */ function changeTab( onOff ){ if( onOff ){ $('#meeting_entry_form .s_item2').css('display','none') && $('#s_item_location').css({ 'width': '101%', 'text-align':'left', 'text-indent':'11px' }) && $('#meeting_city').css({ 'width': '380px' }) && $('.demand-meeting').css('display','none') }else{ $('#meeting_entry_form .s_item2').css('display','block') && $('#s_item_location').css({ 'width': '211px', 'text-align':'right', 'text-indent':'-100px' }) && $('#meeting_city').css({ 'width': '140px' }) && $('.demand-meeting').css('display','block') } } var MeetingPlaceSearch = { showTips: function (obj, msg) { obj.focus(); setTimeout(function () { MeetingMod.formValidator.method('show', { $obj: $(obj), data: MeetingMod.langConf['notice'][msg], removeErrorClass: !0, hideEvent: 'blur', isScroll: false, iframe: true }); }, 50); return false; }, getPerson: function(objValue){ var personStr = ""; switch(+objValue){ case 0: break; case 1: personStr = "cb0ce50"; break; case 2: personStr = "cb50ce100"; break; case 3: personStr = "cb101ce200"; break; case 4: personStr = "cb201ce300"; break; case 5: personStr = "cb301ce500"; break; case 6: personStr = "cb501ce10000"; break; } return personStr; }, getBudget:function(objValue){ var budgetStr = ""; switch(+objValue){ case 0: break; case 1: budgetStr = "vb0ve3000"; break; case 2: budgetStr = "vb3000ve5000"; break; case 3: budgetStr = "vb5000ve10000"; break; case 4: budgetStr = "vb10000ve20000"; break; case 5: budgetStr = "vb20000ve30000"; break; case 6: budgetStr = "vb30001ve1000000"; break; } return budgetStr; }, kwHtmlEncode: function(text) { try { return text.replace(/&/g, '&').replace(/\"/g, '"').replace(//g, '>').replace(/\+/g, '＋'); } catch (e) { return ""; } }, // online会场大首页改版 selectTab:function(){ var el = $('#longRoom'), _targetList = el.find('.s_type_list'), _targetInput = el.find('.s_type_list input'), _targetLabel = el.find('.s_type_list label') _targetLabel.attr('name','list') $(_targetInput[0]).attr('checked','checked') // 默认查询团房类型以及参数 window._searchType = 'search_tab=0&room_option=1' _targetLabel.bind('click',function(ev){ if (ev.target.type == 'radio') { return; } var _this = $(this) tab( _this ) }) function tab( dom ){ var _this = dom, $noCitySelected = $('.mt-city-not-selected-hint'), $filterCity = $('.mt-city-not-found-hint.filter'), cityID = $('#meeting_city').attr('data-ename').slice(4), $input = dom.parentNode().find('input'), value = $input.value() // url查询参数 function urlSearch(value){ switch(value){ case "1": window._searchType = _searchType = 'search_tab=0&room_option=1'; break; case "2": window._searchType = _searchType = 'search_tab=0&room_option=2'; break; case "3": window._searchType = _searchType = 'search_tab=1'; break; } } for (var i = 0; i < $input.length; i++) { $input[i].checked = false } $input[0].checked = true // 类型切换 $input.attr('checked','true') && $input.attr('value')== 3 ? changeTab(false) : changeTab(true) // 类型切换时候移除城市为空搜索的提示以及会议场地类型下目的地为港澳台的提示 $noCitySelected.removeClass('open') $filterCity.removeClass('open') urlSearch(value) // 判断城市是否为港澳台 _funFilterCity(cityID) } _targetInput.bind('click',function(ev){ tab($(this)) }) }, submit: function (isSearch) { var cityName var txtCityName = document.getElementById('meeting_city'); var optionPerson = document.getElementById('s_item_num'); var optionBudget = document.getElementById('meeting_budgetValue'); var txtKeyword = document.getElementById('meeting_keyword'); var cityValue = txtCityName.getAttribute('data-ename'); var personStrlink = MeetingPlaceSearch.getPerson(optionPerson.value); // 首页改版去掉场地选择 默认处理是不限 var budgetStrlink = MeetingPlaceSearch.getBudget("0"); var keywordValueTemp = txtKeyword.value; var keywordValue = (keywordValueTemp == "" || keywordValueTemp == MeetingMod.langConf.keyword_placeholder ? "" : keywordValueTemp); var linkStr = ""; if (!cityValue) { return MeetingPlaceSearch.showTips(txtCityName, 'city'); } var cityNameEncodeValue = encodeURIComponent(txtCityName.value); var kwEncodedValue = encodeURIComponent(MeetingPlaceSearch.kwHtmlEncode(keywordValue.replace( /\(.*，.*\)$/ , '' ) )); if (isSearch) { if ( MeetingMod.keywordsSelectedByDropdown && // 如果 items 字段长度为 9，则为联想输入，此时不传 id // 否则 items 字段应该为 5，此时为直接从下拉菜单点选，传id MeetingMod.keywordsSelectedByDropdownData.items.length === 5 ) { // 直接从关键词下拉菜单选择，热门商圈及行政区域传 id ;( function ( rawData ) { var id = rawData[ 2 ] // 商圈或行政区域 id var type = rawData[ 3 ] // 类别：Zone=商圈，Location=行政区域 // 统一字段名，因为会场列表页 URL rewrite 规则与这里字段不统一 // 这里做下简单的转换 if ( type === 'Location' ) { type = 'reg' } else { type = 'zone' } // 根据类型加上对应channel参数 var channel = _searchType == 'search_tab=1' ? '&channel=1' : '&channel=0' linkStr = '/online/search/' + cityValue + type + id + budgetStrlink + personStrlink + '?' + window._searchType + channel } )( MeetingMod.keywordsSelectedByDropdownData.data.split( '|' ) ) } else { try { cityName = MeetingMod.keywordsSelectedByDropdownData.data.split( '|' )[ 1 ].match( /\((.*)，(.*)\)$/ )[ 1 ] txtCityName.value = cityName } catch ( err ) { // ignore 因为目前城市数据是根据文本解析所以很脆弱 } $.cookie.set('mtcity', 'name', cityName || txtCityName.value , { 'expires' : 90, 'path' : '/' }) $.cookie.set('mtcity', 'id', $('#meeting_city').attr('data-ename').replace('city', ''), { 'expires' : 90, 'path' : '/' }) // 直接输入关键词，热门商圈及行政区域传输入的文本 // // 根据类型加上对应channel参数 var channel = _searchType == 'search_tab=1' ? '&channel=1' : '&channel=0' linkStr = "/online/search/" + cityValue + budgetStrlink + personStrlink + (keywordValue == "" ? '?' + _searchType : "?keywords=" + kwEncodedValue + '&' + _searchType) + channel; MeetingPlaceSearch.buildParam("keywords", kwEncodedValue, fm); } } else { //需求单的链接跟列表页的链接不同 linkStr = "/online/Demand"; MeetingPlaceSearch.buildParam("meetingCity", cityNameEncodeValue + ":" + cityValue, fm); MeetingPlaceSearch.buildParam("meetingPerson", optionPerson.value, fm); MeetingPlaceSearch.buildParam("meetingBudget", "0", fm); MeetingPlaceSearch.buildParam("meetingKword", kwEncodedValue, fm); fm.action = ENV + linkStr; fm.target = '_self'; return true; } // 判断 若是港澳台城市不跳转 if(_filterCity){ return }else{ fm.action = ENV + linkStr; } fm.target = '_self'; return true; }, buildParam: function (name, value, form) { var el = form[name]; if (!el) { el = document.createElement('input'); el.type = 'hidden'; el.name = name; form.appendChild(el); } el.value = value; }, syncCookie: function () { var param = { cityId: '', cityName: '', cityPY: '', checkIn: '', checkOut: '' }; getCookie(location.host.match(/big5\./) ? 'BIntHotelCityID' : 'IntHotelCityID', param); var cityId = param.cityId; var cityPY = param.cityPY; var cityName = param.cityName; var checkIn = param.checkIn; var checkOut = param.checkOut; if (cityId && cityPY && cityName) { $('#inteCityId').value(cityId); $('#inteCityName').value(cityName); $('#inteCityPy').value(cityPY); MeetingMod.n_city.method("checkValue"); } }, init: function () { // 埋点代码start if (!window.__bfi) { window.__bfi = [] } function set (type, key, value) { window.__bfi.push([type, key, typeof value == 'string' ? value : $.stringifyJSON(value)]) } function setTrackLog (key, value) { set('_tracklog', key, value) } // 埋点代码end // 默认类型样式 changeTab(true) // 判断港澳台城市字段 港澳台为true window._filterCity = false; new RegMod({ city: $('#meeting_city'), keyword: $('#meeting_keyword') }); //this.syncCookie(); var hidCityId = document.getElementById('meeting_city').getAttribute('data-ename'); var cityIDTemp = hidCityId != null ? hidCityId.replace('city','') : 2; //var hidCityName = document.getElementById('meeting_city'); setKeywordData({ itemId: cityIDTemp}); $('#meeting_searchBtn').bind('click', function (e) { var thisDom = $(this), loadCls = "s_btn_ing"; thisDom.removeClass(loadCls); if (MeetingPlaceSearch.submit(true)) { thisDom.addClass(loadCls); $('#meeting_searchBtn').addClass('s_btn_ing'); $('#meeting_searchBtn').value('搜索中…'); fm.submit(); } }); $('#meeting_demand').bind('click', function (e) { if (MeetingPlaceSearch.submit(false)) { // 需求单埋点 try { setTrackLog('Action_Mtg_PC_Inquiry', { position: '5' }) } catch (err) { console.log('需求单埋点失败') } fm.submit(); } }); // 大首页改版 var _this = this; var onceTab = setTimeout(function(){ _this.selectTab() },0) } }; MeetingPlaceSearch.init(); })(window, cQuery); //添加输入检索城市功能 ;( function ( root , factory ) { var citySearchEngine = factory() var $citySearchEngineInput = $( '#meeting_city' ) var $keywordsInput = $( '#meeting_keyword' ) var $searchBtn = $( '#meeting_searchBtn' ) var _submit var formEl = document.getElementById( 'meeting_entry_form' ) root.MeetingMod.citySearchEngine = citySearchEngine root.MeetingMod.selectedByDropdown = true var $cityNotFoundHint // 城市未找到提示 var $cityNotSelectedHint // 城市未选择提示 ;( function applyDOMPatch() { // 插入城市未找到、未选择提示 HTML var notFoundHintHTML = ' 目的地不存在 ' var notSelectedHintHTML = ' 请选择城市搜索 ' var notCitySelectedHintHTML = ' 港澳台只能预订团房 ' var notFoundEl = document.createElement( 'span' ) var notSelectedEl = document.createElement( 'span' ) var citySelectedEl = document.createElement( 'span' ) notFoundEl.innerHTML = notFoundHintHTML notSelectedEl.innerHTML = notSelectedHintHTML citySelectedEl.innerHTML = notCitySelectedHintHTML notFoundEl.className = 'mt-city-not-found-hint' notSelectedEl.className = 'mt-city-not-selected-hint' citySelectedEl.className = 'mt-city-not-found-hint filter' var container = document.getElementById( 'meeting_city' ).parentNode var fragment = document.createDocumentFragment() fragment.appendChild( notSelectedEl ) fragment.appendChild( notFoundEl ) fragment.appendChild( citySelectedEl ) container.appendChild( fragment ) container.style.position = 'relative' $cityNotFoundHint = $( notFoundEl ) $cityNotSelectedHint = $( notSelectedEl ) } )() // copied from legacy code var keywordSource = '//meeting.ctrip.com/online/Ajax/AjaxGetHotKeyword.aspx?cityid=${cityId}' var keywordFilter = '//meeting.ctrip.com/online/Ajax/AjaxSearchKeyword.aspx?cityId=${cityId}&keyword=${key}&overcity=1&callback=MeetingMod.jsonpPosCallback' // copied from legacy code var setKeywordData = function setKeywordData( opt ) { var reCityID = /\$\{cityId}/g if ( !MeetingMod.a_keyword ) { return } setTimeout( function () { MeetingMod.a_keyword.set( 'jsonpFilter' , opt.itemId ? keywordFilter.replace( reCityID , opt.itemId || '' ) : void 0 ) MeetingMod.a_keyword.set( 'jsonpSource' , opt.itemId ? keywordSource.replace( reCityID , opt.itemId || '' ) : void 0 ) } , 0 ) } // 关闭输入框 readonly 模式 $citySearchEngineInput[ 0 ].removeAttribute( 'readonly' ) // 设置数据源 citySearchEngine .setDataSourceURL( '//meeting.ctrip.com/online/Ajax/AjaxSearchCity.aspx' ) // 选择城市回调 citySearchEngine .onCitySelect( function ( id , name ) { if ( id && name ) { _funFilterCity(id) $citySearchEngineInput.value( name ) $citySearchEngineInput.attr( 'data-ename' , 'city' + id ) $cityNotFoundHint.removeClass( 'open' ) $cityNotSelectedHint.removeClass( 'open' ) // 关键词联动 setKeywordData( { itemId : id , cityDisplay : '' , keywordDisplay : '' } ) } else { if ( !citySearchEngine.getCity() ) { $cityNotFoundHint.addClass( 'open' ) $cityNotSelectedHint.removeClass( 'open' ) } } } ) // 城市输入框获取焦点时，移除所有错误提示 $citySearchEngineInput.bind( 'focus' , function onFocus() { $cityNotFoundHint.removeClass( 'open' ) $cityNotSelectedHint.removeClass( 'open' ) } ) // [[hack]] form.submit 加一个 monkey patch // 这样可以不改变之前 meeting_entry 行为的基础上，扩展其行为 // 如此一来就可以直接在 console 里调试 _submit = formEl.submit formEl.submit = function monkeyPatch() { var city = citySearchEngine.getCity() if ( $citySearchEngineInput.value() === '' && !MeetingMod.selectedByDropdown ) { $cityNotFoundHint.removeClass( 'open' ) // 根据类型不同未选择城市的提示框位置不同 if( _searchType== 'search_tab=1' ){ $cityNotSelectedHint.css('left','211px') $cityNotSelectedHint.addClass( 'open' ) }else{ $cityNotSelectedHint.css('left','451px') $cityNotSelectedHint.addClass( 'open' ) } $searchBtn.removeClass( 's_btn_ing' ) $searchBtn.value( '搜索' ) return } if ( !city && !MeetingMod.selectedByDropdown ) { $cityNotFoundHint.removeClass( 'open' ) $cityNotSelectedHint.addClass( 'open' ) $searchBtn.removeClass( 's_btn_ing' ) $searchBtn.value( '搜索' ) return } // 调用原生 submit _submit.call( formEl ) } } )( this , function factory(require, exports, module) { ; ( function () { // 插入搜索框样式 var cssText = '#mt-city-search-engine-container { position: absolute; top: 0; left: 0; width: 0; height: 0; } #mt-city-search-engine-container.open { z-index: 100; } #mt-city-search-engine { display: none; position: absolute; border: 1px solid #999; background-color: #FFF; width: 398px; z-index: 200; } #mt-city-search-engine.open { display: block; } .mt-city-search-engine__hint { height:26px; margin:0 10px 4px; padding:0 2px; border-bottom:1px dotted #CCC; line-height:26px; color:#999; } .mt-city-search-engine__result { display:block; overflow:hidden; padding:5px 7px 5px 10px; color:#333; line-height:18px; cursor:pointer; *zoom:1; } .mt-city-search-engine__result.highlight, .mt-city-search-engine__result:hover { background-color: #2577E3; color: #FFF; text-decoration: none; } .mt-city-search-engine__no-match { line-height: 26px; overflow: hidden; margin:0 10px 4px; padding:0 2px; color: #C01111; border-bottom: 0 none; } .mt-city-search-engine-close { cursor: pointer; float: right; width: 26px; height: 26px; font: bold 14px/26px Simsun; color: #666; text-align: center; } .mt-city-search-engine__result-category { float: right; height: 18px; line-height: 18px; background-image: url(http://pic.c-ctrip.com/hotels121118/ico_search_box_2.png); background-repeat: no-repeat; width: 62px; padding-right: 20px; padding-left: 0; text-align: right; background-position: right -33px; } .mt-city-search-engine__result.highlight .mt-city-search-engine__result-category, .mt-city-search-engine__result:hover .mt-city-search-engine__result-category { background-position: right 2px; } .mt-city-search-engine-pagination { display: block; font: 12px/1.5 arial; margin:-1px 0 0; padding:6px 0; text-align: center; background:#fff; position:relative; } .mt-city-search-engine-pagination a { display: inline-block; margin: 0;color: #06c;padding: 0 6px;font:14px/1.5 Tahoma, Arial, Simsun, sans-serif;text-decoration: underline; } .mt-city-search-engine-pagination a.current { color: #000; text-decoration: none; } #mtcity.mt-city-empty { color: #999; } /* notice 模块样式 */ #mtcity.mt-city-city-not-selected { background-color: #FFF7D9; border-color: #D80000 #E50000 #E50000 #D80000; border-style :solid; border-width: 1px; } .mt-city-not-found-hint, .mt-city-not-selected-hint { display: none; margin: 0; padding: 0; overflow: hidden; position: absolute; width: auto; color: #333; border-radius: 5px; font: 12px/2 Arial, Tahoma, simsun; top: 12px; left: 151px; } .mt-city-not-found-hint.open, .mt-city-not-selected-hint.open { display: block; } .mt-city-not-found-hint__wrapper, .mt-city-not-selected-hint__wrapper { border-radius: 5px; border: 1px solid #FFB533; background-color: #FFF5D1; display: block; margin: 0; padding: 0; margin-left: 8px; } .mt-city-not-found-hint__arrow, .mt-city-not-selected-hint__arrow { display: block; left: 2px; margin-top: 7px; background-position: -16px -48px; position: absolute; width: 16px; height: 16px; overflow: hidden; background-repeat: no-repeat; background-image: url(http://pic.c-ctrip.com/common/un_jmp_tri.png); } .mt-city-not-found-hint__text, .mt-city-not-selected-hint__text { margin: 0; padding: 0; display: block; } .mt-city-not-found-hint span, .mt-city-not-selected-hint span { padding: 2px 5px; }' cssText += '.mt-city-not-found-hint,'+ '.mt-city-not-selected-hint { display: none; margin: 0; padding: 0; overflow: hidden; position: absolute; width: auto; color: #333; border-radius: 5px; font: 12px/2 Arial, Tahoma, simsun; top: 3px; left: 451px; text-indent: 0 !important; }'+ '.mt-city-not-found-hint.open,'+ '.mt-city-not-selected-hint.open { display: block; }'+ '.mt-city-not-found-hint__wrapper,'+ '.mt-city-not-selected-hint__wrapper { border-radius: 5px; border: 1px solid #FFB533; background-color: #FFF5D1; display: block; margin: 0; padding: 0; margin-left: 8px; }'+ '.mt-city-not-found-hint__arrow,'+ '.mt-city-not-selected-hint__arrow { display: block; left: 2px; margin-top: 7px; background-position: -16px -48px; position: absolute; width: 16px; height: 16px; overflow: hidden; background-repeat: no-repeat; background-image: url(http://pic.c-ctrip.com/common/un_jmp_tri.png); } .mt-city-not-found-hint__text,'+ '.mt-city-not-selected-hint__text { margin: 0; padding: 0; display: block; }'+ '.mt-city-not-found-hint span,'+ '.mt-city-not-selected-hint span { padding: 2px 5px; }'+ '.mt-city-not-found-hint__text .tmp-d { display: inline-block; text-align:center; width: 80px; }'+ '.mt-city-not-selected-hint__text .tmp-d { display: inline-block; text-align: center; width: 100px; }' var head = document.head || document.getElementsByTagName( 'head' )[ 0 ] var styleElement = document.createElement( 'style' ) styleElement.type = 'text/css' if ( styleElement.styleSheet ) { styleElement.styleSheet.cssText = cssText } else { styleElement.appendChild( document.createTextNode( cssText ) ) } head.appendChild( styleElement ) // 大首页改版 for(var i=0;i<3;i++){ var el = document.createElement('input') var targetParent = document.getElementById('meeting_entry_form') el.type = 'hidden' el.name = 'list' el.id = 'hidden' + i el.value = ++i; targetParent.appendChild(el) } } )() var searchIsOpen = false // 获取城市列表 function _fetchAllCities() { $.jsonp(dataSourceURL + '?callback=cQuery.onAllMeetingCitiesFetched') } cQuery.onAllMeetingCitiesFetched = function onAllMeetingCitiesFetched(data) { allCities = data.Cities } function debounce( func , wait , immediate ) { var timeoutHandle return function () { var ctxt = this var args = arguments var callNow = immediate && !timeoutHandle clearTimeout( timeoutHandle ) timeoutHandle = setTimeout( function () { timeoutHandle = null if ( !immediate ) { func.apply( ctxt , args ) } } , wait ) if ( callNow ) { func.apply( ctxt , args ) } } } // 定位浮层 function layout() { var offset = $trigger.offset() $searchEngine.css('top', offset.top + offset.height + 'px') $searchEngine.css('left', offset.left + 'px') } // 判断按键是否为 printable 键位 function _isPrintableKey(keyCode) { // TADA return true } // 判断按键是否为 ENTER 键位 function _isEnterKey(keyCode) { return keyCode === 13 } // 判断按键是否为方向键 function _isArrowKey(keyCode) { return keyCode >= 37 && keyCode <= 40 } // 依据当前 query 更新模板 function _updateResultsWithQuery(query, byPassFilter) { if (!byPassFilter) { _filterCities(query) } var pagination = pager.getPagination() var current = pagination.current var n = pager.ITEMS_PER_PAGE if (filteredCities.length > 0 && !byPassFilter) { // 默认选中第一i个 selectedIndex = 0 } $searchEngine.html( $.tmpl.render( tpl, { 'query' : query, 'pagination' : pagination, 'selectedIndex' : selectedIndex, 'cities' : filteredCities.slice((current - 1) * n, current * n), 'loaded' : allCities.length > 0 } ) ) } // 依据 query 过滤城市列表 function _filterCities(query) { var city var result = [] var i, len = allCities.length if (query === '') { return } for (i = 0 ; i < len ; i ++) { city = allCities[i] if (matches(city.py, query) || matches(city.jp, query) || matches(city.name, query) || (query.length === 1 && matches(city.initial, query))) { result.push(city) } } filteredCities = result pager.reset(filteredCities.length) } // 判断 query 字符串是否匹配城市名称/简拼首写等 function matches(string, query) { return (new RegExp('^' + query.replace(/^\s+|\s+$/g, ''), 'i')).test(string) } // 开启/关闭选择器 function _openSearch() { searchIsOpen = true layout() $searchEngine.addClass('open') $container.addClass('open') } function _closeSearch(selectCurrent, selectDefault) { searchIsOpen = false var selectedCity if (selectDefault) { selectedCity = module.getCity(true) if (selectedCity) { setTimeout(function () { onCitySelect(selectedCity.id, selectedCity.name) }, 0) } else { setTimeout(function () { onCitySelect(null, null) }, 0) } selectedIndex = 0 } else if (selectCurrent) { selectedCity = module.getCity(true) selectedCity = module.getCity() if (selectedCity) { setTimeout(function () { onCitySelect(selectedCity.id, selectedCity.name) }, 0) } else { setTimeout(function () { onCitySelect(null, null) }, 0) } } $searchEngine.removeClass('open') $container.removeClass('open') } function processHotKey(event) { var n = (function () { // 当前页码对应的条目数 var pagination = pager.getPagination() var current = pagination.current var numberOfPages = pager.numberOfPages var numberOfItems = pager.numberOfItems var reminder = numberOfItems % pager.ITEMS_PER_PAGE if (current === numberOfPages) { return reminder === 0 ? pager.ITEMS_PER_PAGE : reminder } else { return pager.ITEMS_PER_PAGE } })() if (_isArrowKey(event.keyCode)) { switch (event.keyCode) { case 38: // UP selectedIndex = (selectedIndex - 1 + n) % n event.preventDefault() event.stopPropagation() break case 40: // DOWN selectedIndex = (selectedIndex + 1) % n event.preventDefault() event.stopPropagation() break } _updateResultsWithQuery($trigger.value(), true) return true } else if (_isEnterKey(event.keyCode)) { if (searchIsOpen) { _closeSearch(true) // 关闭并返回当前城市 } else { $('#mtSearchBtn').trigger('click') } return true } } var module // 方向键支持 var selectedIndex = -1 // 城市选择成功事件监听列表 var onCitySelect = function noop() {} // 模板 var tpl = ' {{if cities.length > 0}}'+ '
            '+ '
×${query}，若需缩小范围，请输入更多条件。

'+ '
            '+ '
            '+ '{{each (i, city) cities}}'+ '
            '+ '{{if (i==0) }}城市{{/if}}'+ '${city.name}'+ ''+ '{{/each}}'+ '
            '+ '{{else}}'+ '
×对不起，没有找到：${query}

            '+ '{{/if}}' + '{{if (pagination.from >= 1 && pagination.slots.length > 1) }}' + '
            ' + '{{if (pagination.current>1)}}<-{{/if}}' + '{{loop (index) pagination.from, pagination.to + 1 }}' + '${index}' + '{{/loop}}' + '{{if (pagination.current < pagination.numberOfPages)}}->{{/if}}' + '
            '+ '{{/if}}' // 城市列表数据 var allCities = [] var filteredCities = [] // 触发器 DOM 节点 var $trigger = $( '#meeting_city') // 选择器 DOM 节点 var $container = (function createContainer() { var container = document.createElement('div') container.id = 'mt-city-search-engine-container' $(document.body).append(container) return $(container) })() var $searchEngine = (function createSearchEngine() { var searchEngine = document.createElement('div') searchEngine.id = 'mt-city-search-engine' $container.append(searchEngine) return $(searchEngine) })() // 分页记录 var Pager = ( function () { // 构造函数 function Pager(numberOfItems) { this.reset(numberOfItems) } // 分页选项配置，可以通过 Pager.prototype.config() 方法进行配置 Pager.prototype.MAX_PAGES = 5 // 每次最多显示页数 Pager.prototype.ITEMS_PER_PAGE = 8 // 每页条目数 Pager.prototype.config = function config(configuration) { if (typeof configuration.MAX_PAGES === 'number' && typeof configuration.ITEMS_PER_PAGE === 'number' && configuration.MAX_PAGES > 0 && configuration.ITEMS_PER_PAGE > 0) { this.MAX_PAGES = configuration.MAX_PAGES this.ITEMS_PER_PAGE = configuration.ITEMS_PER_PAGE } } // 重置 Pager Pager.prototype.reset = function reset(numberOfItems) { if (typeof numberOfItems === 'number' && numberOfItems > 0) { this.index = 0 this.numberOfItems = numberOfItems this.numberOfPages = Math.ceil(numberOfItems / this.ITEMS_PER_PAGE) } else { this.index = -1 this.numberOfItems = -1 this.numberOfPages = -1 } } // 跳转处理 Pager.prototype.prev = function prev() { this.index = Math.max(this.index - 1, 0) } Pager.prototype.next = function next() { this.index = Math.min(this.index + 1, this.numberOfPages - 1) } Pager.prototype.to = function to(index) { if (index >= 0 && index < this.numberOfPages) { this.index = index } } // 获取分页控件参数 Pager.prototype.getPagination = function getPagination() { var m = this.index + 1 var slots = [ m ] var cur var n = ( this.MAX_PAGES - 1 ) / 2 var r = 0 for ( cur = m - 1 ; r < n && cur > 0 ; cur -= 1 , r += 1 ) { slots.unshift( cur ) } n = n + ( n - r ) for ( cur = m + 1 ; n > 0 && cur <= this.numberOfPages ; cur += 1 , n -= 1 ) { slots.push( cur ) } return { // backword-compatible from : slots[ 0 ], to : slots[ slots.length - 1 ], slots : slots, numberOfPages : this.numberOfPages, current: this.index + 1 } } return Pager } )() var pager = new Pager() // 城市列表获取地址 var dataSourceURL = '' // 客户端使用 exports.setDataSourceURL 方法设置 if ($trigger.length === 0) { // 若页面不存在触发器，则不做任何操作 return { 'setDataSourceURL' : function noop() {}, 'onCitySelect' : function noop() {} } } $trigger.bind('keydown', function onTriggerKeyDown(event) { var keyCode = event.keyCode var oldValue = event.target.value if (!processHotKey(event)) { selectedIndex = -1 // 仅在查询条件变更时更新 selectedIndex setTimeout(function () { var currentValue = event.target.value if (currentValue === oldValue) { return } if (_isPrintableKey(keyCode)) { MeetingMod.selectedByDropdown = false if (/^\s*$/.test(currentValue)) { _closeSearch() // 仅关闭 } else { _openSearch() _updateResultsWithQuery(currentValue) } } }, 0) } }) $(document.body).bind('click', function onDocumentClick(event) { // 点击外部关闭 if (searchIsOpen) { _closeSearch(false, true) } event.stopPropagation() }) $searchEngine.bind('click', function onClick(event) { var $target = $(event.target) // 关闭按钮 if ($target.hasClass('mt-city-search-engine-close')) { _closeSearch(false, true) // 关闭并获取当前城市 event.stopPropagation() return } // 分页机制 if ($target.hasClass('mt-city-search-engine__nav-pager')) { // 数字导航 pager.to(+$target.attr('data-to')) selectedIndex = 0 _updateResultsWithQuery($trigger.value(), true) event.stopPropagation() return } if ($target.hasClass('mt-city-search-engine__dir-pager')) { pager[$target.attr('data-dir')]() selectedIndex = 0 _updateResultsWithQuery($trigger.value(), true) event.stopPropagation() // 方向导航 return } while (!$target.is('li.mt-city-search-engine__result')) { $target = $target.parentNode() if ($target.length === 0) { return } } event.stopPropagation() onCitySelect($target.attr('data-city-id'), $target.attr('data-city-name')) selectedIndex = +$target.attr('data-key-index') _closeSearch() }) $( window ).bind( 'resize' , debounce( layout , 250 ) ) module = { // 依据当前过滤列表及 selectedIndex 返回选择的城市 // 若传递 getDefault 则返回第一个城市 'getCity' : function getCity(getDefault) { var index = getDefault ? 0 : selectedIndex var pagination = pager.getPagination() var current = pagination.current var n = pager.ITEMS_PER_PAGE var selectedCity = filteredCities.slice((current - 1) * n, current * n)[index] return selectedCity ? selectedCity : false }, 'isOpen' : function isOpen() { return searchIsOpen }, 'open' : _openSearch, 'close' : _closeSearch, 'setDataSourceURL' : function setDataSource(url) { dataSourceURL = url allCities = [] _fetchAllCities() _updateResultsWithQuery($trigger.value()) }, 'onCitySelect': function registerOnCitySelectCallback(callback) { if (typeof callback === 'function') { onCitySelect = callback } } } return module } )/*****$endoflist$*****/