/**
 * Created by Administrator on 2018/2/9.
 */
//20150713V2*********20151208 /* * Cmd * @Author: yulianghuang * @CreateDate 2012/11/5 * @ModifyDate 2014/07/29 */ (function() { var _cmd = {}; //jsonp的时候回调函数用 _cmd.JsonPData = undefined, /* * Ajax Mode internal * @param {string} url * @param {string} requestType:post,get... * @param {string|null} arguments * @param {function|null} callback function */ _cmd.ajax = function(url, content, callback) { var xmlVer = ["MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], xmlObj; try { xmlObj = new XMLHttpRequest(); } catch (e) { for (var i = 0; i < xmlVer.length; i++) try { xmlObj = new ActiveXObject(xmlVer[i]); break; } catch (e) {} } if (!xmlObj) return; xmlObj.open(content ? "POST" : "GET", url || location.href, !!callback); //xmlObj.setRequestHeader("Content-Type", "text/javascript"); xmlObj.setRequestHeader("Content-Type", "application\/x-www-form-urlencoded"); //xmlObj.setRequestHeader("Content-Type", "application\/x-javascript"); xmlObj.setRequestHeader("If-Modified-Since", new Date(0)); function getReturnValue() { return (xmlObj.status == 200 ? (/xml/i.test(xmlObj.getResponseHeader("content-type")) ? xmlObj.responseXML : xmlObj.responseText) : null); } if (callback) xmlObj.onreadystatechange = function() { if (xmlObj.readyState == 4) { var txt = getReturnValue(); if (callback(txt) === true) { setTimeout(function() { _cmd.ajax(url, content, callback); }, 1000); } } }; xmlObj.send(content || ""); return callback ? xmlObj : getReturnValue(); }; /* * convert string to json * @param {string} the json string * @param {object} the json object */ _cmd.fromJson = function(pData) { var variable; try { variable = eval("(" + pData + ")"); } catch (e) {}; return variable; }; /* * Cookie Mode * @Author: yulianghuang * @CreateDate 2012/11/5 */ _cmd.Cookie = new function() { var _obj = {}; /* * transform the cookie string to the javascript object * @return {object} cookie object */ this.GetCookieObj = function() { var cookies = document.cookie.split("; "), _temp; _obj = {}; for (var i = cookies.length - 1; i !== -1; i--) { _temp = cookies[i].split("="); if (_temp.length > 1) { var _key = _temp[0]; _temp.shift(); _obj[_key] = _temp.join("="); } } return _obj; }; /* * get the cookie value by key * @param {string} key * @return {string|null} value */ this.GetCookie = function(key) { this.GetCookieObj(); return _obj[key]; }; /* * set the cookie value (temp use) */ this.SetCookie = function(key, value) { document.cookie = key + "=" + value; }; }; /* * add event * @param {dom} the dom which you bind event to * @param {string} the tpye name of the function * @param {function} the function */ _cmd.addEvent = function(obj, type, fn) { if (obj.addEventListener) obj.addEventListener(type, fn, false); else if (obj.attachEvent) { obj["e" + type + fn] = fn; obj[type + fn] = function() { obj["e" + type + fn](window.event); } obj.attachEvent("on" + type, obj[type + fn]); } }; /* * remove event * @param {dom} the dom which you bind event to * @param {string} the tpye name of the function * @param {function} the function */ _cmd.removeEvent = function(obj, type, fn) { if (obj.removeEventListener) obj.removeEventListener(type, fn, false); else if (obj.detachEvent) { obj.detachEvent("on" + type, obj[type + fn]); obj[type + fn] = null; obj["e" + type + fn] = null; } } /* * Cookie Mode * @Author: yulianghuang * @CreateDate 2012/12/19 * @param {string} the link address of the iframe * @param {function|null} the callBack function * @param {function|null} this function will be executed before the iframe starts to load * @param {string|null} the charset of the iframe * @param {dom|null} the node which the iframe will be appended to,null refers to body */ _cmd.addIFrame = function(pSrc, pCallBack, pSetIframe, pCharset, pParentNode) { var _iframe = document.createElement("IFRAME"), _parent = pParentNode || document.getElementsByTagName("BODY")[0]; _iframe.src = pSrc; _iframe.charset = pCharset || "UTF-8"; typeof pSetIframe === "function" && pSetIframe(_iframe); _cmd.addEvent(_iframe, "load", function() { typeof pCallBack === "function" && pCallBack(_iframe); }); _parent.appendChild(_iframe); }; /* * the script load mode * @Author: yulianghuang * @CreateDate 2012/11/5 */ _cmd.Load = new function() { //variable var _jCookie = _cmd.Cookie.GetCookie("privateJs") || "", //cookieValue _jCookieArray = _jCookie.split(","), //is debug _isDebug = _jCookieArray.length > 1, //addList use _toDo = 0; this.ReleaseNo = undefined; this.MergeUrl = undefined; //write this.IsCreateMerge = false; //read this.IsLoadMerge = false; //method var addItem = function(pObj, pIndex) { var me = this, _self = arguments.callee; if (pIndex < pObj.length) { var _obj = pObj[pIndex]; if (Object.prototype.toString.call(_obj) === '[object Array]') { var l = _toDo = _obj.length; for (var i = 0; i < l; i++) { me.addJs.call(me, _obj[i], function(pObj, pIndex) { _toDo--; if (_toDo === 0) { _self.call(me, pObj, pIndex + 1); } }, pObj, pIndex); } } else if (typeof _obj === "string") { me.addJs.call(me, _obj, function() { _self.call(me, pObj, pIndex + 1); }); } else { _self.call(me, pObj, pIndex + 1); } } }, createMerge = function(pSrcList) { var _arr = []; for (var i = 0; i < pSrcList.length; i++) { _arr = _arr.concat(pSrcList[i]); } var _source = _arr.join(","), _ajaxUrl = "http://localhost/webresource/MergeHandler.ashx", _ajaxParam = ["newFile=", this.MergeUrl, "&source=", _source].join(""); Cmd.ajax(_ajaxUrl, _ajaxParam, function(data) { }); }, config = function() { var _temp = _cmd.Cookie.GetCookie("MergeUrl"); if (_temp) { this.MergeUrl = _temp; this.IsLoadMerge = true; } }; //window.CMD.Load.addList(["/r1.js","/r2.js","/ir3.js"],"/ir3.js","/ir3.js"); this.addList = function() { var me = this; if (this.IsLoadMerge && this.MergeUrl !== undefined) { this.addJs.call(me, this.MergeUrl); } else { var _srcs = Array.prototype.slice.call(arguments); addItem.call(this, _srcs, 0); if (this.MergeUrl !== undefined && this.IsCreateMerge) { createMerge.call(me, _srcs); } } }; /* * get javascripts from a merge page window.CMD.Load.mergeJs("/r1.js,/r2.js,r3.js","merge.js?src="); * @param {string} srcs * @param {string} mergePage * @param {function|null} callback function,arguments followed */ this.mergeJs = function(pSrcs, pMergeUrl, callBack) { var _arguments = Array.prototype.slice.call(arguments, 3), me = this; this.addJs.call(me, pMergeUrl + pSrcs, callBack, _arguments) }; /* * add one javascript * @param {string} src * @param {object|null} callback function,arguments followed * @param {boolen} not use releaseNo */ this.addJs = function(osrc, callBack, isJsonP, pCharset) { var js = document.createElement("script"), _arguments = Array.prototype.slice.call(arguments, 2); if (_isDebug) { osrc.replace(_jCookieArray[0], _jCookieArray[1]); } js.charset = pCharset || "UTF-8"; js.src = (this.ReleaseNo === undefined || isJsonP) ? osrc : osrc + "?releaseno=" + this.ReleaseNo; js.type = "text/javascript"; document.getElementsByTagName("head")[0].appendChild(js); js.onload = js.onreadystatechange = function() { if (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete') { if (callBack != null) { callBack.apply(this, _arguments) } js.onload = js.onreadystatechange = null; } }; }; config(); }; if (window.Cmd) { for (var _jsonCmd in _cmd) { window.Cmd[_jsonCmd] = _cmd[_jsonCmd]; } } else { window.Cmd = _cmd; } })(); /* * Core Simple * @Author: yulianghuang * @CreateDate 2012/11/5 */ (function() { /* * Repair the setInterval and the setTimeout Bug in IE * @Author: yulianghuang * @CreateDate 2012/10/18 */ /* (function (f) { window.setTimeout = f(window.setTimeout); window.setInterval = f(window.setInterval); })(function (f) { return function (c, t) { var a = [].slice.call(arguments, 2); return f(function () { c.apply(this, a) }, t) } }); */ /* * @namespace Core * @Author: yulianghuang * @CreateDate 2012/10/18 */ var _core = { /* * Is pObj Array? * @param {object|number|string|array|boolen...} * @return {boolean} */ isArray: function(pObj) { return Object.prototype.toString.call(pObj) === '[object Array]'; }, newDate: function(pStr) { var _arr = pStr.split("-"); return new Date(+_arr[0], +_arr[1] - 1, +_arr[2]); }, /* * deep clone the obj * @para {object} source object * @return {object} the new obect */ clone: function(pObj) { var o; if (typeof pObj === "object") { if (pObj === null) { o = null; } else { if (_core.isArray(pObj)) { o = []; for (var i = 0, len = pObj.length; i < len; i++) { o.push(arguments.callee(pObj[i])); } } else { o = {}; for (var j in pObj) { o[j] = arguments.callee(pObj[j]); } } } } else { o = pObj; } return o; }, addJs: function(osrc, callBack, arguments) { var js = document.createElement("script"); js.src = osrc; js.type = "text/javascript"; document.getElementsByTagName("head")[0].appendChild(js); js.onload = js.onreadystatechange = function() { if (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete') { if (callBack != null) { callBack.apply(this, arguments) } js.onload = js.onreadystatechange = null; } }; }, /* * replace the pSouce's propreties with pAddition's propreties,deep clone when pIsDeep is true; * @param {object} the source object * @param {object} the addition * @param {boolean} if use the deep clone */ extend: function(pSource, pAddition, pIsDeep) { if (pIsDeep) { for (var p in pAddition) { pSource[p] = _core.clone(pAddition[p]); } } else { for (var p in pAddition) { pSource[p] = pAddition[p]; } } }, /* * don't use this to get a new guid */ _guid: 1, /* * get GUID * @return {number} */ getGuid: function() { return this._guid++; }, /* * bind dom event */ bind: function(pElement, pType, pHandler) { var me = this; //Set the guid of pHandler if (!pHandler.$$guid) pHandler.$$guid = me.getGuid(); //Append Events to pHandler if (!pElement.events) pElement.events = {}; //Get the handler of current event var _handlers = pElement.events[pType]; //If Empty,new handlers and save the preview handler if (!_handlers) { _handlers = pElement.events[pType] = {}; //Save the preview handler if (pElement["on" + pType]) { _handlers[0] = pElement["on" + pType]; } } //Record the function _handlers[pHandler.$$guid] = pHandler; //Proxy excute pElement["on" + pType] = me.handleEvent; }, /* * unbind dom event * @param {dom} * @param {string} * @param {function} */ unbind: function(pElement, pType, pHandler) { if (pElement.events && pElement.events[pType]) { delete pElement.events[pType][pHandler.$$guid]; } }, unbindAll: function(pElement) { if (pElement.events) { for (var _tpye in pElement.events) { pElement.events[_tpye] = {}; } } }, /* * handle the event * @param {dom} * @param {string} * @param {function} */ handleEvent: function(event) { var returnValue = true; //fix event event = event || _core.fixEvent(window.event); //_core.fixEventAddition(event); var _handlers = this.events[event.type]; for (var i in _handlers) { this.$$handleEvent = _handlers[i]; if (this.$$handleEvent(event) === false) { returnValue = false; } } return returnValue; }, fixEventAddition: function(event) { var type = event.type.toLowerCase(); switch (type) { case "mouseover": event.fromElement = event.fromElement || event.srcElement || event.relatedTarget; break; case "mouseout": event.toElement = event.toElement || event.srcElement || event.relatedTarget; break; } }, getFromElement: function(event) { var node; if (event.type == "mouseover") node = event.relatedTarget || event.fromElement; else if (event.type == "mouseout") node = event.target; if (!node) return; while (node.nodeType != 1) node = node.parentNode; return node; }, getToElement: function(event) { var node; if (event.type == "mouseout") node = event.relatedTarget || event.toElement; else if (event.type == "mouseover") node = event.target; if (!node) return; while (node.nodeType != 1) node = node.parentNode; return node; }, /* * fix mouseover mouseout */ fixMouseEvent: function(event, target) { var related, type = event.type.toLowerCase(); //这里获取事件名字 if (type === 'mouseover') { related = event.relatedTarget || event.fromElement; } else if (type === 'mouseout') { related = event.relatedTarget || event.toElement; } else return true; return related && related.prefix != 'xul' && !Core.contains(target, related) && related !== target; }, /* * fix event */ fixEvent: function(event) { event.target = event.srcElement; event.preventDefault = this.fixEvent.preventDefault; event.stopPropagation = this.fixEvent.stopPropagation; return event; }, max: function(pArray) { var _maxNo = -Infinity; for (var i = pArray.length - 1; i !== -1; i--) { if (pArray[i] != null && _maxNo < pArray[i]) { _maxNo = pArray[i]; } } return _maxNo; }, contains: function(root, el) { if (root.compareDocumentPosition) return root === el || !!(root.compareDocumentPosition(el) & 16); if (root.contains && el.nodeType === 1) { return root.contains(el) && root !== el; } while ((el = el.parentNode)) if (el === root) return true; return false; }, random: function(pStart, pEnd) { return Math.random() * (pEnd - pStart + 1) >> 0 + pStart; }, Cache: {} }; _core.fixEvent.preventDefault = function() { this.returnValue = false; }; _core.fixEvent.stopPropagation = function() { this.cancelBubble = true; }; /* * test browser * @namespace Browser * @Author: yulianghuang * @CreateDate 2012/10/18 */ _core.Browser = new function() { //Regular var _regConfig = { Chrome: { Reg: /.*(chrome)\/([\w.]+).*/, Core: "Webkit" }, Firefox: { Reg: /.*(firefox)\/([\w.]+).*/, Core: "Moz" }, Opera: { Reg: /(opera).+version\/([\w.]+)/, Core: "O" }, Safari: { Reg: /.*version\/([\w.]+).*(safari).*/, Core: "Webkit" }, Ie: { Reg: /.*(msie) ([\w.]+).*/, Core: "Ms" } }, _userAgent = navigator.userAgent.toLowerCase(); /* * Get the detail information of browser * @return {object} */ this.getDetail = function() { for (var _o in _regConfig) { var _result = _regConfig[_o].Reg.exec(_userAgent); if (_result != null) { return { Browser: _result[1] || "", Version: _result[2] || "0", Core: _regConfig[_o].Core }; } } return { Browser: "UNKNOWN", Version: "UNKNOWN", Core: "UNKNOWN" }; }; this.isChrome = function() { return _regConfig.Chrome.Reg.test(_userAgent); }; this.isFirefox = function() { return _regConfig.Firefox.Reg.test(_userAgent); }; this.isOpera = function() { return _regConfig.Opera.Reg.test(_userAgent); }; this.isSafari = function() { return _regConfig.Safari.Reg.test(_userAgent); }; this.isIe = function() { return _regConfig.Ie.Reg.test(_userAgent); }; }; _core.Storage = new function() { var _canuse = !!window.sessionStorage, hasData = function(pData) { return pData && pData !== "" && pData !== "null" }, /* * get data from ajax */ ajaxData = function(pKey, pUrl, pArg, pCallBack, pIsLoacl, pCharset) { var me = this; Cmd.ajax(pUrl, pArg, function(data) { dealData.call(me, data, pKey, pCallBack, pIsLoacl); }); }, /* * get .js document which isnot UTF-8 encoding,the return data should be place into _core.cache[key] */ jsonPData = function(pKey, pUrl, pArg, pCallBack, pIsLoacl, pCharset) { var me = this, _url = (pArg != null && pArg != "") ? pUrl + "?" + pArg : pUrl; Cmd.Load.addJs(_url, function() { var data = Cmd.JsonPData; dealData.call(me, data, pKey, pCallBack, pIsLoacl); }, true, pCharset); }, sessionData = function(pKey, pUrl, pArg, pCallBack, pFunc, pCharset) { var data = sessionStorage.getItem(pKey); if (hasData(data)) { dealData(data, pKey, pCallBack, false); } else { pFunc(pKey, pUrl, pArg, pCallBack, false, pCharset); } }, localData = function(pKey, pUrl, pArg, pCallBack, pFunc, pCharset) { var data = localStorage.getItem(pKey); if (hasData(data)) { dealData(data, pKey, pCallBack, true); } else { pFunc(pKey, pUrl, pArg, pCallBack, true, pCharset); } }, dealData = function(data, pKey, pCallBack, pIsLoacl) { _canuse && pIsLoacl && localStorage.setItem(pKey, data); //_canuse && !pIsLoacl && sessionStorage.setItem(pKey,data); pCallBack(data); }; /* * get session storge,if not exist ,get data from the server * @param {string} the hash key name of the data * @param {string} the url where to get data from * @param {string} the arguments used in the request * @param {function|null} the callback function * @param {boolen|null} if use jsonp */ this.getSession = function(pKey, pUrl, pArg, pCallBack, pIsJsonP, pCharset) { var _funcPoint = pIsJsonP ? jsonPData : ajaxData; if (_canuse) { sessionData(pKey, pUrl, pArg, pCallBack, _funcPoint, pCharset); } else { _funcPoint(pKey, pUrl, pArg, pCallBack, false, pCharset); } }; /* * get local storge,if not exist ,get data from the server * @param {string} the hash key name of the data * @param {string} the url where to get data from * @param {string} the arguments used in the request * @param {function|null} the callback function * @param {boolen|null} if use jsonp */ this.getLocal = function(pKey, pUrl, pArg, pCallBack, pIsJsonP, pCharset) { var _funcPoint = pIsJsonP ? jsonPData : ajaxData; if (_canuse) { localData(pKey, pUrl, pArg, pCallBack, _funcPoint, pCharset); } else { _funcPoint(pKey, pUrl, pArg, pCallBack, true, pCharset); } }; }; //Set the global object window.Core = _core; })(); /* * UI Simple * @Author: yulianghuang * @CreateDate 2012/11/5 */ (function() { var _ui = {}; /* * Template Replace MethodCore * @Author: fan_li * @CreateDate 2012/10/19 */ _ui.TReplace = { cache: {}, box: document.createElement("div"), documentFragment: document.createDocumentFragment(), error: function(message) { throw new Error("TRplace Error:" + message + ";"); }, parse: function(template) { if (!this.cache[template]) { var __list__ = []; try { this.cache[template] = eval("(function(){return function(GlobalData){var __result__ = [];" + ("$>" + template + "<$").replace(/<\$= ([\s\S]*?) \$>/g, function(a, b) { return "<$ __result__.push(" + b + "); $>"; }).replace(/\$>([\s\S]*?)<\$/g, function(a, b) { if (/^\s*$/.test(b)) return ""; else return "__result__.push(__list__[" + (__list__.push(b) - 1) + "]);"; }) + "return __result__.join('');}})()"); } catch (e) { this.error("template error"); } } return this.cache[template]; }, replace: function(template, data) { var t = this.parse(template); if (t) { try { return t(data); } catch (e) { this.error("data error"); return ""; } } else { return ""; } }, getElement: function(template, data) { var htmlStr = this.replace(template, data), elements = []; if (!this.documentFragment || this.documentFragment.childNodes.length) this.documentFragment = document.createDocumentFragment(); if (htmlStr) { this.box.innerHTML = htmlStr; var _elements = this.box.childNodes; for (var i = 0, l = _elements.length; i < l; i++) { elements[i] = _elements[0]; this.documentFragment.appendChild(_elements[0]); } _elements = null; } elements.node = this.documentFragment; //add return string elements.htmlStr = htmlStr; return elements; } }; /* * Scroll Repair * @Author: yulianghuang * @CreateDate 2012/10/22 */ _ui.Dom = { /* * Get or set the scrollHeight * @param {number} * @return {number} */ scrollHeight: function(pHeight) { if (typeof(pHeight) === "number") { document.documentElement.scrollHeight = document.body.scrollHeight = pHeight; } else { return document.documentElement.scrollHeight || document.body.scrollHeight || 0; } }, scrollWidth: function(pVal) { if (typeof(pVal) === "number") { document.documentElement.scrollWidth = document.body.scrollWidth = pVal; } else { return document.documentElement.scrollWidth || document.body.scrollWidth || 0; } }, /* * Get or set the scrollTop * @param {number} * @return {number} */ scrollTop: function(pTop) { if (typeof(pTop) === "number") { window.pageYOffset = document.body.scrollTop = document.documentElement.scrollTop = pTop; } else { return Core.max([document.documentElement.scrollTop, document.body.scrollTop, window.pageYOffset, 0]); //because of ie9! //return document.documentElement.scrollTop || document.body.scrollTop || window.pageYOffset || 0; } }, scrollLeft: function(pVal) { if (typeof(pVal) === "number") { window.pageXOffset = document.body.scrollLeft = document.documentElement.scrollLeft = pVal; } else { return Core.max([document.documentElement.scrollLeft, document.body.scrollLeft, window.pageXOffset, 0]); //because of ie9! //return document.documentElement.scrollTop || document.body.scrollTop || window.pageYOffset || 0; } }, /* * Get or set the clientHeight * @param {number} * @return {number} */ clientHeight: function(pHeight) { if (typeof(pHeight) === "number") { document.documentElement.clientHeight = document.body.clientHeight = pHeight; } else { return document.documentElement.clientHeight || document.body.clientHeight || 0; } }, clientWidth: function(pVal) { if (typeof(pVal) === "number") { document.documentElement.clientWidth = document.body.clientWidth = pVal; } else { return document.documentElement.clientWidth || document.body.clientWidth || 0; } }, /* * To ensure if the element has the scroll bar Be Careful with IE * @param {object|undefined} the element need to be tested,empty is the window * @return {object} x,y */ hasScroll: function(el) { var elems = el ? [el] : [document.documentElement, document.body], scrollX = false, scrollY = false; for (var i = 0; i < elems.length; i++) { var o = elems[i]; // test horizontal //Don't use it in the event onscoll. var sl = o.scrollLeft; o.scrollLeft += (sl > 0) ? -1 : 1; o.scrollLeft !== sl && (scrollX = scrollX || true); o.scrollLeft = sl; // test vertical var st = o.scrollTop; o.scrollTop += (st > 0) ? -1 : 1; o.scrollTop !== st && (scrollY = scrollY || true); o.scrollTop = st; } // ret return { scrollX: scrollX || _ui.Dom.clientWidth() < _ui.Dom.scrollWidth(), scrollY: scrollY || _ui.Dom.clientHeight() < _ui.Dom.scrollHeight() }; }, mousePosition: function(event) { if (event.pageX) { return { x: event.pageX, y: event.pageY } } else { return { x: event.clientX + (document.documentElement.scrollLeft || document.body.scrollLeft), y: event.clientY + (document.documentElement.scrollTop || document.body.scrollTop) } } }, /* * set the opacity */ setOpacity: function(pDom, pOpacity) { if (pDom.filters) { arguments.callee = function(pDom, pOpacity) { pDom.style.filter = "alpha(opacity=" + pOpacity + ")"; //pDom.filters.alpha.opacity=pOpacity; } } else { arguments.callee = function(pDom, pOpacity) { pDom.style.opacity = pOpacity / 100; } } arguments.callee(pDom, pOpacity); }, /* * get the absolute position */ position: function(pObj) { var _left = pObj.offsetLeft || 0, _top = pObj.offsetTop || 0; while (pObj = pObj.offsetParent) { _left += eval(pObj.offsetLeft); _top += pObj.offsetTop; } return { x: _left, y: _top }; }, /* * select only element (FF!) */ childElement: function(pDom) { var _array = [], _temp = pDom.childNodes; for (var i = _temp.length - 1; i !== -1; i--) { if (_temp[i].nodeType === 1) { _array.unshift(_temp[i]); } } delete _temp; return _array; }, /* * get the window of the iframe */ iframeWindow: function(pDom) { return pDom.contentWindow; }, /* * get ehe document of the iframe,care the domain */ iframeDocument: function(pDom) { try { return pDom.contentDocument || pDom.contentWindow.document || null; } catch (e) { return null; } }, /* * imitate form sumbit */ sumbitForm: function(pParam, pAction, pMethod, isNew) { var _form = this.createFrom(pParam, pAction, pMethod, isNew); _form.submit(); delete _form; }, sumbitFormByForm: function(pParam, pAction, pMethod) { var _iframe = document.getElementById("CoreIFrame"), _form = this.createFrom(pParam, pAction, pMethod); if (!_iframe) { _iframe = document.createElement("IFRAME"); _iframe.style.display = "none"; document.getElementsByTagName("BODY")[0].appendChild(_iframe); } var _frameDoc = UI.Dom.iframeDocument(_iframe).getElementsByTagName("BODY"), _body = _frameDoc.length > 0 ? _frameDoc[0] : UI.Dom.iframeDocument(_iframe); _body.appendChild(_form); _form.submit(); }, createFrom: function(pParam, pAction, pMethod, isNew) { var _form = document.createElement("FORM"), _inner = [], _guid = Core.getGuid(); isNew && (_form.target = "_blank"); _form.method = pMethod || "get"; for (var name in pParam) { _inner.push([''].join("")); } _inner.push([''].join("")); _form.action = pAction; _form.innerHTML = _inner.join(""); document.body.appendChild(_form); return _form; }, addClass: function(pDom, pClassName) { var _reg = new RegExp('(\\s|\\t|\\n|\\r|^)' + pClassName + '(?=\\s|\\t|\\n|\\r|$)'); if (!_reg.test(pDom.className)) pDom.className += " " + pClassName; }, removeClass: function(pDom, pClassName) { var _reg = new RegExp('(\\s|\\t|\\n|\\r|^)' + pClassName + '(?=\\s|\\t|\\n|\\r|$)'); pDom.className = pDom.className.replace(_reg, ""); }, getParentNode: function(pDom, pDelegate) { var _node = pDom; if (_node != null) { while (_node.parentNode != null) { _node = _node.parentNode; if (pDelegate(_node)) return _node; } } return _node; }, hasParent: function(pSon, pDoms) { var _node = pSon, _val = false; if (_node != null) { while (_node.parentNode != null) { _node = _node.parentNode; for (var i = 0, l = pDoms.length; i < l; i++) { if (pDoms[i] == _node) return true; } } } return _val; } }; window.UI = _ui; })(); if (window.VacationConfig == null) { (function() { $.mod.load('address', PluginsVersion.address); $.mod.load('validate', PluginsVersion.validate); var vacation_search_callback = function(a) { var c = $("#txtVacationDestCity")[0].value; if (a.KeyWords !== c) { return } var b = a.SearchList; var d; var f = { key: c, data: [] }; for (var e = 0, g = b.length; e < g; e++) { d = b[e]; f.data.push([d.Name, d.ID, d.Type, d.ParentName].join("|")) } f.data = "@" + f.data.join("@") + "@"; $.jsonpResponse = f } // var _arr = document.getElementById("solution").value.split('|'), _host1 = (_arr[1] === "BIG5" || _arr[1] === "HK") ? "https://vacations.big5." : "https://vacations.", _host2; switch (_arr[0]) { case "PRO": _host2 = "ctrip.com"; break; case "UAT_NT": _host2 = "uat.qa.nt.ctripcorp.com"; break; case "TEST": _host2 = "test.sh.ctriptravel.com"; break; } var host = _host1 + _host2; window.VacationConfig = { VacationSearchUrl: (host + "/handler/search/do"), AddressDataUrl: (host + "/handler/search/perc?from=ctrip&keyword="), AddressVersion: "1.0", ValidateVersion: "1.1", StartCity: 2 } })(); } (function() { var storage_history = (function() { var window = this; // check to see if we have localStorage or not if (!window.localStorage) { // globalStorage // non-standard: Firefox 2+ // https://developer.mozilla.org/en/dom/storage#globalStorage if (window.globalStorage) { // try/catch for file protocol in Firefox try { window.localStorage = window.globalStorage; } catch (e) {} return; } // userData // non-standard: IE 5+ // http://msdn.microsoft.com/en-us/library/ms531424(v=vs.85).aspx var div = document.createElement("div"), attrKey = "localStorage"; div.style.display = "none"; document.getElementsByTagName("head")[0].appendChild(div); if (div.addBehavior) { div.addBehavior("#default#userdata"); //div.style.behavior = "url('#default#userData')"; var localStorage = window["localStorage"] = { "length": 0, "setItem": function(key, value) { div.load(attrKey); key = cleanKey(key); if (!div.getAttribute(key)) { this.length++; } div.setAttribute(key, value); div.save(attrKey); }, "getItem": function(key) { div.load(attrKey); key = cleanKey(key); return div.getAttribute(key); }, "removeItem": function(key) { div.load(attrKey); key = cleanKey(key); div.removeAttribute(key); div.save(attrKey); this.length--; if (this.length < 0) { this.length = 0; } }, "clear": function() { div.load(attrKey); var i = 0; while (attr = div.XMLDocument.documentElement.attributes[i++]) { div.removeAttribute(attr.name); } div.save(attrKey); this.length = 0; }, "key": function(key) { div.load(attrKey); return div.XMLDocument.documentElement.attributes[key]; } }, // convert invalid characters to dashes // http://www.w3.org/TR/REC-xml/#NT-Name // simplified to assume the starting character is valid cleanKey = function(key) { return key.replace(/[^-._0-9A-Za-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u37f-\u1fff\u200c-\u200d\u203f\u2040\u2070-\u218f]/g, "-"); }; div.load(attrKey); localStorage["length"] = div.XMLDocument.documentElement.attributes.length; } } })(); var VacationSearch = function() { var ctmref = false; var _iptStartCity = document.getElementById("txtVacationStartCity"), _iptDestCity = document.getElementById("txtVacationDestCity"), _btnSearch = document.getElementById("iptVacationSearchBtn"), _panelStartCity = document.getElementById("startcityDiv"), _body = document.getElementsByTagName("BODY")[0], _hiddenVal = document.getElementById("solution").value.split('|')[1], _encode = (_hiddenVal === "BIG5" || _hiddenVal === "HK") ? "big5" : "gb2312", _startCity = 2, _refVacation, inputTime = '', //搜索延迟 initStartCity = function() { var _cookiest = Cmd.Cookie.GetCookie("StartCity_Pkg"); if (_cookiest != null) { var _cookieCity = _cookiest.split("="); if (_cookieCity.length > 1) { var _temp = _cookieCity[1], _arrs = $("#startcityDiv").find("a[data-id]"); for (var i = 0, l = _arrs.length; i < l; i++) { if (_temp == _arrs[i].getAttribute("data-id")) { _startCity = _temp; _iptStartCity.value = _arrs[i].innerHTML; break; } } } } }, /* * 地址选择器 */ SearchAddress = function(pCQueryDom) { var _dom = pCQueryDom, _ref, init = function() { var me = this; initData.call(me, _dom); }, //增加目的地搜索浮出层 suggestionTpl = '\ ×' + '
支持中文/拼音/简拼输入

' + '
搜索历史

' + '
' + '
' + '
' + '
境内热门' + '
出境热门' + '
' + '
' + '北京' + '上海' + '天津' + '重庆' + '大连' + '青岛' + '西安' + '南京' + '苏州' + '杭州' + '厦门' + '成都' + '深圳' + '广州' + '三亚' + '台北' + '香港' + '济南' + '宁波' + '沈阳' + '武汉' + '
' + '
' + '香港' + '普吉岛' + '韩国' + '泰国' + '台北' + '马尔代夫' + '巴厘岛' + '日本' + '澳门' + '新加坡' + '柬埔寨' + '意大利' + '法国' + '希腊' + '塞班岛' + '英国' + '美国' + '毛里求斯' + '长沙岛' + '俄罗斯' + '奥地利' + '瑞士' + '
' + '' + '\
×

\
\ ', //热门目的地事件处理 suggestionTplInt = function() { if ($('.city_select_lhsl')) { var newStor = ['hisStor1', 'hisStor2', 'hisStor3', 'hisStor4', 'hisStor5', 'hisStor6']; $('#city_select_close').bind('mousedown', function() { $("#vaction_hot_dest").hide(); }); $('#vaction_hot_dest .city_item a').bind('mousedown', function() { $('#txtVacationDestCity').value(this.innerHTML); setTimeout(function() { $('#txtVacationDestCity')[0].focus(); }, 10) $("#vaction_hot_dest").hide(); }); for (i = 0; i < newStor.length; i++) { var newSearch = document.createElement('a'); newSearch.setAttribute("href", "###"); if (localStorage.getItem(newStor[i])) { newSearch.innerHTML = localStorage.getItem(newStor[i]); $('.search_history_box').append(newSearch); } } $('.search_history_box a').bind('mousedown', function() { $('#txtVacationDestCity').value(this.innerHTML); setTimeout(function() { $('#txtVacationDestCity')[0].focus(); }, 10) $("#vaction_hot_dest").hide(); //$('.city_select_lhsl').css('display','none'); }); if ($('#tab_box_hot_selected')) { $('#china_hot_city').bind('mousedown', function() { $('#tab_box_hot_selected').find('li').removeClass('hot_selected'); $(this).addClass('hot_selected'); $('#china_city_item').css('display', 'block'); $('#for_city_item').css('display', 'none'); }); $('#for_hot_city').bind('mousedown', function() { $('#tab_box_hot_selected').find('li').removeClass('hot_selected'); $(this).addClass('hot_selected'); $('#china_city_item').css('display', 'none'); $('#for_city_item').css('display', 'block'); }); } //关闭联想词 $("#vacation_search_word .close").bind('mousedown', function() { $("#vacation_search_word").hide() }); $('#vacation_search_word .airport_item').bind('mousedown', function(e) { var e = e || event, row = e.srcElement ? e.srcElement : e.target; _this = $(row); if (_this.hasClass("vacation_extend_word")) { $('#txtVacationDestCity').value(_this.attr("data-name")); $('#txtVacationDestCity').attr("transfer", _this.attr("transfer")); setTimeout(function() { $('#txtVacationDestCity')[0].focus(); }, 10) $("#vacation_search_word").hide(); } //$('.city_select_lhsl').css('display','none'); }); } }, //初始化事件 initData = function() { //热门目的地区域 var _suggestion = document.createElement("div"); _suggestion.innerHTML = suggestionTpl; $(_suggestion).appendTo($('body')); //热门目的地 $("#vaction_hot_dest").css('top', _dom.offset().top + _dom[0].clientHeight + 'px').css('left', _dom.offset().left + 'px'); //联想词区域 $("#vacation_search_word").css('top', _dom.offset().top + _dom[0].clientHeight + 'px').css('left', _dom.offset().left + 'px'); Core.bind(_body, "click", function(event) { $("#vaction_hot_dest").hide(); $("#vacation_search_word").hide(); }); _dom.bind("click", function(e) { e.stopPropagation(); if (!_dom.value() || $("#vacation_search_word")[0].style.display == 'none') { $("#vaction_hot_dest").show(); } $("#startcityDiv").hide(); }); $("#vaction_hot_dest").bind("click", function(e) { e.stopPropagation(); }) $("#vacation_search_word").bind("click", function(e) { e.stopPropagation(); }) //热门目的地 suggestionTplInt.call(this); onInputChange.call(this) }, //输入框输入事件 onInputChange = function() { if (navigator.appVersion.indexOf('MSIE 7') != -1 || navigator.appVersion.indexOf('MSIE 8') != -1 || navigator.appVersion.indexOf('MSIE 9') != -1) { cQuery(_iptDestCity).bind('keyup', function(e) { //过滤空格和特殊字符 var _val = _iptDestCity.value.replace(/\s*/g, "").replace(/[~'!<>@#$%^&*()-+_=:]/g, ""); if (_val) { $("#vaction_hot_dest").hide(); inputTime && window.clearTimeout(inputTime); inputTime = window.setTimeout(function() { sendDataVacationSearch(_val); }, 200) } else { $("#vacation_search_word").hide(); $("#vaction_hot_dest").show(); } }) } else { Core.bind(_iptDestCity, 'input', function(e) { //过滤空格和特殊字符 var _val = _iptDestCity.value.replace(/\s*/g, "").replace(/[~'!<>@#$%^&*()-+_=:]/g, ""); inputTime && window.clearTimeout(inputTime); if (_val) { $("#vaction_hot_dest").hide(); inputTime = window.setTimeout(function() { sendDataVacationSearch(_val); }, 200) } else { $("#vacation_search_word").hide(); $("#vaction_hot_dest").show(); } }) } }, //请求数据 sendDataVacationSearch = function(key) { cQuery.jsonp(VacationConfig.AddressDataUrl + escape(key), { onload: function(data) { var dataCon = (typeof data === "string") ? cQuery.parseJSON(data) : data; if (dataCon && dataCon.length) { var resultArr = []; if (dataCon[0].result.indexOf('|') != -1) { resultArr = dataCon[0].result.split('@'); } //TODO:将数据整合渲染模板 resultArr = resultArr.map(function(item) { return item.split('|'); }); //TODO:初始化主列表数组 var searchArr = []; var _searchResultHtml = ''; resultArr.each(function(item) { searchArr.push({ transfer: '{"keyword":"' + item[2] + '","eName":"' + item[3] + '","poid":"' + item[0] + '","poids":"' + item[1] + '","datatype":"' + item[4] + '","dataSource":"' + item[5] + '","MatchUrl":"' + item[6] + '","ParentPoid":"' + item[7] + '"}', name: item[2], poid: item[0], parentName: item[8] }); }); // 重复的需要显示父级名称，没有重复的不需要 (function(data) { var ar = data; var flag = 0; for (var i = 0; i < ar.length; i++) { flag = 0; for (var j = 0; j < ar.length; j++) { if (ar[i].name == ar[j].name) { ++flag; } } ar[i].showParent = flag >= 2 ? true : false; } })(searchArr); searchArr.each(function(item) { if (item['name']) { if (item['showParent'] && item['parentName']) { _searchResultHtml += '' + item['name'] + '(' + item['parentName'] + ')'; } else { if (item['name']) { _searchResultHtml += '' + item['name'] + ''; } } } }); //TODO:初始化搜索数组,和传输数组，包含 //var searchData = { 'data': searchArr}; $("#vacation_search_word .airport_item").html(""); if (!_searchResultHtml) { //无结果提示 $("#no_found_vacation").html('对不起，找不到：' + key) } else { $("#no_found_vacation").html('') $("#vacation_search_word .airport_item").html(_searchResultHtml); } $("#vacation_search_word").show(); } } }) }; init(); }, tipLoc = function(pAim, pTip) { var _pos = UI.Dom.position(pAim); pTip.style.top = _pos.y + pAim.clientHeight + "px"; pTip.style.left = _pos.x + "px"; }, defaultTip = function(pDom) { var _defaultTip = pDom.getAttribute("data-default"); pDom.value = ""; if (pDom.value == _defaultTip) { //pDom.value=_defaultTip;//input_default UI.Dom.addClass(pDom, "inputSel"); } else { UI.Dom.removeClass(pDom, "inputSel"); } var removeValue; var hidelabel = document.createElement("label"); hidelabel.id = pDom.id + "_lablel"; pDom.setAttribute("name", pDom.id); $("#" + pDom.id).attr("name", pDom.id); hidelabel.innerHTML = _defaultTip; hidelabel.setAttribute("for", pDom.id); hidelabel.style.cssText = "display:inline;position:absolute;cursor:text;top:7px;right:78px;*right:42px;"; hidelabel.className = "inputSel"; pDom.parentNode.appendChild(hidelabel); pDom.parentNode.style.position = "relative"; hidelabel.onclick = function() { pDom.focus(); } Core.bind(pDom, "focus", function() { removeValue = setInterval(function() { try { if (pDom.value == "") { hidelabel.style.display = "inline"; } else { hidelabel.style.display = "none"; } } catch (e) {} }, 50); }); Core.bind(pDom, "blur", function() { clearInterval(removeValue); }); }, vacationSearch = function(pDom, pAppendParam) { //将搜索记录存入localstore var hisStor = ['hisStor1', 'hisStor2', 'hisStor3', 'hisStor4', 'hisStor5', 'hisStor6', 'hisStor7']; var history_text = $('#txtVacationDestCity').value(); //将每一次的新数据存进去，最多存7条 for (i = 0; i < hisStor.length; i++) { //不是第七条时候依次存储 if (!localStorage.getItem(hisStor[i]) && i != 6) { var stateHis = true; //判断重复 for (j = 0; j < 6; j++) { if (localStorage.getItem(hisStor[j]) && localStorage.getItem(hisStor[j]) == history_text) { //重新排序 for (z = j; z > 0; z--) { localStorage.setItem(hisStor[z], localStorage.getItem(hisStor[z - 1])); } localStorage.setItem(hisStor[0], history_text); stateHis = false; } } if (stateHis) { for (z = i; z > 0; z--) { localStorage.setItem(hisStor[z], localStorage.getItem(hisStor[z - 1])); } localStorage.setItem(hisStor[0], history_text); } break; } //第七条直接替换 if (i == 6) { var stateHis = true; for (j = 0; j < 6; j++) { if (localStorage.getItem(hisStor[j]) && localStorage.getItem(hisStor[j]) == history_text) { for (z = j; z > 0; z--) { localStorage.setItem(hisStor[z], localStorage.getItem(hisStor[z - 1])); } localStorage.setItem(hisStor[0], history_text); stateHis = false; } } if (stateHis) { for (z = 6; z > 0; z--) { localStorage.setItem(hisStor[z], localStorage.getItem(hisStor[z - 1])); } localStorage.setItem(hisStor[0], history_text); } break; } } //删除第七条数据 if (localStorage.getItem('hisStor7')) { localStorage.removeItem('hisStor7'); } var _dataVal = pDom.getAttribute("data-val"); if (ctmref) { var _param = { StartCity: _startCity, SearchText: pDom.value, SearchType: "U", SearchValue: pDom.value, SearchID: 0, SearchFrom: location.href, CtmRef: ctmref }; } else { var _param = { StartCity: _startCity, SearchText: pDom.value, SearchType: "U", SearchValue: pDom.value, SearchID: 0, SearchFrom: location.href }; } if (_dataVal != null) { var _arr = _dataVal.split("|"); if (_arr.length > 2) { var _args = _arr[2].split("$"); if (_args.length > 2 && _arr[1] === pDom.value) { _param.SearchID = _args[2]; _param.SearchType = _args[1]; _param.SearchValue = _args[0]; } } } if (pAppendParam) { for (var name in pAppendParam) { _param[name] = pAppendParam[name]; } } _param = ''; _param = { keyword: escape(pDom.value) } if ($(pDom).attr('transfer')) { var searchValue = $.parseJSON($(pDom).attr('transfer')); _param = cQuery.extend(_param, searchValue); } UI.Dom.sumbitForm(_param, window.VacationConfig.VacationSearchUrl, "get"); }, initCity = function() { var me = this; var startCityInterval; var startCityTpl = '×\
    支持中文/拼音/简拼输入

\
    \
热门\
ABCD\
EFGH\
JKLM\
NPQRS\
TWX\
YZ\
    \
    \ 北京\ 上海\ 天津\ 青岛\ 南京\ 杭州\ 厦门\ 成都\ 深圳\ 广州\ 沈阳\ 武汉\
    \
    \
    \
    \
    \
    \
    \
    \
    \
    \
    \
    \
'; var startCitySearchTpl = '
    ' + '×' + '若需缩小范围，请输入更多条件。' + '

    ' + '
    ' + '
    '; var isinstr = function(s, d) { try { if (s.toLowerCase().indexOf(d.toLowerCase()) == -1) return false; return true; } catch (e) { return false; } } //热门城市div var hotcityDiv = document.createElement('div'); $('body').append(hotcityDiv); hotcityDiv.setAttribute('id', 'startcityDiv'); $(hotcityDiv).html(startCityTpl); $(hotcityDiv).addClass('city_select_lhsl').css('display', 'none').css('position', 'absolute').css('z-index', 99).css('top', $(_iptStartCity).offset().top + $(_iptStartCity)[0].clientHeight + 'px').css('left', $(_iptStartCity).offset().left + 'px'); //售卖站搜索结果div var searchSaleCityDiv = document.createElement('div'); $('body').append(searchSaleCityDiv); searchSaleCityDiv.setAttribute('id', 'search_sale_city'); $(searchSaleCityDiv).html(startCitySearchTpl); $(searchSaleCityDiv).addClass('keyword_prompting_lhsl').css('display', 'none').css('width', '300px').css('position', 'absolute').css('z-index', 99).css('top', $(_iptStartCity).offset().top + $(_iptStartCity)[0].clientHeight + 'px').css('left', $(_iptStartCity).offset().left + 'px'); _panelStartCity = document.getElementById("startcityDiv") _searchStartCity = document.getElementById('search_sale_city'); //请求售卖站数据，必须是有回调的接口 cQuery.jsonp('https://vacations.ctrip.com/handler/HomePages/DeptCities?from=ctrip', { onload: function(data) { //售卖站数据按首字母分组 var saleCityList = new Array(26); var cityData = data.ResponseValue; vacationSearchData = data.ResponseValue; for (var i = 0; i < saleCityList.length; i++) { saleCityList[i] = new Array(); } for (var i = 0; i < cityData.length; i++) { for (var j = 65; j <= 90; j++) { if (cityData[i]["PrefixLetter"] != null && cityData[i]["PrefixLetter"] != "" && cityData[i]["PrefixLetter"].toUpperCase().charCodeAt() == j) { saleCityList[j - 65].push(cityData[i]); } } } //按照字母分组分别插入html for (var i = 0; i < saleCityList.length; i++) { var tempList = saleCityList[i]; if (tempList && tempList.length > 0) { var cityHTML = '' + String.fromCharCode(i + 65) + ''; for (var j = 0; j < tempList.length; j++) { cityHTML += '' + tempList[j]["Name"] + '' } var newCityDiv = document.createElement('div'); $(newCityDiv).addClass('city_item_in').css('width', '378px').css('padding-left', '30px').css("float", "left"); newCityDiv.innerHTML = cityHTML; if (i <= 3) { $('.city_item[data-item="1"]').append(newCityDiv); } else if (i <= 7) { $('.city_item[data-item="2"]').append(newCityDiv); } else if (i <= 12) { $('.city_item[data-item="3"]').append(newCityDiv); } else if (i <= 18) { $('.city_item[data-item="4"]').append(newCityDiv); } else if (i <= 23) { $('.city_item[data-item="5"]').append(newCityDiv); } else if (i <= 25) { $('.city_item[data-item="6"]').append(newCityDiv); } } } //首字母tab切换 $('.tab_box>li[data-tag]').bind('click', function() { var listIndex = $(this).attr('data-tag'); $('.tab_box>li[data-tag]').removeClass('hot_selected'); $(this).addClass('hot_selected'); $('.city_item[data-item]').each(function(i, n) { if ($(i).attr('data-item') == listIndex) { $(i)[0].style.display = 'block'; } else { $(i)[0].style.display = 'none'; } }); }); $('#startcityDiv .close').bind('click', function() { $('#startcityDiv')[0].style.display = 'none'; /*if(navigator.appVersion.indexOf('MSIE 9') != -1){ clearInterval(startCityInterval); } */ }); $('#search_sale_city .close').bind('click', function() { $('#search_sale_city')[0].style.display = 'none'; /*if(navigator.appVersion.indexOf('MSIE 9') != -1){ clearInterval(startCityInterval); } */ }); Core.bind(_iptStartCity, 'focus', function(e) { var $this = $(this); if ($('#search_sale_city')[0].style.display == "none") { $('#startcityDiv').css('display', 'block'); } }); Core.bind(_iptStartCity, 'click', function(e) { $("#vaction_hot_dest").hide(); $("#vacation_search_word").hide(); e.stopPropagation(); }); Core.bind(_panelStartCity, "click", function(event) { var _tar = event.target; if (_tar.getAttribute("data-id")) { _panelStartCity.style.display = "none"; VacationConfig.StartCity = _startCity = _tar.getAttribute("data-id"); _iptStartCity.value = _tar.innerHTML; /*if(navigator.appVersion.indexOf('MSIE 9') != -1){ clearInterval(startCityInterval); }*/ //ie7，8下此时会触发propertychange事件，先把搜索列表和所有城市列表隐藏 if (navigator.appVersion.indexOf('MSIE 7') != -1 || navigator.appVersion.indexOf('MSIE 8') != -1) { $('#startcityDiv').css('display', 'none'); $('#search_sale_city').css('display', 'none'); } var _arr = document.getElementById("solution").value.split('|'), domainValue; switch (_arr[0]) { case "PRO": domainValue = ".ctrip.com"; break; case "UAT_NT": domainValue = ".uat.qa.nt.ctripcorp.com"; break; case "TEST": domainValue = ".test.sh.ctriptravel.com"; break; } var cookieValue = 'PkgStartCity=' + _tar.getAttribute("data-id"); document.cookie = 'StartCity_Pkg=' + cookieValue + ';domain=' + domainValue + ';path=/'; } event.stopPropagation(); }); Core.bind(_searchStartCity, "click", function(event) { var _tar = event.target; if (_tar.getAttribute("data-id")) { /*if(navigator.appVersion.indexOf('MSIE 9') != -1){ clearInterval(startCityInterval); } */ _searchStartCity.style.display = "none"; VacationConfig.StartCity = _startCity = _tar.getAttribute("data-id"); _iptStartCity.value = _tar.innerHTML; //ie7，8下此时会触发propertychange事件，先把搜索列表和所有城市列表隐藏 if (navigator.appVersion.indexOf('MSIE 7') != -1 || navigator.appVersion.indexOf('MSIE 8') != -1) { $('#startcityDiv').css('display', 'none'); $('#search_sale_city').css('display', 'none'); } var _arr = document.getElementById("solution").value.split('|'), domainValue; switch (_arr[0]) { case "PRO": domainValue = ".ctrip.com"; break; case "UAT_NT": domainValue = ".uat.qa.nt.ctripcorp.com"; break; case "TEST": domainValue = ".test.sh.ctriptravel.com"; break; } var cookieValue = 'PkgStartCity=' + _tar.getAttribute("data-id"); document.cookie = 'StartCity_Pkg=' + cookieValue + ';domain=' + domainValue + ';path=/'; } if ($(_tar).hasClass('close')) { _searchStartCity.style.display = "none"; /*if(navigator.appVersion.indexOf('MSIE 9') != -1){ clearInterval(startCityInterval); }*/ } event.stopPropagation(); }); Core.bind(_body, "click", function(event) { $('#startcityDiv').css('display', 'none'); $('#search_sale_city').css('display', 'none'); $("#vaction_hot_dest").hide(); /*if(navigator.appVersion.indexOf('MSIE 9') != -1){ clearInterval(startCityInterval); }*/ }); Core.bind(window, "resize", function(event) { tipLoc(_iptStartCity, _panelStartCity); if ($('#search_sale_city')) { $('#search_sale_city').css('top', $(_iptStartCity).offset().top + $(_iptStartCity)[0].clientHeight + 'px').css('left', $(_iptStartCity).offset().left + 'px'); } if ($('#startcityDiv')) { $('#startcityDiv').css('top', $(_iptStartCity).offset().top + $(_iptStartCity)[0].clientHeight + 'px').css('left', $(_iptStartCity).offset().left + 'px'); } }); initStartCity.call(me); //迁移至此，所有html都渲染完毕之后再行初始化 //ie7,8下初始化出发城市input也会trigger propertychange事件 if (navigator.appVersion.indexOf('MSIE 7') != -1 || navigator.appVersion.indexOf('MSIE 8') != -1) { $('#startcityDiv').css('display', 'none'); $('#search_sale_city').css('display', 'none'); } } }); }, initSearch = function() { var me = this; defaultTip(_iptDestCity); //目的地控件 new SearchAddress($(_iptDestCity)); //埋点需求 var vacation_page_config = {}; //获取登录信息 function getQueryString(str, name) { var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i"); var r = str.match(reg); if (r != null) return unescape(r[2]); return null; } if (Cmd.Cookie.GetCookie("CtripUserInfo")) { vacation_page_config['uid'] = getQueryString(Cmd.Cookie.GetCookie("CtripUserInfo"), 'U'); } var vacation_page_id = cQuery("#page_id").value(); //特卖汇埋点 cQuery(".tmh_in").bind("click", function() { var tmhValue = { "uid": vacation_page_config['uid'], "pageid": vacation_page_id }; window.__bfi.push(["_tracklog", "vac_entry_fromhome_deals", cQuery.stringifyJSON(tmhValue)]) }) //快词点击 cQuery("#vacationTab .s_links a").bind("click", function() { var _this = cQuery(this), tabValue = _this.parentNode().find('span')[0].innerHTML.split("：")[0], quickValue = { "tab": tabValue, "kwd": _this.html(), "uid": vacation_page_config['uid'], "pageid": vacation_page_id }; window.__bfi.push(["_tracklog", "vac_entry_fromhome_quick_click", cQuery.stringifyJSON(quickValue)]) }) var ins = $("#vacationTab").regMod('validate', PluginsVersion.validate); Core.bind(_btnSearch, "click", function() { var _val = _iptDestCity.value.replace(/\s|\t|\n|\r/g, ""); if (_val !== "" && _val !== _iptDestCity.getAttribute("data-default")) { $("#iptVacationSearchBtn").attr("class", "s_btn s_btn_ing"); $("#iptVacationSearchBtn").attr("value", "搜索中..."); ctmref = "ctm_ref=ctr_hp_sb_lst"; var searchBtnValue = { "dcity": cQuery("#txtVacationStartCity").value(), "acity": cQuery("#txtVacationDestCity").value(), "uid": vacation_page_config['uid'], "pageid": vacation_page_id }; window.__bfi.push(["_tracklog", "vac_entry_fromhome_searchbtn_click", cQuery.stringifyJSON(searchBtnValue)]) vacationSearch.call(me, _iptDestCity); ins.method("hide"); } else { ins.method("show", { $obj: $(_iptDestCity), data: "请输入内容！", removeErrorClass: true, hideEvent: "blur", isFocus: true, isScroll: false }); } }); }, init = function() { var me = this; //initStartCity.call(me);//在initCity方法中再调用initStartCity因为initCity中js才开始渲染旅游出发地的html initCity.call(me); initSearch.call(me); if (_encode === "big5") { var _a = $("#vacationTab a"); for (var i = 0, l = _a.length; i < l; i++) { _a[i].href = _a[i].href.replace("http://vacations.ctrip.com", "http://vacations.big5.ctrip.com"); } } }; init(); } $.ready(function() { new VacationSearch(); }); })(); /*****env:2,update:2013-11-27 0:09:47*****/ var vacationSF = function() { $.ready(function() { //cquery的append必须是页面中一个存在的节点，增加特卖会的快速入口 if ($("#vacationTab") && $("#vacationTab").find('a').length == 0) { var tmh_html = document.createElement('a'); tmh_html.innerHTML = "特卖汇"; tmh_html.setAttribute("href", "http://vacations.ctrip.com/deals"); tmh_html.setAttribute("class", "tmh_in"); setTimeout(function() { if (!cQuery.browser.isIPad) { document.getElementById("txtVacationDestCity").focus(); } }, 100); if (localStorage.getItem("hisStor1")) { cQuery("#txtVacationDestCity").value(localStorage.getItem("hisStor1")); cQuery("#txtVacationDestCity_lablel").css("display", "none"); } $("#vacationTab").append(tmh_html); } }); }; /*****env:2,update:2014-2-10 17:40:46*****/ /*将搜索记录放在目的地*/ (function() { cQuery.jsonp("https://vacations.ctrip.com/Package-Booking-VacationsOnlineSiteUI/Handler2/GetLastSearchWord.ashx", { onload: function(data) { if (data.ResponseValue && data.ResponseValue.search && data.ResponseValue.search.Value) { var keyWord = data.ResponseValue.search.Value; if (keyWord) { var history = keyWord.toLowerCase().replace(/\s/g, "").split("keyword=")[1]; if (history && history.split("&")[0]) { if (cQuery("#txtVacationDestCity").length > 0) cQuery("#txtVacationDestCity").value(history.split("&")[0]); if (cQuery("#txtVacationDestCity_lable").length > 0) cQuery("#txtVacationDestCity_lablel").css("display", "none"); } } } } }) })(); (function() { $('#divVacationStartCity').css('border', '1px solid #999'); $('.departures_sequence').find('span').css('color', '#E56700').css('background-color', '#fff'); if ($('#divVacationStartCity') && (/ipad/i).test(navigator.userAgent.toLowerCase())) { var html = document.createElement('span'); html.innerHTML = 'X'; $(html).css('color', '#E56700').css('position', 'absolute').css('right', '5px').css('top', '2px').css('font-size', '20px'); $('#divVacationStartCity').append(html); } })(); //根据时间判断活动图片 (function() { //上线时间：2月29日 00：00：00 //下线时间：4月30日 23：59：59 function convertTimes(str) { str = str.split('-'); var date = new Date(); date.setUTCFullYear(str[0], str[1] - 1, str[2]); date.setUTCHours(0, 0, 0, 0); return date.getTime(); } var timeNow = convertTimes((new Date()).getFullYear() + "-" + (parseInt((new Date()).getMonth()) + 1) + "-" + (new Date()).getDate()); var startTime = convertTimes("2016-2-29"); var endTime = convertTimes("2016-04-04"); if (startTime <= timeNow && timeNow < endTime) { //在当前时间区间内 $(".tmh_in").attr("href", "http://vacations.ctrip.com/marketing/2016spring.html"); $(".tmh_in >img").attr("src", "http://images3.c-ctrip.com/dj/201602/cjdc_15040.png"); $(".tmh_in >img")[0].onload = function() { $(".tmh_in").show(); } } else { $(".tmh_in").show(); } })(); /*****$endoflist$*****/